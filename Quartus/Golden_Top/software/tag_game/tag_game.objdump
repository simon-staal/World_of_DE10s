
tag_game.elf:     file format elf32-littlenios2
tag_game.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040228

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x0001159c memsz 0x0001159c flags r-x
    LOAD off    0x000125bc vaddr 0x000515bc paddr 0x000531c0 align 2**12
         filesz 0x00001c04 memsz 0x00001c04 flags rw-
    LOAD off    0x00014dc4 vaddr 0x00054dc4 paddr 0x00054dc4 align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000208  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010c94  00040228  00040228  00001228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000700  00050ebc  00050ebc  00011ebc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c04  000515bc  000531c0  000125bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  00054dc4  00054dc4  00014dc4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  00054f1c  00054f1c  000141c0  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  000141c0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000011e0  00000000  00000000  000141f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   00035712  00000000  00000000  000153d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000cfa9  00000000  00000000  0004aae2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00019287  00000000  00000000  00057a8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  000027bc  00000000  00000000  00070d14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    000042d1  00000000  00000000  000734d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001f5c3  00000000  00000000  000777a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000010  00000000  00000000  00096d64  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000026a0  00000000  00000000  00096d78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  0009ca77  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0009ca7a  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0009ca7d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0009ca7e  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  0009ca7f  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  0009ca88  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  0009ca91  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000012  00000000  00000000  0009ca9a  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000032  00000000  00000000  0009caac  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040228 l    d  .text	00000000 .text
00050ebc l    d  .rodata	00000000 .rodata
000515bc l    d  .rwdata	00000000 .rwdata
00054dc4 l    d  .bss	00000000 .bss
00054f1c l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/intelFPGA_lite/ip_labs/cw/quartus_v2/Golden_Top/software/tag_game_bsp//obj/HAL/src/crt0.o
00040260 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 fclose.c
000404b4 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00040960 l     F .text	00000008 __fp_lock
00040974 l     F .text	00000008 __fp_unlock
0004097c l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 ftello.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
000515bc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
00042884 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00044eac l     F .text	000000c0 __sbprintf
00050fac l     O .rodata	00000010 blanks.1
00050f9c l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
0004518c l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00051060 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 vfprintf.c
00048c04 l     F .text	000000f4 __sprint_r.part.0
0004a070 l     F .text	000000c0 __sbprintf
00051194 l     O .rodata	00000010 blanks.1
00051184 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0004e3bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004e4d4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004e538 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0004e650 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0004e73c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004e8a4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004e990 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
0004eb70 l     F .text	0000003c alt_get_errno
0004ebac l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
0004ede8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000531b0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0004f054 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004f194 l     F .text	00000034 alt_dev_reg
000520fc l     O .rwdata	00001060 jtag_uart
0005315c l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004f488 l     F .text	00000210 altera_avalon_jtag_uart_irq
0004f698 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0004fcdc l     F .text	00000080 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
000502f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00050714 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00054df0 g     O .bss	00000004 alt_instruction_exception_handler
000484f0 g     F .text	00000070 _mprec_log10
000485dc g     F .text	00000060 __any_on
00047074 g     F .text	00000058 _isatty_r
0005106c g     O .rodata	00000028 __mprec_tinytens
0004eaac g     F .text	0000007c alt_main
000427a8 g     F .text	000000cc _puts_r
00054e1c g     O .bss	00000100 alt_irq
000470ec g     F .text	00000064 _lseek_r
000531c0 g       *ABS*	00000000 __flash_rwdata_start
00046af4 g     F .text	000000b8 __sflags
0004ce9c g     F .text	00000080 .hidden __eqdf2
00054f1c g       *ABS*	00000000 __alt_heap_start
0004ae58 g     F .text	00000060 _kill_r
0004a824 g     F .text	0000006c _wcrtomb_r
0004a9c8 g     F .text	00000098 _signal_r
00042c90 g     F .text	0000005c __sseek
00040cc4 g     F .text	00000010 __sinit
0004a6c4 g     F .text	00000148 __swbuf_r
0004a4c4 g     F .text	00000074 _setlocale_r
00040ae4 g     F .text	00000078 __sfmoreglue
0004eb4c g     F .text	00000024 __malloc_unlock
00047320 g     F .text	0000012c memmove
00040cb0 g     F .text	00000014 _cleanup
0004744c g     F .text	000000a4 _Balloc
0004cf1c g     F .text	000000e8 .hidden __gtdf2
00050b90 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000000c __reset
000470cc g     F .text	00000008 __localeconv_l
0004ff28 g     F .text	000000d4 alt_up_accelerometer_spi_read_x_axis
00040020 g       *ABS*	00000000 __flash_exceptions_start
00041698 g     F .text	00000060 _fstat_r
00054dc4 g     O .bss	00000004 errno
00042ae0 g     F .text	0000007c __srget
00042c08 g     F .text	00000008 __seofread
00054ddc g     O .bss	00000004 alt_argv
0005b188 g       *ABS*	00000000 _gp
0004e630 g     F .text	00000020 getpid
00051f7c g     O .rwdata	00000180 alt_fd_list
00041b20 g     F .text	0000007c _getc_r
00041b9c g     F .text	00000090 getc
00040264 g     F .text	0000011c activegame
000504a4 g     F .text	00000090 alt_find_dev
00047220 g     F .text	00000100 memcpy
00040968 g     F .text	0000000c _cleanup_r
0004e220 g     F .text	000000b8 .hidden __floatsidf
000507e8 g     F .text	0000007c alt_io_redirect
0004d004 g     F .text	000000e8 .hidden __ltdf2
00050ebc g       *ABS*	00000000 __DTOR_END__
00042874 g     F .text	00000010 puts
00050bb4 g     F .text	00000098 alt_exception_cause_generated_bad_addr
0004844c g     F .text	000000a4 __ratio
0004a054 g     F .text	0000001c __vfiprintf_internal
0004f894 g     F .text	00000220 altera_avalon_jtag_uart_read
0004bb94 g     F .text	00000064 .hidden __udivsi3
0004e68c g     F .text	000000b0 isatty
0004aa60 g     F .text	000000c4 _raise_r
0004a130 g     F .text	00000064 __assert_func
000510bc g     O .rodata	000000c8 __mprec_tens
00054dd0 g     O .bss	00000004 __malloc_top_pad
0004aeb8 g     F .text	00000004 _getpid_r
000470d4 g     F .text	0000000c _localeconv_r
000478bc g     F .text	000000b0 __i2b
00046bac g     F .text	000004c8 __sfvwrite_r
0004ab24 g     F .text	000000bc __sigtramp_r
00042b5c g     F .text	00000058 _sbrk_r
0004863c g     F .text	00000064 _read_r
000531a8 g     O .rwdata	00000004 alt_max_fd
00040574 g     F .text	00000070 _fclose_r
000408dc g     F .text	00000084 fflush
00054dcc g     O .bss	00000004 __malloc_max_sbrked_mem
00050864 g     F .text	00000180 alt_irq_register
0004bc7c g     F .text	000008f0 .hidden __adddf3
000481e0 g     F .text	00000108 __b2d
0004b4dc g     F .text	000005c4 .hidden __umoddi3
0004e9cc g     F .text	000000e0 lseek
00053188 g     O .rwdata	00000004 _global_impure_ptr
000486a0 g     F .text	00000564 _realloc_r
00054f1c g       *ABS*	00000000 __bss_end
00050a88 g     F .text	00000108 alt_tick
0004aebc g     F .text	00000620 .hidden __udivdi3
0004a428 g     F .text	00000024 _fputwc_r
00051094 g     O .rodata	00000028 __mprec_bigtens
00047670 g     F .text	00000138 __s2b
0004a954 g     F .text	00000018 abort
0004e2d8 g     F .text	00000090 .hidden __floatunsidf
00047f00 g     F .text	00000058 __mcmp
00040ce4 g     F .text	00000014 __fp_lock_all
000509e4 g     F .text	000000a4 alt_alarm_stop
00054de4 g     O .bss	00000004 alt_irq_active
00041298 g     F .text	000003e4 _fseeko_r
000400fc g     F .exceptions	000000cc alt_irq_handler
00051f54 g     O .rwdata	00000028 alt_dev_null
000502d8 g     F .text	00000020 alt_dcache_flush_all
000477a8 g     F .text	00000064 __hi0bits
0004e1a0 g     F .text	00000080 .hidden __fixdfsi
000531c0 g       *ABS*	00000000 __ram_rwdata_end
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory
000531a0 g     O .rwdata	00000008 alt_dev_list
0004f090 g     F .text	00000104 write
000515bc g       *ABS*	00000000 __ram_rodata_end
0004e574 g     F .text	000000bc fstat
00040e3c g     F .text	00000024 fprintf
0004e778 g     F .text	0000012c kill
0004d004 g     F .text	000000e8 .hidden __ledf2
00047c30 g     F .text	00000148 __pow5mult
00048d10 g     F .text	00001344 ___vfiprintf_internal_r
0004bbf8 g     F .text	0000005c .hidden __umodsi3
00054f1c g       *ABS*	00000000 end
0004167c g     F .text	0000001c fseeko
0004127c g     F .text	0000001c fseek
0004f3d4 g     F .text	000000b4 altera_avalon_jtag_uart_init
000401c8 g     F .exceptions	00000060 alt_instruction_exception_entry
00050ebc g       *ABS*	00000000 __CTOR_LIST__
0006bf20 g       *ABS*	00000000 __alt_stack_pointer
0004fd5c g     F .text	0000007c alt_avalon_timer_sc_init
0004e368 g     F .text	00000054 .hidden __clzsi2
0004fab4 g     F .text	00000228 altera_avalon_jtag_uart_write
00040cd4 g     F .text	00000004 __sfp_lock_acquire
00047150 g     F .text	000000d0 memchr
00042d8c g     F .text	00002104 ___vfprintf_internal_r
00040f7c g     F .text	000002fc _free_r
000512f8 g     O .rodata	00000180 _ctype_b
0004a538 g     F .text	0000000c __locale_mb_cur_max
00050d9c g     F .text	00000120 __call_exitprocs
00042a6c g     F .text	00000074 __srget_r
00053190 g     O .rwdata	00000004 __malloc_sbrk_base
00040228 g     F .text	0000003c _start
00054de8 g     O .bss	00000004 _alt_tick_rate
00041814 g     F .text	00000010 ftello
00047d78 g     F .text	00000188 __lshift
00054dec g     O .bss	00000004 _alt_nticks
0004ac9c g     F .text	000000a0 signal
0004ee24 g     F .text	00000108 read
0004f204 g     F .text	0000006c alt_sys_init
0004fe14 g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
00042744 g     F .text	00000064 _open_r
00050d0c g     F .text	00000090 __register_exitproc
0004796c g     F .text	000002c4 __multiply
0004f738 g     F .text	00000068 altera_avalon_jtag_uart_close
0004bc54 g     F .text	00000028 .hidden __mulsi3
000515bc g       *ABS*	00000000 __ram_rwdata_start
00050ebc g       *ABS*	00000000 __ram_rodata_start
00054df4 g     O .bss	00000028 __malloc_current_mallinfo
000482e8 g     F .text	00000164 __d2b
0004f270 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0005063c g     F .text	000000b8 alt_get_fd
0004fffc g     F .text	000000d4 alt_up_accelerometer_spi_read_y_axis
00045134 g     F .text	00000058 _close_r
00050c94 g     F .text	00000078 memcmp
0004f330 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00054f1c g       *ABS*	00000000 __alt_stack_base
0004f380 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00041964 g     F .text	000000d8 _fwrite_r
000416f8 g     F .text	0000011c _ftello_r
00044fd0 g     F .text	00000164 __swsetup_r
0004c56c g     F .text	00000930 .hidden __divdf3
00040b5c g     F .text	00000154 __sfp
00048560 g     F .text	0000007c __copybits
000519e0 g     O .rwdata	00000408 __malloc_av_
00040ce0 g     F .text	00000004 __sinit_lock_release
0004d0ec g     F .text	000007ac .hidden __muldf3
00042bb4 g     F .text	00000054 __sread
00050534 g     F .text	00000108 alt_find_file
00050334 g     F .text	000000a8 alt_dev_llist_insert
0004eb28 g     F .text	00000024 __malloc_lock
00040e14 g     F .text	00000028 _fprintf_r
0004ef9c g     F .text	000000b8 sbrk
0004087c g     F .text	00000060 _fflush_r
0004a1a8 g     F .text	000000c4 _calloc_r
00040dfc g     F .text	00000018 fopen
00054dc4 g       *ABS*	00000000 __bss_start
00042654 g     F .text	000000f0 memset
00040380 g     F .text	00000134 main
00054de0 g     O .bss	00000004 alt_envp
00054dc8 g     O .bss	00000004 __malloc_max_total_mem
0004f2d0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004a80c g     F .text	00000018 __swbuf
00042cec g     F .text	00000008 __sclose
0006bf20 g       *ABS*	00000000 __alt_heap_limit
000405e4 g     F .text	00000070 fclose
000453ac g     F .text	00001748 _dtoa_r
00041e74 g     F .text	000007e0 _malloc_r
0004a924 g     F .text	00000030 __ascii_wctomb
000531ac g     O .rwdata	00000004 alt_errno
0004a26c g     F .text	00000020 _fiprintf_r
0004ad3c g     F .text	00000060 _init_signal
00041824 g     F .text	00000098 _fwalk
0004a5b8 g     F .text	0000000c _mbtowc_r
0004baa0 g     F .text	00000080 .hidden __divsi3
00040e60 g     F .text	0000011c _malloc_trim_r
00050ebc g       *ABS*	00000000 __CTOR_END__
0004a608 g     F .text	000000b8 strcmp
00050ebc g       *ABS*	00000000 __flash_rodata_start
00050ebc g       *ABS*	00000000 __DTOR_LIST__
0004ce9c g     F .text	00000080 .hidden __nedf2
0004f1c8 g     F .text	0000003c alt_irq_init
0004ef2c g     F .text	00000070 alt_release_fd
00051478 g     O .rodata	00000100 .hidden __clz_tab
00054dd4 g     O .bss	00000004 _PathLocale
00050c4c g     F .text	00000014 atexit
00044f6c g     F .text	00000064 _write_r
0004a544 g     F .text	00000074 setlocale
0005318c g     O .rwdata	00000004 _impure_ptr
00054dd8 g     O .bss	00000004 alt_argc
00040654 g     F .text	00000228 __sflush_r
00050440 g     F .text	00000064 _do_dtors
00041278 g     F .text	00000004 _fseek_r
000428a0 g     F .text	000001cc __srefill_r
00040020 g       .exceptions	00000000 alt_irq_entry
0004a5c4 g     F .text	00000044 __ascii_mbtowc
00048184 g     F .text	0000005c __ulp
00040cf8 g     F .text	00000014 __fp_unlock_all
00053198 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
0004fdd8 g     F .text	0000003c alt_up_accelerometer_spi_open_dev
000470e0 g     F .text	0000000c localeconv
00041ddc g     F .text	00000098 __swhatbuf_r
00041a3c g     F .text	000000e4 fwrite
000531c0 g       *ABS*	00000000 _edata
00054f1c g       *ABS*	00000000 _end
0004a2c4 g     F .text	00000164 __fputwc
00040228 g       *ABS*	00000000 __ram_exceptions_end
0004f7a0 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00042c10 g     F .text	00000080 __swrite
00053194 g     O .rwdata	00000004 __malloc_trim_threshold
00050c60 g     F .text	00000034 exit
0004a28c g     F .text	00000038 fiprintf
0004a6c0 g     F .text	00000004 _vfiprintf_r
000418bc g     F .text	000000a8 _fwalk_reent
00047f58 g     F .text	0000022c __mdiff
0004bb20 g     F .text	00000074 .hidden __modsi3
000500d0 g     F .text	000000d4 alt_up_accelerometer_spi_read_z_axis
0006bf20 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00040cd8 g     F .text	00000004 __sfp_lock_release
000511f4 g     O .rodata	00000101 _ctype_
0004e14c g     F .text	00000054 .hidden __unorddf2
00040d0c g     F .text	000000f0 _fopen_r
0004e500 g     F .text	00000038 _exit
000501a4 g     F .text	00000134 alt_alarm_start
0004fe58 g     F .text	00000068 alt_up_accelerometer_spi_read
0004fec0 g     F .text	00000068 alt_up_accelerometer_spi_write
00041c2c g     F .text	000001b0 __smakebuf_r
00042cf4 g     F .text	00000098 strlen
0004a96c g     F .text	0000005c _init_signal_r
0004ec88 g     F .text	00000160 open
0004cf1c g     F .text	000000e8 .hidden __gedf2
0004a194 g     F .text	00000014 __assert
00048cf8 g     F .text	00000018 __sprint_r
000506f4 g     F .text	00000020 alt_icache_flush_all
000531b4 g     O .rwdata	00000004 alt_priority_mask
00044e90 g     F .text	0000001c __vfprintf_internal
0004a918 g     F .text	0000000c _wctomb_r
0004d898 g     F .text	000008b4 .hidden __subdf3
0004780c g     F .text	000000b0 __lo0bits
000531b8 g     O .rwdata	00000008 alt_alarm_list
000503dc g     F .text	00000064 _do_ctors
0004ad9c g     F .text	000000bc __sigtramp
0004a890 g     F .text	00000088 wcrtomb
0004e3f8 g     F .text	000000dc close
00051de8 g     O .rwdata	0000016c __global_locale
0004e90c g     F .text	00000084 alt_load
0004a44c g     F .text	00000078 fputwc
0004abe0 g     F .text	000000bc raise
00040cdc g     F .text	00000004 __sinit_lock_acquire
00047514 g     F .text	0000015c __multadd
000474f0 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40000:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40004:	08408a14 	ori	at,at,552
    jmp r1
   40008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401c80 	call	401c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   40118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0ffff17 	ldw	r3,-4(fp)
   40130:	e0bffe17 	ldw	r2,-8(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001226 	beq	r2,zero,40184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   4013c:	e0bffd17 	ldw	r2,-12(fp)
   40140:	100690fa 	slli	r3,r2,3
   40144:	00800174 	movhi	r2,5
   40148:	1885883a 	add	r2,r3,r2
   4014c:	10d38717 	ldw	r3,19996(r2)
   40150:	e0bffd17 	ldw	r2,-12(fp)
   40154:	100890fa 	slli	r4,r2,3
   40158:	00800174 	movhi	r2,5
   4015c:	2085883a 	add	r2,r4,r2
   40160:	10938817 	ldw	r2,20000(r2)
   40164:	e17ffd17 	ldw	r5,-12(fp)
   40168:	1009883a 	mov	r4,r2
   4016c:	183ee83a 	callr	r3
#endif
        break;
   40170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   40174:	0005313a 	rdctl	r2,ipending
   40178:	e0bffb15 	stw	r2,-20(fp)
  return active;
   4017c:	e0bffb17 	ldw	r2,-20(fp)
   40180:	00000706 	br	401a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
   40184:	e0bffe17 	ldw	r2,-8(fp)
   40188:	1085883a 	add	r2,r2,r2
   4018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   40190:	e0bffd17 	ldw	r2,-12(fp)
   40194:	10800044 	addi	r2,r2,1
   40198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   4019c:	003fe306 	br	4012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   401a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   401a4:	e0bfff17 	ldw	r2,-4(fp)
   401a8:	103fdd1e 	bne	r2,zero,40120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401ac:	0001883a 	nop
}
   401b0:	0001883a 	nop
   401b4:	e037883a 	mov	sp,fp
   401b8:	dfc00117 	ldw	ra,4(sp)
   401bc:	df000017 	ldw	fp,0(sp)
   401c0:	dec00204 	addi	sp,sp,8
   401c4:	f800283a 	ret

000401c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401c8:	defffb04 	addi	sp,sp,-20
   401cc:	dfc00415 	stw	ra,16(sp)
   401d0:	df000315 	stw	fp,12(sp)
   401d4:	df000304 	addi	fp,sp,12
   401d8:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   401dc:	00bfffc4 	movi	r2,-1
   401e0:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
   401e4:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401e8:	d0a71a17 	ldw	r2,-25496(gp)
   401ec:	10000726 	beq	r2,zero,4020c <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   401f0:	d0a71a17 	ldw	r2,-25496(gp)
   401f4:	e0ffff17 	ldw	r3,-4(fp)
   401f8:	e1bffe17 	ldw	r6,-8(fp)
   401fc:	e17ffd17 	ldw	r5,-12(fp)
   40200:	1809883a 	mov	r4,r3
   40204:	103ee83a 	callr	r2
   40208:	00000206 	br	40214 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   4020c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   40210:	0005883a 	mov	r2,zero
}
   40214:	e037883a 	mov	sp,fp
   40218:	dfc00117 	ldw	ra,4(sp)
   4021c:	df000017 	ldw	fp,0(sp)
   40220:	dec00204 	addi	sp,sp,8
   40224:	f800283a 	ret

Disassembly of section .text:

00040228 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40228:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   4022c:	deefc814 	ori	sp,sp,48928
    movhi gp, %hi(_gp)
   40230:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40234:	d6ac6214 	ori	gp,gp,45448
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40238:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   4023c:	10937114 	ori	r2,r2,19908

    movhi r3, %hi(__bss_end)
   40240:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40244:	18d3c714 	ori	r3,r3,20252

    beq r2, r3, 1f
   40248:	10c00326 	beq	r2,r3,40258 <_start+0x30>

0:
    stw zero, (r2)
   4024c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   40250:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40254:	10fffd36 	bltu	r2,r3,4024c <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40258:	004e90c0 	call	4e90c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   4025c:	004eaac0 	call	4eaac <alt_main>

00040260 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40260:	003fff06 	br	40260 <alt_after_alt_main>

00040264 <activegame>:
#include "sys/alt_irq.h"
#include <stdlib.h>
#include <sys/alt_stdio.h>

char activegame(FILE* fp, alt_32 x, alt_32 y)
{
   40264:	defffa04 	addi	sp,sp,-24
   40268:	dfc00515 	stw	ra,20(sp)
   4026c:	df000415 	stw	fp,16(sp)
   40270:	df000404 	addi	fp,sp,16
   40274:	e13ffe15 	stw	r4,-8(fp)
   40278:	e17ffd15 	stw	r5,-12(fp)
   4027c:	e1bffc15 	stw	r6,-16(fp)
    alt_32 radius = 50;
   40280:	00800c84 	movi	r2,50
   40284:	e0bfff15 	stw	r2,-4(fp)
    }else{
    	printf ("Opened acc device \n");
    }
	*/
    // fprintf(fp, "<--> x : %d, y : %d, radius : %d <--> \n", x, y, radius);
	if((abs(x) > abs(y)) && (abs(x) > radius)){
   40288:	e0bffd17 	ldw	r2,-12(fp)
   4028c:	1000010e 	bge	r2,zero,40294 <activegame+0x30>
   40290:	0085c83a 	sub	r2,zero,r2
   40294:	1007883a 	mov	r3,r2
   40298:	e0bffc17 	ldw	r2,-16(fp)
   4029c:	1000010e 	bge	r2,zero,402a4 <activegame+0x40>
   402a0:	0085c83a 	sub	r2,zero,r2
   402a4:	10c0160e 	bge	r2,r3,40300 <activegame+0x9c>
   402a8:	e0bffd17 	ldw	r2,-12(fp)
   402ac:	1000010e 	bge	r2,zero,402b4 <activegame+0x50>
   402b0:	0085c83a 	sub	r2,zero,r2
   402b4:	1007883a 	mov	r3,r2
   402b8:	e0bfff17 	ldw	r2,-4(fp)
   402bc:	10c0100e 	bge	r2,r3,40300 <activegame+0x9c>
		    if(x > 0){
   402c0:	e0bffd17 	ldw	r2,-12(fp)
   402c4:	0080070e 	bge	zero,r2,402e4 <activegame+0x80>
		    	fprintf(fp, "<--> A <--> \n");
   402c8:	e1fffe17 	ldw	r7,-8(fp)
   402cc:	01800344 	movi	r6,13
   402d0:	01400044 	movi	r5,1
   402d4:	01000174 	movhi	r4,5
   402d8:	2103af04 	addi	r4,r4,3772
   402dc:	0041a3c0 	call	41a3c <fwrite>
		    if(x > 0){
   402e0:	00001c06 	br	40354 <activegame+0xf0>
		    }else{
		    	fprintf(fp, "<--> D <--> \n");
   402e4:	e1fffe17 	ldw	r7,-8(fp)
   402e8:	01800344 	movi	r6,13
   402ec:	01400044 	movi	r5,1
   402f0:	01000174 	movhi	r4,5
   402f4:	2103b304 	addi	r4,r4,3788
   402f8:	0041a3c0 	call	41a3c <fwrite>
		    if(x > 0){
   402fc:	00001506 	br	40354 <activegame+0xf0>
		    }
	}else if(abs(y) > radius){
   40300:	e0bffc17 	ldw	r2,-16(fp)
   40304:	1000010e 	bge	r2,zero,4030c <activegame+0xa8>
   40308:	0085c83a 	sub	r2,zero,r2
   4030c:	1007883a 	mov	r3,r2
   40310:	e0bfff17 	ldw	r2,-4(fp)
   40314:	10c00f0e 	bge	r2,r3,40354 <activegame+0xf0>
		if( y > 0){
   40318:	e0bffc17 	ldw	r2,-16(fp)
   4031c:	0080070e 	bge	zero,r2,4033c <activegame+0xd8>
			fprintf(fp, "<--> S <--> \n");
   40320:	e1fffe17 	ldw	r7,-8(fp)
   40324:	01800344 	movi	r6,13
   40328:	01400044 	movi	r5,1
   4032c:	01000174 	movhi	r4,5
   40330:	2103b704 	addi	r4,r4,3804
   40334:	0041a3c0 	call	41a3c <fwrite>
   40338:	00000606 	br	40354 <activegame+0xf0>
		}else{
			fprintf(fp, "<--> W <--> \n");
   4033c:	e1fffe17 	ldw	r7,-8(fp)
   40340:	01800344 	movi	r6,13
   40344:	01400044 	movi	r5,1
   40348:	01000174 	movhi	r4,5
   4034c:	2103bb04 	addi	r4,r4,3820
   40350:	0041a3c0 	call	41a3c <fwrite>
		}
	}else{}
	fprintf(fp, "<--> END <--> \n %c", 0x4);
   40354:	01800104 	movi	r6,4
   40358:	01400174 	movhi	r5,5
   4035c:	2943bf04 	addi	r5,r5,3836
   40360:	e13ffe17 	ldw	r4,-8(fp)
   40364:	0040e3c0 	call	40e3c <fprintf>
}
   40368:	0001883a 	nop
   4036c:	e037883a 	mov	sp,fp
   40370:	dfc00117 	ldw	ra,4(sp)
   40374:	df000017 	ldw	fp,0(sp)
   40378:	dec00204 	addi	sp,sp,8
   4037c:	f800283a 	ret

00040380 <main>:

int main()
{
   40380:	defff904 	addi	sp,sp,-28
   40384:	dfc00615 	stw	ra,24(sp)
   40388:	df000515 	stw	fp,20(sp)
   4038c:	df000504 	addi	fp,sp,20
	printf("Running..\n");
   40390:	01000174 	movhi	r4,5
   40394:	2103c404 	addi	r4,r4,3856
   40398:	00428740 	call	42874 <puts>
	FILE* fp;
	char prompt = 0;
   4039c:	e03fffc5 	stb	zero,-1(fp)
	char output;

	alt_32 x = 0;
   403a0:	e03ffc15 	stw	zero,-16(fp)
	alt_32 y = 0;
   403a4:	e03ffb15 	stw	zero,-20(fp)
	alt_16 radius = 50;
   403a8:	00800c84 	movi	r2,50
   403ac:	e0bfff0d 	sth	r2,-4(fp)

	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev ("/dev/accelerometer_spi");
   403b0:	01000174 	movhi	r4,5
   403b4:	2103c704 	addi	r4,r4,3868
   403b8:	004fdd80 	call	4fdd8 <alt_up_accelerometer_spi_open_dev>
   403bc:	e0bffe15 	stw	r2,-8(fp)
	    usleep(10000); // 0.1sec
	    // printf("\n");
	}
	*/
	// Access stream of data through the jtag_uart in the variable fp
	fp = fopen ("/dev/jtag_uart", "r+"); // r+ opens a file for reading and updating
   403c0:	01400174 	movhi	r5,5
   403c4:	2943cd04 	addi	r5,r5,3892
   403c8:	01000174 	movhi	r4,5
   403cc:	2103ce04 	addi	r4,r4,3896
   403d0:	0040dfc0 	call	40dfc <fopen>
   403d4:	e0bffd15 	stw	r2,-12(fp)

	if (fp) {
   403d8:	e0bffd17 	ldw	r2,-12(fp)
   403dc:	10002c26 	beq	r2,zero,40490 <main+0x110>
		// here 'v' is used as the character to stop the program
		while (prompt != 'v') {
   403e0:	00002606 	br	4047c <main+0xfc>
			// accept the character that has been sent down
			do prompt = getc(fp); while (prompt == -1);
   403e4:	e13ffd17 	ldw	r4,-12(fp)
   403e8:	0041b9c0 	call	41b9c <getc>
   403ec:	e0bfffc5 	stb	r2,-1(fp)
   403f0:	e0bfffc7 	ldb	r2,-1(fp)
   403f4:	10bfffe0 	cmpeqi	r2,r2,-1
   403f8:	103ffa1e 	bne	r2,zero,403e4 <main+0x64>
			if (prompt != 'v' && prompt != '\xff') {
   403fc:	e0bfffc7 	ldb	r2,-1(fp)
   40400:	10801da0 	cmpeqi	r2,r2,118
   40404:	1000111e 	bne	r2,zero,4044c <main+0xcc>
   40408:	e0bfffc7 	ldb	r2,-1(fp)
   4040c:	10bfffe0 	cmpeqi	r2,r2,-1
   40410:	10000e1e 	bne	r2,zero,4044c <main+0xcc>
				alt_up_accelerometer_spi_read_x_axis(acc_dev, &x);
   40414:	e0bffc04 	addi	r2,fp,-16
   40418:	100b883a 	mov	r5,r2
   4041c:	e13ffe17 	ldw	r4,-8(fp)
   40420:	004ff280 	call	4ff28 <alt_up_accelerometer_spi_read_x_axis>
				alt_up_accelerometer_spi_read_y_axis(acc_dev, &y);
   40424:	e0bffb04 	addi	r2,fp,-20
   40428:	100b883a 	mov	r5,r2
   4042c:	e13ffe17 	ldw	r4,-8(fp)
   40430:	004fffc0 	call	4fffc <alt_up_accelerometer_spi_read_y_axis>

				activegame(fp, x, y);
   40434:	e0bffc17 	ldw	r2,-16(fp)
   40438:	e0fffb17 	ldw	r3,-20(fp)
   4043c:	180d883a 	mov	r6,r3
   40440:	100b883a 	mov	r5,r2
   40444:	e13ffd17 	ldw	r4,-12(fp)
   40448:	00402640 	call	40264 <activegame>
				}
				*/
				// print to JTAG UART
				// fprintf(fp, "<--> %c <--> \n %c", output, 0x4);
			}
			if (ferror(fp)) {
   4044c:	e0bffd17 	ldw	r2,-12(fp)
   40450:	1080030b 	ldhu	r2,12(r2)
   40454:	10bfffcc 	andi	r2,r2,65535
   40458:	1080100c 	andi	r2,r2,64
   4045c:	10000726 	beq	r2,zero,4047c <main+0xfc>
				clearerr(fp);
   40460:	e0bffd17 	ldw	r2,-12(fp)
   40464:	10c0030b 	ldhu	r3,12(r2)
   40468:	00bfe7c4 	movi	r2,-97
   4046c:	1884703a 	and	r2,r3,r2
   40470:	1007883a 	mov	r3,r2
   40474:	e0bffd17 	ldw	r2,-12(fp)
   40478:	10c0030d 	sth	r3,12(r2)
		while (prompt != 'v') {
   4047c:	e0bfffc7 	ldb	r2,-1(fp)
   40480:	10801d98 	cmpnei	r2,r2,118
   40484:	103fd71e 	bne	r2,zero,403e4 <main+0x64>
			}
		}

		// fprintf(fp, "Closing the JTAG UART file handle.\n %c",0x4);
		fclose(fp);
   40488:	e13ffd17 	ldw	r4,-12(fp)
   4048c:	00405e40 	call	405e4 <fclose>
	}

	printf("Complete\n");
   40490:	01000174 	movhi	r4,5
   40494:	2103d204 	addi	r4,r4,3912
   40498:	00428740 	call	42874 <puts>

	return 0;
   4049c:	0005883a 	mov	r2,zero
}
   404a0:	e037883a 	mov	sp,fp
   404a4:	dfc00117 	ldw	ra,4(sp)
   404a8:	df000017 	ldw	fp,0(sp)
   404ac:	dec00204 	addi	sp,sp,8
   404b0:	f800283a 	ret

000404b4 <_fclose_r.part.0>:
   404b4:	defffc04 	addi	sp,sp,-16
   404b8:	dc800215 	stw	r18,8(sp)
   404bc:	dc400115 	stw	r17,4(sp)
   404c0:	dc000015 	stw	r16,0(sp)
   404c4:	dfc00315 	stw	ra,12(sp)
   404c8:	2821883a 	mov	r16,r5
   404cc:	2023883a 	mov	r17,r4
   404d0:	00406540 	call	40654 <__sflush_r>
   404d4:	80c00b17 	ldw	r3,44(r16)
   404d8:	1025883a 	mov	r18,r2
   404dc:	18000426 	beq	r3,zero,404f0 <_fclose_r.part.0+0x3c>
   404e0:	81400717 	ldw	r5,28(r16)
   404e4:	8809883a 	mov	r4,r17
   404e8:	183ee83a 	callr	r3
   404ec:	10001916 	blt	r2,zero,40554 <_fclose_r.part.0+0xa0>
   404f0:	8080030b 	ldhu	r2,12(r16)
   404f4:	1080200c 	andi	r2,r2,128
   404f8:	10001a1e 	bne	r2,zero,40564 <_fclose_r.part.0+0xb0>
   404fc:	81400c17 	ldw	r5,48(r16)
   40500:	28000526 	beq	r5,zero,40518 <_fclose_r.part.0+0x64>
   40504:	80801004 	addi	r2,r16,64
   40508:	28800226 	beq	r5,r2,40514 <_fclose_r.part.0+0x60>
   4050c:	8809883a 	mov	r4,r17
   40510:	0040f7c0 	call	40f7c <_free_r>
   40514:	80000c15 	stw	zero,48(r16)
   40518:	81401117 	ldw	r5,68(r16)
   4051c:	28000326 	beq	r5,zero,4052c <_fclose_r.part.0+0x78>
   40520:	8809883a 	mov	r4,r17
   40524:	0040f7c0 	call	40f7c <_free_r>
   40528:	80001115 	stw	zero,68(r16)
   4052c:	0040cd40 	call	40cd4 <__sfp_lock_acquire>
   40530:	8000030d 	sth	zero,12(r16)
   40534:	0040cd80 	call	40cd8 <__sfp_lock_release>
   40538:	9005883a 	mov	r2,r18
   4053c:	dfc00317 	ldw	ra,12(sp)
   40540:	dc800217 	ldw	r18,8(sp)
   40544:	dc400117 	ldw	r17,4(sp)
   40548:	dc000017 	ldw	r16,0(sp)
   4054c:	dec00404 	addi	sp,sp,16
   40550:	f800283a 	ret
   40554:	8080030b 	ldhu	r2,12(r16)
   40558:	04bfffc4 	movi	r18,-1
   4055c:	1080200c 	andi	r2,r2,128
   40560:	103fe626 	beq	r2,zero,404fc <_fclose_r.part.0+0x48>
   40564:	81400417 	ldw	r5,16(r16)
   40568:	8809883a 	mov	r4,r17
   4056c:	0040f7c0 	call	40f7c <_free_r>
   40570:	003fe206 	br	404fc <_fclose_r.part.0+0x48>

00040574 <_fclose_r>:
   40574:	28001926 	beq	r5,zero,405dc <_fclose_r+0x68>
   40578:	defffd04 	addi	sp,sp,-12
   4057c:	dc000115 	stw	r16,4(sp)
   40580:	dfc00215 	stw	ra,8(sp)
   40584:	2021883a 	mov	r16,r4
   40588:	20000226 	beq	r4,zero,40594 <_fclose_r+0x20>
   4058c:	20800e17 	ldw	r2,56(r4)
   40590:	10000c26 	beq	r2,zero,405c4 <_fclose_r+0x50>
   40594:	2880030f 	ldh	r2,12(r5)
   40598:	1000051e 	bne	r2,zero,405b0 <_fclose_r+0x3c>
   4059c:	0005883a 	mov	r2,zero
   405a0:	dfc00217 	ldw	ra,8(sp)
   405a4:	dc000117 	ldw	r16,4(sp)
   405a8:	dec00304 	addi	sp,sp,12
   405ac:	f800283a 	ret
   405b0:	8009883a 	mov	r4,r16
   405b4:	dfc00217 	ldw	ra,8(sp)
   405b8:	dc000117 	ldw	r16,4(sp)
   405bc:	dec00304 	addi	sp,sp,12
   405c0:	00404b41 	jmpi	404b4 <_fclose_r.part.0>
   405c4:	d9400015 	stw	r5,0(sp)
   405c8:	0040cc40 	call	40cc4 <__sinit>
   405cc:	d9400017 	ldw	r5,0(sp)
   405d0:	2880030f 	ldh	r2,12(r5)
   405d4:	103ff126 	beq	r2,zero,4059c <_fclose_r+0x28>
   405d8:	003ff506 	br	405b0 <_fclose_r+0x3c>
   405dc:	0005883a 	mov	r2,zero
   405e0:	f800283a 	ret

000405e4 <fclose>:
   405e4:	20000826 	beq	r4,zero,40608 <fclose+0x24>
   405e8:	00800174 	movhi	r2,5
   405ec:	200b883a 	mov	r5,r4
   405f0:	110c6317 	ldw	r4,12684(r2)
   405f4:	20000226 	beq	r4,zero,40600 <fclose+0x1c>
   405f8:	20800e17 	ldw	r2,56(r4)
   405fc:	10000526 	beq	r2,zero,40614 <fclose+0x30>
   40600:	2880030f 	ldh	r2,12(r5)
   40604:	1000021e 	bne	r2,zero,40610 <fclose+0x2c>
   40608:	0005883a 	mov	r2,zero
   4060c:	f800283a 	ret
   40610:	00404b41 	jmpi	404b4 <_fclose_r.part.0>
   40614:	defffd04 	addi	sp,sp,-12
   40618:	d9400115 	stw	r5,4(sp)
   4061c:	d9000015 	stw	r4,0(sp)
   40620:	dfc00215 	stw	ra,8(sp)
   40624:	0040cc40 	call	40cc4 <__sinit>
   40628:	d9400117 	ldw	r5,4(sp)
   4062c:	d9000017 	ldw	r4,0(sp)
   40630:	2880030f 	ldh	r2,12(r5)
   40634:	10000326 	beq	r2,zero,40644 <fclose+0x60>
   40638:	dfc00217 	ldw	ra,8(sp)
   4063c:	dec00304 	addi	sp,sp,12
   40640:	00404b41 	jmpi	404b4 <_fclose_r.part.0>
   40644:	0005883a 	mov	r2,zero
   40648:	dfc00217 	ldw	ra,8(sp)
   4064c:	dec00304 	addi	sp,sp,12
   40650:	f800283a 	ret

00040654 <__sflush_r>:
   40654:	2880030b 	ldhu	r2,12(r5)
   40658:	defffb04 	addi	sp,sp,-20
   4065c:	dcc00315 	stw	r19,12(sp)
   40660:	dc000015 	stw	r16,0(sp)
   40664:	dfc00415 	stw	ra,16(sp)
   40668:	dc800215 	stw	r18,8(sp)
   4066c:	dc400115 	stw	r17,4(sp)
   40670:	10c0020c 	andi	r3,r2,8
   40674:	2821883a 	mov	r16,r5
   40678:	2027883a 	mov	r19,r4
   4067c:	18003f1e 	bne	r3,zero,4077c <__sflush_r+0x128>
   40680:	28c00117 	ldw	r3,4(r5)
   40684:	10820014 	ori	r2,r2,2048
   40688:	2880030d 	sth	r2,12(r5)
   4068c:	00c0550e 	bge	zero,r3,407e4 <__sflush_r+0x190>
   40690:	82000a17 	ldw	r8,40(r16)
   40694:	40003126 	beq	r8,zero,4075c <__sflush_r+0x108>
   40698:	9c400017 	ldw	r17,0(r19)
   4069c:	1104000c 	andi	r4,r2,4096
   406a0:	98000015 	stw	zero,0(r19)
   406a4:	81400717 	ldw	r5,28(r16)
   406a8:	1007883a 	mov	r3,r2
   406ac:	2000521e 	bne	r4,zero,407f8 <__sflush_r+0x1a4>
   406b0:	01c00044 	movi	r7,1
   406b4:	000d883a 	mov	r6,zero
   406b8:	9809883a 	mov	r4,r19
   406bc:	403ee83a 	callr	r8
   406c0:	10ffffd8 	cmpnei	r3,r2,-1
   406c4:	18005826 	beq	r3,zero,40828 <__sflush_r+0x1d4>
   406c8:	80c0030b 	ldhu	r3,12(r16)
   406cc:	82000a17 	ldw	r8,40(r16)
   406d0:	81400717 	ldw	r5,28(r16)
   406d4:	18c0010c 	andi	r3,r3,4
   406d8:	18000626 	beq	r3,zero,406f4 <__sflush_r+0xa0>
   406dc:	81000117 	ldw	r4,4(r16)
   406e0:	80c00c17 	ldw	r3,48(r16)
   406e4:	1105c83a 	sub	r2,r2,r4
   406e8:	18000226 	beq	r3,zero,406f4 <__sflush_r+0xa0>
   406ec:	80c00f17 	ldw	r3,60(r16)
   406f0:	10c5c83a 	sub	r2,r2,r3
   406f4:	100d883a 	mov	r6,r2
   406f8:	000f883a 	mov	r7,zero
   406fc:	9809883a 	mov	r4,r19
   40700:	403ee83a 	callr	r8
   40704:	10ffffd8 	cmpnei	r3,r2,-1
   40708:	18003d1e 	bne	r3,zero,40800 <__sflush_r+0x1ac>
   4070c:	99000017 	ldw	r4,0(r19)
   40710:	80c0030b 	ldhu	r3,12(r16)
   40714:	20004e26 	beq	r4,zero,40850 <__sflush_r+0x1fc>
   40718:	21400760 	cmpeqi	r5,r4,29
   4071c:	2800021e 	bne	r5,zero,40728 <__sflush_r+0xd4>
   40720:	210005a0 	cmpeqi	r4,r4,22
   40724:	20002c26 	beq	r4,zero,407d8 <__sflush_r+0x184>
   40728:	80800417 	ldw	r2,16(r16)
   4072c:	18fdffcc 	andi	r3,r3,63487
   40730:	80c0030d 	sth	r3,12(r16)
   40734:	80000115 	stw	zero,4(r16)
   40738:	80800015 	stw	r2,0(r16)
   4073c:	81400c17 	ldw	r5,48(r16)
   40740:	9c400015 	stw	r17,0(r19)
   40744:	28000526 	beq	r5,zero,4075c <__sflush_r+0x108>
   40748:	80801004 	addi	r2,r16,64
   4074c:	28800226 	beq	r5,r2,40758 <__sflush_r+0x104>
   40750:	9809883a 	mov	r4,r19
   40754:	0040f7c0 	call	40f7c <_free_r>
   40758:	80000c15 	stw	zero,48(r16)
   4075c:	0005883a 	mov	r2,zero
   40760:	dfc00417 	ldw	ra,16(sp)
   40764:	dcc00317 	ldw	r19,12(sp)
   40768:	dc800217 	ldw	r18,8(sp)
   4076c:	dc400117 	ldw	r17,4(sp)
   40770:	dc000017 	ldw	r16,0(sp)
   40774:	dec00504 	addi	sp,sp,20
   40778:	f800283a 	ret
   4077c:	2c800417 	ldw	r18,16(r5)
   40780:	903ff626 	beq	r18,zero,4075c <__sflush_r+0x108>
   40784:	2c400017 	ldw	r17,0(r5)
   40788:	108000cc 	andi	r2,r2,3
   4078c:	2c800015 	stw	r18,0(r5)
   40790:	8ca3c83a 	sub	r17,r17,r18
   40794:	1000161e 	bne	r2,zero,407f0 <__sflush_r+0x19c>
   40798:	28800517 	ldw	r2,20(r5)
   4079c:	80800215 	stw	r2,8(r16)
   407a0:	04400316 	blt	zero,r17,407b0 <__sflush_r+0x15c>
   407a4:	003fed06 	br	4075c <__sflush_r+0x108>
   407a8:	90a5883a 	add	r18,r18,r2
   407ac:	047feb0e 	bge	zero,r17,4075c <__sflush_r+0x108>
   407b0:	80800917 	ldw	r2,36(r16)
   407b4:	81400717 	ldw	r5,28(r16)
   407b8:	880f883a 	mov	r7,r17
   407bc:	900d883a 	mov	r6,r18
   407c0:	9809883a 	mov	r4,r19
   407c4:	103ee83a 	callr	r2
   407c8:	88a3c83a 	sub	r17,r17,r2
   407cc:	00bff616 	blt	zero,r2,407a8 <__sflush_r+0x154>
   407d0:	80c0030b 	ldhu	r3,12(r16)
   407d4:	00bfffc4 	movi	r2,-1
   407d8:	18c01014 	ori	r3,r3,64
   407dc:	80c0030d 	sth	r3,12(r16)
   407e0:	003fdf06 	br	40760 <__sflush_r+0x10c>
   407e4:	28c00f17 	ldw	r3,60(r5)
   407e8:	00ffa916 	blt	zero,r3,40690 <__sflush_r+0x3c>
   407ec:	003fdb06 	br	4075c <__sflush_r+0x108>
   407f0:	0005883a 	mov	r2,zero
   407f4:	003fe906 	br	4079c <__sflush_r+0x148>
   407f8:	80801417 	ldw	r2,80(r16)
   407fc:	003fb506 	br	406d4 <__sflush_r+0x80>
   40800:	80c0030b 	ldhu	r3,12(r16)
   40804:	81000417 	ldw	r4,16(r16)
   40808:	80000115 	stw	zero,4(r16)
   4080c:	197dffcc 	andi	r5,r3,63487
   40810:	8140030d 	sth	r5,12(r16)
   40814:	81000015 	stw	r4,0(r16)
   40818:	18c4000c 	andi	r3,r3,4096
   4081c:	183fc726 	beq	r3,zero,4073c <__sflush_r+0xe8>
   40820:	80801415 	stw	r2,80(r16)
   40824:	003fc506 	br	4073c <__sflush_r+0xe8>
   40828:	98c00017 	ldw	r3,0(r19)
   4082c:	183fa626 	beq	r3,zero,406c8 <__sflush_r+0x74>
   40830:	19000760 	cmpeqi	r4,r3,29
   40834:	20000e1e 	bne	r4,zero,40870 <__sflush_r+0x21c>
   40838:	18c00598 	cmpnei	r3,r3,22
   4083c:	18000c26 	beq	r3,zero,40870 <__sflush_r+0x21c>
   40840:	80c0030b 	ldhu	r3,12(r16)
   40844:	18c01014 	ori	r3,r3,64
   40848:	80c0030d 	sth	r3,12(r16)
   4084c:	003fc406 	br	40760 <__sflush_r+0x10c>
   40850:	81000417 	ldw	r4,16(r16)
   40854:	197dffcc 	andi	r5,r3,63487
   40858:	8140030d 	sth	r5,12(r16)
   4085c:	80000115 	stw	zero,4(r16)
   40860:	81000015 	stw	r4,0(r16)
   40864:	18c4000c 	andi	r3,r3,4096
   40868:	183fb426 	beq	r3,zero,4073c <__sflush_r+0xe8>
   4086c:	003fec06 	br	40820 <__sflush_r+0x1cc>
   40870:	9c400015 	stw	r17,0(r19)
   40874:	0005883a 	mov	r2,zero
   40878:	003fb906 	br	40760 <__sflush_r+0x10c>

0004087c <_fflush_r>:
   4087c:	defffd04 	addi	sp,sp,-12
   40880:	dc000115 	stw	r16,4(sp)
   40884:	dfc00215 	stw	ra,8(sp)
   40888:	2021883a 	mov	r16,r4
   4088c:	20000226 	beq	r4,zero,40898 <_fflush_r+0x1c>
   40890:	20800e17 	ldw	r2,56(r4)
   40894:	10000726 	beq	r2,zero,408b4 <_fflush_r+0x38>
   40898:	2880030f 	ldh	r2,12(r5)
   4089c:	10000a1e 	bne	r2,zero,408c8 <_fflush_r+0x4c>
   408a0:	0005883a 	mov	r2,zero
   408a4:	dfc00217 	ldw	ra,8(sp)
   408a8:	dc000117 	ldw	r16,4(sp)
   408ac:	dec00304 	addi	sp,sp,12
   408b0:	f800283a 	ret
   408b4:	d9400015 	stw	r5,0(sp)
   408b8:	0040cc40 	call	40cc4 <__sinit>
   408bc:	d9400017 	ldw	r5,0(sp)
   408c0:	2880030f 	ldh	r2,12(r5)
   408c4:	103ff626 	beq	r2,zero,408a0 <_fflush_r+0x24>
   408c8:	8009883a 	mov	r4,r16
   408cc:	dfc00217 	ldw	ra,8(sp)
   408d0:	dc000117 	ldw	r16,4(sp)
   408d4:	dec00304 	addi	sp,sp,12
   408d8:	00406541 	jmpi	40654 <__sflush_r>

000408dc <fflush>:
   408dc:	20001726 	beq	r4,zero,4093c <fflush+0x60>
   408e0:	00800174 	movhi	r2,5
   408e4:	200b883a 	mov	r5,r4
   408e8:	110c6317 	ldw	r4,12684(r2)
   408ec:	20000226 	beq	r4,zero,408f8 <fflush+0x1c>
   408f0:	20800e17 	ldw	r2,56(r4)
   408f4:	10000526 	beq	r2,zero,4090c <fflush+0x30>
   408f8:	2880030f 	ldh	r2,12(r5)
   408fc:	1000021e 	bne	r2,zero,40908 <fflush+0x2c>
   40900:	0005883a 	mov	r2,zero
   40904:	f800283a 	ret
   40908:	00406541 	jmpi	40654 <__sflush_r>
   4090c:	defffd04 	addi	sp,sp,-12
   40910:	d9400115 	stw	r5,4(sp)
   40914:	d9000015 	stw	r4,0(sp)
   40918:	dfc00215 	stw	ra,8(sp)
   4091c:	0040cc40 	call	40cc4 <__sinit>
   40920:	d9400117 	ldw	r5,4(sp)
   40924:	d9000017 	ldw	r4,0(sp)
   40928:	2880030f 	ldh	r2,12(r5)
   4092c:	10000826 	beq	r2,zero,40950 <fflush+0x74>
   40930:	dfc00217 	ldw	ra,8(sp)
   40934:	dec00304 	addi	sp,sp,12
   40938:	00406541 	jmpi	40654 <__sflush_r>
   4093c:	00800174 	movhi	r2,5
   40940:	110c6217 	ldw	r4,12680(r2)
   40944:	01400134 	movhi	r5,4
   40948:	29421f04 	addi	r5,r5,2172
   4094c:	00418bc1 	jmpi	418bc <_fwalk_reent>
   40950:	0005883a 	mov	r2,zero
   40954:	dfc00217 	ldw	ra,8(sp)
   40958:	dec00304 	addi	sp,sp,12
   4095c:	f800283a 	ret

00040960 <__fp_lock>:
   40960:	0005883a 	mov	r2,zero
   40964:	f800283a 	ret

00040968 <_cleanup_r>:
   40968:	01400134 	movhi	r5,4
   4096c:	29415d04 	addi	r5,r5,1396
   40970:	00418bc1 	jmpi	418bc <_fwalk_reent>

00040974 <__fp_unlock>:
   40974:	0005883a 	mov	r2,zero
   40978:	f800283a 	ret

0004097c <__sinit.part.0>:
   4097c:	00c00134 	movhi	r3,4
   40980:	20800117 	ldw	r2,4(r4)
   40984:	18c25a04 	addi	r3,r3,2408
   40988:	20c00f15 	stw	r3,60(r4)
   4098c:	2140bb04 	addi	r5,r4,748
   40990:	00c000c4 	movi	r3,3
   40994:	20c0b915 	stw	r3,740(r4)
   40998:	2140ba15 	stw	r5,744(r4)
   4099c:	2000b815 	stw	zero,736(r4)
   409a0:	10001705 	stb	zero,92(r2)
   409a4:	10001745 	stb	zero,93(r2)
   409a8:	10001785 	stb	zero,94(r2)
   409ac:	100017c5 	stb	zero,95(r2)
   409b0:	10001805 	stb	zero,96(r2)
   409b4:	10001845 	stb	zero,97(r2)
   409b8:	10001885 	stb	zero,98(r2)
   409bc:	100018c5 	stb	zero,99(r2)
   409c0:	00c00104 	movi	r3,4
   409c4:	10c00315 	stw	r3,12(r2)
   409c8:	02000134 	movhi	r8,4
   409cc:	20c00217 	ldw	r3,8(r4)
   409d0:	01c00134 	movhi	r7,4
   409d4:	01800134 	movhi	r6,4
   409d8:	01400134 	movhi	r5,4
   409dc:	420aed04 	addi	r8,r8,11188
   409e0:	39cb0404 	addi	r7,r7,11280
   409e4:	318b2404 	addi	r6,r6,11408
   409e8:	294b3b04 	addi	r5,r5,11500
   409ec:	02400074 	movhi	r9,1
   409f0:	10001915 	stw	zero,100(r2)
   409f4:	10000015 	stw	zero,0(r2)
   409f8:	10000115 	stw	zero,4(r2)
   409fc:	10000215 	stw	zero,8(r2)
   40a00:	10000415 	stw	zero,16(r2)
   40a04:	10000515 	stw	zero,20(r2)
   40a08:	10000615 	stw	zero,24(r2)
   40a0c:	10800715 	stw	r2,28(r2)
   40a10:	12000815 	stw	r8,32(r2)
   40a14:	11c00915 	stw	r7,36(r2)
   40a18:	11800a15 	stw	r6,40(r2)
   40a1c:	11400b15 	stw	r5,44(r2)
   40a20:	4a400284 	addi	r9,r9,10
   40a24:	1a400315 	stw	r9,12(r3)
   40a28:	18001915 	stw	zero,100(r3)
   40a2c:	18000015 	stw	zero,0(r3)
   40a30:	18000115 	stw	zero,4(r3)
   40a34:	18000215 	stw	zero,8(r3)
   40a38:	18000415 	stw	zero,16(r3)
   40a3c:	18001705 	stb	zero,92(r3)
   40a40:	18001745 	stb	zero,93(r3)
   40a44:	18001785 	stb	zero,94(r3)
   40a48:	180017c5 	stb	zero,95(r3)
   40a4c:	18001805 	stb	zero,96(r3)
   40a50:	18001845 	stb	zero,97(r3)
   40a54:	18001885 	stb	zero,98(r3)
   40a58:	180018c5 	stb	zero,99(r3)
   40a5c:	20800317 	ldw	r2,12(r4)
   40a60:	024000b4 	movhi	r9,2
   40a64:	18000515 	stw	zero,20(r3)
   40a68:	18000615 	stw	zero,24(r3)
   40a6c:	18c00715 	stw	r3,28(r3)
   40a70:	1a000815 	stw	r8,32(r3)
   40a74:	19c00915 	stw	r7,36(r3)
   40a78:	19800a15 	stw	r6,40(r3)
   40a7c:	19400b15 	stw	r5,44(r3)
   40a80:	4a400484 	addi	r9,r9,18
   40a84:	10001915 	stw	zero,100(r2)
   40a88:	10000015 	stw	zero,0(r2)
   40a8c:	10000115 	stw	zero,4(r2)
   40a90:	10000215 	stw	zero,8(r2)
   40a94:	12400315 	stw	r9,12(r2)
   40a98:	10000415 	stw	zero,16(r2)
   40a9c:	10000515 	stw	zero,20(r2)
   40aa0:	10000615 	stw	zero,24(r2)
   40aa4:	10001705 	stb	zero,92(r2)
   40aa8:	10001745 	stb	zero,93(r2)
   40aac:	10001785 	stb	zero,94(r2)
   40ab0:	100017c5 	stb	zero,95(r2)
   40ab4:	10001805 	stb	zero,96(r2)
   40ab8:	10001845 	stb	zero,97(r2)
   40abc:	10001885 	stb	zero,98(r2)
   40ac0:	100018c5 	stb	zero,99(r2)
   40ac4:	10800715 	stw	r2,28(r2)
   40ac8:	12000815 	stw	r8,32(r2)
   40acc:	11c00915 	stw	r7,36(r2)
   40ad0:	11800a15 	stw	r6,40(r2)
   40ad4:	11400b15 	stw	r5,44(r2)
   40ad8:	00800044 	movi	r2,1
   40adc:	20800e15 	stw	r2,56(r4)
   40ae0:	f800283a 	ret

00040ae4 <__sfmoreglue>:
   40ae4:	defffc04 	addi	sp,sp,-16
   40ae8:	dc800215 	stw	r18,8(sp)
   40aec:	2825883a 	mov	r18,r5
   40af0:	dc000015 	stw	r16,0(sp)
   40af4:	01401a04 	movi	r5,104
   40af8:	2021883a 	mov	r16,r4
   40afc:	913fffc4 	addi	r4,r18,-1
   40b00:	dfc00315 	stw	ra,12(sp)
   40b04:	dc400115 	stw	r17,4(sp)
   40b08:	004bc540 	call	4bc54 <__mulsi3>
   40b0c:	8009883a 	mov	r4,r16
   40b10:	11401d04 	addi	r5,r2,116
   40b14:	1023883a 	mov	r17,r2
   40b18:	0041e740 	call	41e74 <_malloc_r>
   40b1c:	1021883a 	mov	r16,r2
   40b20:	10000726 	beq	r2,zero,40b40 <__sfmoreglue+0x5c>
   40b24:	11000304 	addi	r4,r2,12
   40b28:	10000015 	stw	zero,0(r2)
   40b2c:	14800115 	stw	r18,4(r2)
   40b30:	11000215 	stw	r4,8(r2)
   40b34:	89801a04 	addi	r6,r17,104
   40b38:	000b883a 	mov	r5,zero
   40b3c:	00426540 	call	42654 <memset>
   40b40:	8005883a 	mov	r2,r16
   40b44:	dfc00317 	ldw	ra,12(sp)
   40b48:	dc800217 	ldw	r18,8(sp)
   40b4c:	dc400117 	ldw	r17,4(sp)
   40b50:	dc000017 	ldw	r16,0(sp)
   40b54:	dec00404 	addi	sp,sp,16
   40b58:	f800283a 	ret

00040b5c <__sfp>:
   40b5c:	defffb04 	addi	sp,sp,-20
   40b60:	00800174 	movhi	r2,5
   40b64:	dc000015 	stw	r16,0(sp)
   40b68:	140c6217 	ldw	r16,12680(r2)
   40b6c:	dc400115 	stw	r17,4(sp)
   40b70:	dfc00415 	stw	ra,16(sp)
   40b74:	80800e17 	ldw	r2,56(r16)
   40b78:	dcc00315 	stw	r19,12(sp)
   40b7c:	dc800215 	stw	r18,8(sp)
   40b80:	2023883a 	mov	r17,r4
   40b84:	10003126 	beq	r2,zero,40c4c <__sfp+0xf0>
   40b88:	8100ba17 	ldw	r4,744(r16)
   40b8c:	8140b917 	ldw	r5,740(r16)
   40b90:	04c00104 	movi	r19,4
   40b94:	8400b804 	addi	r16,r16,736
   40b98:	297fffc4 	addi	r5,r5,-1
   40b9c:	2800050e 	bge	r5,zero,40bb4 <__sfp+0x58>
   40ba0:	00002406 	br	40c34 <__sfp+0xd8>
   40ba4:	297fffc4 	addi	r5,r5,-1
   40ba8:	28bfffd8 	cmpnei	r2,r5,-1
   40bac:	21001a04 	addi	r4,r4,104
   40bb0:	10002026 	beq	r2,zero,40c34 <__sfp+0xd8>
   40bb4:	2080030f 	ldh	r2,12(r4)
   40bb8:	103ffa1e 	bne	r2,zero,40ba4 <__sfp+0x48>
   40bbc:	00bffff4 	movhi	r2,65535
   40bc0:	10800044 	addi	r2,r2,1
   40bc4:	20001915 	stw	zero,100(r4)
   40bc8:	20000015 	stw	zero,0(r4)
   40bcc:	20000115 	stw	zero,4(r4)
   40bd0:	20000215 	stw	zero,8(r4)
   40bd4:	20800315 	stw	r2,12(r4)
   40bd8:	20000415 	stw	zero,16(r4)
   40bdc:	20000515 	stw	zero,20(r4)
   40be0:	20000615 	stw	zero,24(r4)
   40be4:	20001705 	stb	zero,92(r4)
   40be8:	20001745 	stb	zero,93(r4)
   40bec:	20001785 	stb	zero,94(r4)
   40bf0:	200017c5 	stb	zero,95(r4)
   40bf4:	20001805 	stb	zero,96(r4)
   40bf8:	20001845 	stb	zero,97(r4)
   40bfc:	20001885 	stb	zero,98(r4)
   40c00:	200018c5 	stb	zero,99(r4)
   40c04:	20000c15 	stw	zero,48(r4)
   40c08:	20000d15 	stw	zero,52(r4)
   40c0c:	20001115 	stw	zero,68(r4)
   40c10:	20001215 	stw	zero,72(r4)
   40c14:	2005883a 	mov	r2,r4
   40c18:	dfc00417 	ldw	ra,16(sp)
   40c1c:	dcc00317 	ldw	r19,12(sp)
   40c20:	dc800217 	ldw	r18,8(sp)
   40c24:	dc400117 	ldw	r17,4(sp)
   40c28:	dc000017 	ldw	r16,0(sp)
   40c2c:	dec00504 	addi	sp,sp,20
   40c30:	f800283a 	ret
   40c34:	80800017 	ldw	r2,0(r16)
   40c38:	10000726 	beq	r2,zero,40c58 <__sfp+0xfc>
   40c3c:	11000217 	ldw	r4,8(r2)
   40c40:	11400117 	ldw	r5,4(r2)
   40c44:	1021883a 	mov	r16,r2
   40c48:	003fd306 	br	40b98 <__sfp+0x3c>
   40c4c:	8009883a 	mov	r4,r16
   40c50:	004097c0 	call	4097c <__sinit.part.0>
   40c54:	003fcc06 	br	40b88 <__sfp+0x2c>
   40c58:	01406b04 	movi	r5,428
   40c5c:	8809883a 	mov	r4,r17
   40c60:	0041e740 	call	41e74 <_malloc_r>
   40c64:	1025883a 	mov	r18,r2
   40c68:	10000c26 	beq	r2,zero,40c9c <__sfp+0x140>
   40c6c:	11000304 	addi	r4,r2,12
   40c70:	11000215 	stw	r4,8(r2)
   40c74:	000b883a 	mov	r5,zero
   40c78:	10000015 	stw	zero,0(r2)
   40c7c:	14c00115 	stw	r19,4(r2)
   40c80:	01806804 	movi	r6,416
   40c84:	00426540 	call	42654 <memset>
   40c88:	1009883a 	mov	r4,r2
   40c8c:	84800015 	stw	r18,0(r16)
   40c90:	014000c4 	movi	r5,3
   40c94:	9021883a 	mov	r16,r18
   40c98:	003fc606 	br	40bb4 <__sfp+0x58>
   40c9c:	80000015 	stw	zero,0(r16)
   40ca0:	00800304 	movi	r2,12
   40ca4:	88800015 	stw	r2,0(r17)
   40ca8:	0009883a 	mov	r4,zero
   40cac:	003fd906 	br	40c14 <__sfp+0xb8>

00040cb0 <_cleanup>:
   40cb0:	00800174 	movhi	r2,5
   40cb4:	110c6217 	ldw	r4,12680(r2)
   40cb8:	01400134 	movhi	r5,4
   40cbc:	29415d04 	addi	r5,r5,1396
   40cc0:	00418bc1 	jmpi	418bc <_fwalk_reent>

00040cc4 <__sinit>:
   40cc4:	20800e17 	ldw	r2,56(r4)
   40cc8:	10000126 	beq	r2,zero,40cd0 <__sinit+0xc>
   40ccc:	f800283a 	ret
   40cd0:	004097c1 	jmpi	4097c <__sinit.part.0>

00040cd4 <__sfp_lock_acquire>:
   40cd4:	f800283a 	ret

00040cd8 <__sfp_lock_release>:
   40cd8:	f800283a 	ret

00040cdc <__sinit_lock_acquire>:
   40cdc:	f800283a 	ret

00040ce0 <__sinit_lock_release>:
   40ce0:	f800283a 	ret

00040ce4 <__fp_lock_all>:
   40ce4:	00800174 	movhi	r2,5
   40ce8:	110c6317 	ldw	r4,12684(r2)
   40cec:	01400134 	movhi	r5,4
   40cf0:	29425804 	addi	r5,r5,2400
   40cf4:	00418241 	jmpi	41824 <_fwalk>

00040cf8 <__fp_unlock_all>:
   40cf8:	00800174 	movhi	r2,5
   40cfc:	110c6317 	ldw	r4,12684(r2)
   40d00:	01400134 	movhi	r5,4
   40d04:	29425d04 	addi	r5,r5,2420
   40d08:	00418241 	jmpi	41824 <_fwalk>

00040d0c <_fopen_r>:
   40d0c:	defffa04 	addi	sp,sp,-24
   40d10:	3007883a 	mov	r3,r6
   40d14:	dcc00415 	stw	r19,16(sp)
   40d18:	d80d883a 	mov	r6,sp
   40d1c:	2827883a 	mov	r19,r5
   40d20:	180b883a 	mov	r5,r3
   40d24:	dc800315 	stw	r18,12(sp)
   40d28:	dfc00515 	stw	ra,20(sp)
   40d2c:	dc400215 	stw	r17,8(sp)
   40d30:	dc000115 	stw	r16,4(sp)
   40d34:	2025883a 	mov	r18,r4
   40d38:	0046af40 	call	46af4 <__sflags>
   40d3c:	10002726 	beq	r2,zero,40ddc <_fopen_r+0xd0>
   40d40:	9009883a 	mov	r4,r18
   40d44:	1023883a 	mov	r17,r2
   40d48:	0040b5c0 	call	40b5c <__sfp>
   40d4c:	1021883a 	mov	r16,r2
   40d50:	10002226 	beq	r2,zero,40ddc <_fopen_r+0xd0>
   40d54:	d9800017 	ldw	r6,0(sp)
   40d58:	01c06d84 	movi	r7,438
   40d5c:	980b883a 	mov	r5,r19
   40d60:	9009883a 	mov	r4,r18
   40d64:	00427440 	call	42744 <_open_r>
   40d68:	10001916 	blt	r2,zero,40dd0 <_fopen_r+0xc4>
   40d6c:	01800134 	movhi	r6,4
   40d70:	01400134 	movhi	r5,4
   40d74:	01000134 	movhi	r4,4
   40d78:	00c00134 	movhi	r3,4
   40d7c:	318aed04 	addi	r6,r6,11188
   40d80:	294b0404 	addi	r5,r5,11280
   40d84:	210b2404 	addi	r4,r4,11408
   40d88:	18cb3b04 	addi	r3,r3,11500
   40d8c:	8440030d 	sth	r17,12(r16)
   40d90:	8080038d 	sth	r2,14(r16)
   40d94:	84000715 	stw	r16,28(r16)
   40d98:	81800815 	stw	r6,32(r16)
   40d9c:	81400915 	stw	r5,36(r16)
   40da0:	81000a15 	stw	r4,40(r16)
   40da4:	80c00b15 	stw	r3,44(r16)
   40da8:	8c40400c 	andi	r17,r17,256
   40dac:	88000d1e 	bne	r17,zero,40de4 <_fopen_r+0xd8>
   40db0:	8005883a 	mov	r2,r16
   40db4:	dfc00517 	ldw	ra,20(sp)
   40db8:	dcc00417 	ldw	r19,16(sp)
   40dbc:	dc800317 	ldw	r18,12(sp)
   40dc0:	dc400217 	ldw	r17,8(sp)
   40dc4:	dc000117 	ldw	r16,4(sp)
   40dc8:	dec00604 	addi	sp,sp,24
   40dcc:	f800283a 	ret
   40dd0:	0040cd40 	call	40cd4 <__sfp_lock_acquire>
   40dd4:	8000030d 	sth	zero,12(r16)
   40dd8:	0040cd80 	call	40cd8 <__sfp_lock_release>
   40ddc:	0021883a 	mov	r16,zero
   40de0:	003ff306 	br	40db0 <_fopen_r+0xa4>
   40de4:	01c00084 	movi	r7,2
   40de8:	000d883a 	mov	r6,zero
   40dec:	800b883a 	mov	r5,r16
   40df0:	9009883a 	mov	r4,r18
   40df4:	00412780 	call	41278 <_fseek_r>
   40df8:	003fed06 	br	40db0 <_fopen_r+0xa4>

00040dfc <fopen>:
   40dfc:	00c00174 	movhi	r3,5
   40e00:	2005883a 	mov	r2,r4
   40e04:	190c6317 	ldw	r4,12684(r3)
   40e08:	280d883a 	mov	r6,r5
   40e0c:	100b883a 	mov	r5,r2
   40e10:	0040d0c1 	jmpi	40d0c <_fopen_r>

00040e14 <_fprintf_r>:
   40e14:	defffe04 	addi	sp,sp,-8
   40e18:	2809883a 	mov	r4,r5
   40e1c:	300b883a 	mov	r5,r6
   40e20:	dfc00015 	stw	ra,0(sp)
   40e24:	d9c00115 	stw	r7,4(sp)
   40e28:	d9800104 	addi	r6,sp,4
   40e2c:	0044e900 	call	44e90 <__vfprintf_internal>
   40e30:	dfc00017 	ldw	ra,0(sp)
   40e34:	dec00204 	addi	sp,sp,8
   40e38:	f800283a 	ret

00040e3c <fprintf>:
   40e3c:	defffd04 	addi	sp,sp,-12
   40e40:	dfc00015 	stw	ra,0(sp)
   40e44:	d9800115 	stw	r6,4(sp)
   40e48:	d9c00215 	stw	r7,8(sp)
   40e4c:	d9800104 	addi	r6,sp,4
   40e50:	0044e900 	call	44e90 <__vfprintf_internal>
   40e54:	dfc00017 	ldw	ra,0(sp)
   40e58:	dec00304 	addi	sp,sp,12
   40e5c:	f800283a 	ret

00040e60 <_malloc_trim_r>:
   40e60:	defffb04 	addi	sp,sp,-20
   40e64:	dcc00315 	stw	r19,12(sp)
   40e68:	04c00174 	movhi	r19,5
   40e6c:	dc800215 	stw	r18,8(sp)
   40e70:	dc400115 	stw	r17,4(sp)
   40e74:	dc000015 	stw	r16,0(sp)
   40e78:	dfc00415 	stw	ra,16(sp)
   40e7c:	2821883a 	mov	r16,r5
   40e80:	9cc67804 	addi	r19,r19,6624
   40e84:	2025883a 	mov	r18,r4
   40e88:	004eb280 	call	4eb28 <__malloc_lock>
   40e8c:	98800217 	ldw	r2,8(r19)
   40e90:	14400117 	ldw	r17,4(r2)
   40e94:	00bfff04 	movi	r2,-4
   40e98:	88a2703a 	and	r17,r17,r2
   40e9c:	8c21c83a 	sub	r16,r17,r16
   40ea0:	8403fbc4 	addi	r16,r16,4079
   40ea4:	8020d33a 	srli	r16,r16,12
   40ea8:	843fffc4 	addi	r16,r16,-1
   40eac:	8020933a 	slli	r16,r16,12
   40eb0:	80840008 	cmpgei	r2,r16,4096
   40eb4:	10000626 	beq	r2,zero,40ed0 <_malloc_trim_r+0x70>
   40eb8:	000b883a 	mov	r5,zero
   40ebc:	9009883a 	mov	r4,r18
   40ec0:	0042b5c0 	call	42b5c <_sbrk_r>
   40ec4:	98c00217 	ldw	r3,8(r19)
   40ec8:	1c47883a 	add	r3,r3,r17
   40ecc:	10c00a26 	beq	r2,r3,40ef8 <_malloc_trim_r+0x98>
   40ed0:	9009883a 	mov	r4,r18
   40ed4:	004eb4c0 	call	4eb4c <__malloc_unlock>
   40ed8:	0005883a 	mov	r2,zero
   40edc:	dfc00417 	ldw	ra,16(sp)
   40ee0:	dcc00317 	ldw	r19,12(sp)
   40ee4:	dc800217 	ldw	r18,8(sp)
   40ee8:	dc400117 	ldw	r17,4(sp)
   40eec:	dc000017 	ldw	r16,0(sp)
   40ef0:	dec00504 	addi	sp,sp,20
   40ef4:	f800283a 	ret
   40ef8:	040bc83a 	sub	r5,zero,r16
   40efc:	9009883a 	mov	r4,r18
   40f00:	0042b5c0 	call	42b5c <_sbrk_r>
   40f04:	10bfffd8 	cmpnei	r2,r2,-1
   40f08:	10000d26 	beq	r2,zero,40f40 <_malloc_trim_r+0xe0>
   40f0c:	00800174 	movhi	r2,5
   40f10:	10937d17 	ldw	r2,19956(r2)
   40f14:	98c00217 	ldw	r3,8(r19)
   40f18:	8c23c83a 	sub	r17,r17,r16
   40f1c:	8c400054 	ori	r17,r17,1
   40f20:	1421c83a 	sub	r16,r2,r16
   40f24:	1c400115 	stw	r17,4(r3)
   40f28:	00800174 	movhi	r2,5
   40f2c:	9009883a 	mov	r4,r18
   40f30:	14137d15 	stw	r16,19956(r2)
   40f34:	004eb4c0 	call	4eb4c <__malloc_unlock>
   40f38:	00800044 	movi	r2,1
   40f3c:	003fe706 	br	40edc <_malloc_trim_r+0x7c>
   40f40:	000b883a 	mov	r5,zero
   40f44:	9009883a 	mov	r4,r18
   40f48:	0042b5c0 	call	42b5c <_sbrk_r>
   40f4c:	99000217 	ldw	r4,8(r19)
   40f50:	1107c83a 	sub	r3,r2,r4
   40f54:	19400410 	cmplti	r5,r3,16
   40f58:	283fdd1e 	bne	r5,zero,40ed0 <_malloc_trim_r+0x70>
   40f5c:	01400174 	movhi	r5,5
   40f60:	294c6417 	ldw	r5,12688(r5)
   40f64:	18c00054 	ori	r3,r3,1
   40f68:	20c00115 	stw	r3,4(r4)
   40f6c:	1145c83a 	sub	r2,r2,r5
   40f70:	01400174 	movhi	r5,5
   40f74:	28937d15 	stw	r2,19956(r5)
   40f78:	003fd506 	br	40ed0 <_malloc_trim_r+0x70>

00040f7c <_free_r>:
   40f7c:	28004f26 	beq	r5,zero,410bc <_free_r+0x140>
   40f80:	defffd04 	addi	sp,sp,-12
   40f84:	dc400115 	stw	r17,4(sp)
   40f88:	dc000015 	stw	r16,0(sp)
   40f8c:	2023883a 	mov	r17,r4
   40f90:	2821883a 	mov	r16,r5
   40f94:	dfc00215 	stw	ra,8(sp)
   40f98:	004eb280 	call	4eb28 <__malloc_lock>
   40f9c:	81ffff17 	ldw	r7,-4(r16)
   40fa0:	00bfff84 	movi	r2,-2
   40fa4:	80fffe04 	addi	r3,r16,-8
   40fa8:	3884703a 	and	r2,r7,r2
   40fac:	01000174 	movhi	r4,5
   40fb0:	188d883a 	add	r6,r3,r2
   40fb4:	21067804 	addi	r4,r4,6624
   40fb8:	31400117 	ldw	r5,4(r6)
   40fbc:	22000217 	ldw	r8,8(r4)
   40fc0:	027fff04 	movi	r9,-4
   40fc4:	2a4a703a 	and	r5,r5,r9
   40fc8:	41806426 	beq	r8,r6,4115c <_free_r+0x1e0>
   40fcc:	31400115 	stw	r5,4(r6)
   40fd0:	39c0004c 	andi	r7,r7,1
   40fd4:	3151883a 	add	r8,r6,r5
   40fd8:	3800281e 	bne	r7,zero,4107c <_free_r+0x100>
   40fdc:	82bffe17 	ldw	r10,-8(r16)
   40fe0:	42000117 	ldw	r8,4(r8)
   40fe4:	01c00174 	movhi	r7,5
   40fe8:	1a87c83a 	sub	r3,r3,r10
   40fec:	1a400217 	ldw	r9,8(r3)
   40ff0:	39c67a04 	addi	r7,r7,6632
   40ff4:	1285883a 	add	r2,r2,r10
   40ff8:	4200004c 	andi	r8,r8,1
   40ffc:	49c04c26 	beq	r9,r7,41130 <_free_r+0x1b4>
   41000:	1a800317 	ldw	r10,12(r3)
   41004:	4a800315 	stw	r10,12(r9)
   41008:	52400215 	stw	r9,8(r10)
   4100c:	40007126 	beq	r8,zero,411d4 <_free_r+0x258>
   41010:	11400054 	ori	r5,r2,1
   41014:	19400115 	stw	r5,4(r3)
   41018:	30800015 	stw	r2,0(r6)
   4101c:	11408028 	cmpgeui	r5,r2,512
   41020:	28002c1e 	bne	r5,zero,410d4 <_free_r+0x158>
   41024:	100ad0fa 	srli	r5,r2,3
   41028:	100cd17a 	srli	r6,r2,5
   4102c:	00800044 	movi	r2,1
   41030:	29400044 	addi	r5,r5,1
   41034:	280a90fa 	slli	r5,r5,3
   41038:	21c00117 	ldw	r7,4(r4)
   4103c:	1184983a 	sll	r2,r2,r6
   41040:	214b883a 	add	r5,r4,r5
   41044:	29800017 	ldw	r6,0(r5)
   41048:	11c4b03a 	or	r2,r2,r7
   4104c:	29fffe04 	addi	r7,r5,-8
   41050:	19c00315 	stw	r7,12(r3)
   41054:	19800215 	stw	r6,8(r3)
   41058:	20800115 	stw	r2,4(r4)
   4105c:	28c00015 	stw	r3,0(r5)
   41060:	30c00315 	stw	r3,12(r6)
   41064:	8809883a 	mov	r4,r17
   41068:	dfc00217 	ldw	ra,8(sp)
   4106c:	dc400117 	ldw	r17,4(sp)
   41070:	dc000017 	ldw	r16,0(sp)
   41074:	dec00304 	addi	sp,sp,12
   41078:	004eb4c1 	jmpi	4eb4c <__malloc_unlock>
   4107c:	41c00117 	ldw	r7,4(r8)
   41080:	39c0004c 	andi	r7,r7,1
   41084:	38000e1e 	bne	r7,zero,410c0 <_free_r+0x144>
   41088:	01c00174 	movhi	r7,5
   4108c:	1145883a 	add	r2,r2,r5
   41090:	39c67a04 	addi	r7,r7,6632
   41094:	31400217 	ldw	r5,8(r6)
   41098:	12400054 	ori	r9,r2,1
   4109c:	1891883a 	add	r8,r3,r2
   410a0:	29c05226 	beq	r5,r7,411ec <_free_r+0x270>
   410a4:	31800317 	ldw	r6,12(r6)
   410a8:	29800315 	stw	r6,12(r5)
   410ac:	31400215 	stw	r5,8(r6)
   410b0:	1a400115 	stw	r9,4(r3)
   410b4:	40800015 	stw	r2,0(r8)
   410b8:	003fd806 	br	4101c <_free_r+0xa0>
   410bc:	f800283a 	ret
   410c0:	11400054 	ori	r5,r2,1
   410c4:	817fff15 	stw	r5,-4(r16)
   410c8:	30800015 	stw	r2,0(r6)
   410cc:	11408028 	cmpgeui	r5,r2,512
   410d0:	283fd426 	beq	r5,zero,41024 <_free_r+0xa8>
   410d4:	100ad27a 	srli	r5,r2,9
   410d8:	29800168 	cmpgeui	r6,r5,5
   410dc:	3000341e 	bne	r6,zero,411b0 <_free_r+0x234>
   410e0:	100ad1ba 	srli	r5,r2,6
   410e4:	29800e44 	addi	r6,r5,57
   410e8:	300c90fa 	slli	r6,r6,3
   410ec:	29c00e04 	addi	r7,r5,56
   410f0:	218d883a 	add	r6,r4,r6
   410f4:	31400017 	ldw	r5,0(r6)
   410f8:	31bffe04 	addi	r6,r6,-8
   410fc:	31404226 	beq	r6,r5,41208 <_free_r+0x28c>
   41100:	01ffff04 	movi	r7,-4
   41104:	29000117 	ldw	r4,4(r5)
   41108:	21c8703a 	and	r4,r4,r7
   4110c:	1100022e 	bgeu	r2,r4,41118 <_free_r+0x19c>
   41110:	29400217 	ldw	r5,8(r5)
   41114:	317ffb1e 	bne	r6,r5,41104 <_free_r+0x188>
   41118:	29800317 	ldw	r6,12(r5)
   4111c:	19800315 	stw	r6,12(r3)
   41120:	19400215 	stw	r5,8(r3)
   41124:	30c00215 	stw	r3,8(r6)
   41128:	28c00315 	stw	r3,12(r5)
   4112c:	003fcd06 	br	41064 <_free_r+0xe8>
   41130:	40004d1e 	bne	r8,zero,41268 <_free_r+0x2ec>
   41134:	31000317 	ldw	r4,12(r6)
   41138:	31800217 	ldw	r6,8(r6)
   4113c:	2885883a 	add	r2,r5,r2
   41140:	11400054 	ori	r5,r2,1
   41144:	31000315 	stw	r4,12(r6)
   41148:	21800215 	stw	r6,8(r4)
   4114c:	19400115 	stw	r5,4(r3)
   41150:	1887883a 	add	r3,r3,r2
   41154:	18800015 	stw	r2,0(r3)
   41158:	003fc206 	br	41064 <_free_r+0xe8>
   4115c:	39c0004c 	andi	r7,r7,1
   41160:	1145883a 	add	r2,r2,r5
   41164:	3800071e 	bne	r7,zero,41184 <_free_r+0x208>
   41168:	81fffe17 	ldw	r7,-8(r16)
   4116c:	19c7c83a 	sub	r3,r3,r7
   41170:	19400317 	ldw	r5,12(r3)
   41174:	19800217 	ldw	r6,8(r3)
   41178:	11c5883a 	add	r2,r2,r7
   4117c:	31400315 	stw	r5,12(r6)
   41180:	29800215 	stw	r6,8(r5)
   41184:	01400174 	movhi	r5,5
   41188:	11800054 	ori	r6,r2,1
   4118c:	294c6517 	ldw	r5,12692(r5)
   41190:	19800115 	stw	r6,4(r3)
   41194:	20c00215 	stw	r3,8(r4)
   41198:	117fb236 	bltu	r2,r5,41064 <_free_r+0xe8>
   4119c:	00800174 	movhi	r2,5
   411a0:	11537417 	ldw	r5,19920(r2)
   411a4:	8809883a 	mov	r4,r17
   411a8:	0040e600 	call	40e60 <_malloc_trim_r>
   411ac:	003fad06 	br	41064 <_free_r+0xe8>
   411b0:	29800568 	cmpgeui	r6,r5,21
   411b4:	30000926 	beq	r6,zero,411dc <_free_r+0x260>
   411b8:	29801568 	cmpgeui	r6,r5,85
   411bc:	3000191e 	bne	r6,zero,41224 <_free_r+0x2a8>
   411c0:	100ad33a 	srli	r5,r2,12
   411c4:	29801bc4 	addi	r6,r5,111
   411c8:	300c90fa 	slli	r6,r6,3
   411cc:	29c01b84 	addi	r7,r5,110
   411d0:	003fc706 	br	410f0 <_free_r+0x174>
   411d4:	1145883a 	add	r2,r2,r5
   411d8:	003fae06 	br	41094 <_free_r+0x118>
   411dc:	29801704 	addi	r6,r5,92
   411e0:	300c90fa 	slli	r6,r6,3
   411e4:	29c016c4 	addi	r7,r5,91
   411e8:	003fc106 	br	410f0 <_free_r+0x174>
   411ec:	20c00515 	stw	r3,20(r4)
   411f0:	20c00415 	stw	r3,16(r4)
   411f4:	19c00315 	stw	r7,12(r3)
   411f8:	19c00215 	stw	r7,8(r3)
   411fc:	1a400115 	stw	r9,4(r3)
   41200:	40800015 	stw	r2,0(r8)
   41204:	003f9706 	br	41064 <_free_r+0xe8>
   41208:	380fd0ba 	srai	r7,r7,2
   4120c:	00800044 	movi	r2,1
   41210:	22000117 	ldw	r8,4(r4)
   41214:	11ce983a 	sll	r7,r2,r7
   41218:	3a0eb03a 	or	r7,r7,r8
   4121c:	21c00115 	stw	r7,4(r4)
   41220:	003fbe06 	br	4111c <_free_r+0x1a0>
   41224:	29805568 	cmpgeui	r6,r5,341
   41228:	3000051e 	bne	r6,zero,41240 <_free_r+0x2c4>
   4122c:	100ad3fa 	srli	r5,r2,15
   41230:	29801e04 	addi	r6,r5,120
   41234:	300c90fa 	slli	r6,r6,3
   41238:	29c01dc4 	addi	r7,r5,119
   4123c:	003fac06 	br	410f0 <_free_r+0x174>
   41240:	29415568 	cmpgeui	r5,r5,1365
   41244:	2800051e 	bne	r5,zero,4125c <_free_r+0x2e0>
   41248:	100ad4ba 	srli	r5,r2,18
   4124c:	29801f44 	addi	r6,r5,125
   41250:	300c90fa 	slli	r6,r6,3
   41254:	29c01f04 	addi	r7,r5,124
   41258:	003fa506 	br	410f0 <_free_r+0x174>
   4125c:	0180fe04 	movi	r6,1016
   41260:	01c01f84 	movi	r7,126
   41264:	003fa206 	br	410f0 <_free_r+0x174>
   41268:	11000054 	ori	r4,r2,1
   4126c:	19000115 	stw	r4,4(r3)
   41270:	30800015 	stw	r2,0(r6)
   41274:	003f7b06 	br	41064 <_free_r+0xe8>

00041278 <_fseek_r>:
   41278:	00412981 	jmpi	41298 <_fseeko_r>

0004127c <fseek>:
   4127c:	00c00174 	movhi	r3,5
   41280:	2005883a 	mov	r2,r4
   41284:	190c6317 	ldw	r4,12684(r3)
   41288:	300f883a 	mov	r7,r6
   4128c:	280d883a 	mov	r6,r5
   41290:	100b883a 	mov	r5,r2
   41294:	00412981 	jmpi	41298 <_fseeko_r>

00041298 <_fseeko_r>:
   41298:	deffe504 	addi	sp,sp,-108
   4129c:	dd001615 	stw	r20,88(sp)
   412a0:	dcc01515 	stw	r19,84(sp)
   412a4:	dc401315 	stw	r17,76(sp)
   412a8:	dc001215 	stw	r16,72(sp)
   412ac:	dfc01a15 	stw	ra,104(sp)
   412b0:	ddc01915 	stw	r23,100(sp)
   412b4:	dd801815 	stw	r22,96(sp)
   412b8:	dd401715 	stw	r21,92(sp)
   412bc:	dc801415 	stw	r18,80(sp)
   412c0:	2023883a 	mov	r17,r4
   412c4:	2821883a 	mov	r16,r5
   412c8:	3027883a 	mov	r19,r6
   412cc:	3829883a 	mov	r20,r7
   412d0:	20000226 	beq	r4,zero,412dc <_fseeko_r+0x44>
   412d4:	20800e17 	ldw	r2,56(r4)
   412d8:	10001a26 	beq	r2,zero,41344 <_fseeko_r+0xac>
   412dc:	8080030b 	ldhu	r2,12(r16)
   412e0:	1080420c 	andi	r2,r2,264
   412e4:	10804218 	cmpnei	r2,r2,264
   412e8:	10001b26 	beq	r2,zero,41358 <_fseeko_r+0xc0>
   412ec:	85400a17 	ldw	r21,40(r16)
   412f0:	a800de26 	beq	r21,zero,4166c <_fseeko_r+0x3d4>
   412f4:	a0800060 	cmpeqi	r2,r20,1
   412f8:	10001b1e 	bne	r2,zero,41368 <_fseeko_r+0xd0>
   412fc:	04bfff44 	movi	r18,-3
   41300:	a4a4703a 	and	r18,r20,r18
   41304:	90004f26 	beq	r18,zero,41444 <_fseeko_r+0x1ac>
   41308:	00800584 	movi	r2,22
   4130c:	88800015 	stw	r2,0(r17)
   41310:	04bfffc4 	movi	r18,-1
   41314:	9005883a 	mov	r2,r18
   41318:	dfc01a17 	ldw	ra,104(sp)
   4131c:	ddc01917 	ldw	r23,100(sp)
   41320:	dd801817 	ldw	r22,96(sp)
   41324:	dd401717 	ldw	r21,92(sp)
   41328:	dd001617 	ldw	r20,88(sp)
   4132c:	dcc01517 	ldw	r19,84(sp)
   41330:	dc801417 	ldw	r18,80(sp)
   41334:	dc401317 	ldw	r17,76(sp)
   41338:	dc001217 	ldw	r16,72(sp)
   4133c:	dec01b04 	addi	sp,sp,108
   41340:	f800283a 	ret
   41344:	0040cc40 	call	40cc4 <__sinit>
   41348:	8080030b 	ldhu	r2,12(r16)
   4134c:	1080420c 	andi	r2,r2,264
   41350:	10804218 	cmpnei	r2,r2,264
   41354:	103fe51e 	bne	r2,zero,412ec <_fseeko_r+0x54>
   41358:	800b883a 	mov	r5,r16
   4135c:	8809883a 	mov	r4,r17
   41360:	004087c0 	call	4087c <_fflush_r>
   41364:	003fe106 	br	412ec <_fseeko_r+0x54>
   41368:	800b883a 	mov	r5,r16
   4136c:	8809883a 	mov	r4,r17
   41370:	00416f80 	call	416f8 <_ftello_r>
   41374:	1025883a 	mov	r18,r2
   41378:	10bfffd8 	cmpnei	r2,r2,-1
   4137c:	103fe426 	beq	r2,zero,41310 <_fseeko_r+0x78>
   41380:	80800417 	ldw	r2,16(r16)
   41384:	9ca7883a 	add	r19,r19,r18
   41388:	05800044 	movi	r22,1
   4138c:	0029883a 	mov	r20,zero
   41390:	10002f26 	beq	r2,zero,41450 <_fseeko_r+0x1b8>
   41394:	8080030b 	ldhu	r2,12(r16)
   41398:	10c2068c 	andi	r3,r2,2074
   4139c:	1800071e 	bne	r3,zero,413bc <_fseeko_r+0x124>
   413a0:	10c1000c 	andi	r3,r2,1024
   413a4:	18003d1e 	bne	r3,zero,4149c <_fseeko_r+0x204>
   413a8:	00c00134 	movhi	r3,4
   413ac:	18cb2404 	addi	r3,r3,11408
   413b0:	a8c02b26 	beq	r21,r3,41460 <_fseeko_r+0x1c8>
   413b4:	10820014 	ori	r2,r2,2048
   413b8:	8080030d 	sth	r2,12(r16)
   413bc:	800b883a 	mov	r5,r16
   413c0:	8809883a 	mov	r4,r17
   413c4:	004087c0 	call	4087c <_fflush_r>
   413c8:	1025883a 	mov	r18,r2
   413cc:	103fd01e 	bne	r2,zero,41310 <_fseeko_r+0x78>
   413d0:	81400717 	ldw	r5,28(r16)
   413d4:	a00f883a 	mov	r7,r20
   413d8:	980d883a 	mov	r6,r19
   413dc:	8809883a 	mov	r4,r17
   413e0:	a83ee83a 	callr	r21
   413e4:	10bfffe0 	cmpeqi	r2,r2,-1
   413e8:	103fc91e 	bne	r2,zero,41310 <_fseeko_r+0x78>
   413ec:	81400c17 	ldw	r5,48(r16)
   413f0:	28000526 	beq	r5,zero,41408 <_fseeko_r+0x170>
   413f4:	80801004 	addi	r2,r16,64
   413f8:	28800226 	beq	r5,r2,41404 <_fseeko_r+0x16c>
   413fc:	8809883a 	mov	r4,r17
   41400:	0040f7c0 	call	40f7c <_free_r>
   41404:	80000c15 	stw	zero,48(r16)
   41408:	8080030b 	ldhu	r2,12(r16)
   4140c:	80c00417 	ldw	r3,16(r16)
   41410:	80000115 	stw	zero,4(r16)
   41414:	10bdf7cc 	andi	r2,r2,63455
   41418:	80c00015 	stw	r3,0(r16)
   4141c:	8080030d 	sth	r2,12(r16)
   41420:	80001705 	stb	zero,92(r16)
   41424:	80001745 	stb	zero,93(r16)
   41428:	80001785 	stb	zero,94(r16)
   4142c:	800017c5 	stb	zero,95(r16)
   41430:	80001805 	stb	zero,96(r16)
   41434:	80001845 	stb	zero,97(r16)
   41438:	80001885 	stb	zero,98(r16)
   4143c:	800018c5 	stb	zero,99(r16)
   41440:	003fb406 	br	41314 <_fseeko_r+0x7c>
   41444:	80800417 	ldw	r2,16(r16)
   41448:	002d883a 	mov	r22,zero
   4144c:	103fd11e 	bne	r2,zero,41394 <_fseeko_r+0xfc>
   41450:	800b883a 	mov	r5,r16
   41454:	8809883a 	mov	r4,r17
   41458:	0041c2c0 	call	41c2c <__smakebuf_r>
   4145c:	003fcd06 	br	41394 <_fseeko_r+0xfc>
   41460:	8140038f 	ldh	r5,14(r16)
   41464:	283fd316 	blt	r5,zero,413b4 <_fseeko_r+0x11c>
   41468:	d80d883a 	mov	r6,sp
   4146c:	8809883a 	mov	r4,r17
   41470:	00416980 	call	41698 <_fstat_r>
   41474:	10006b1e 	bne	r2,zero,41624 <_fseeko_r+0x38c>
   41478:	d8c00117 	ldw	r3,4(sp)
   4147c:	01200014 	movui	r4,32768
   41480:	8080030b 	ldhu	r2,12(r16)
   41484:	18fc000c 	andi	r3,r3,61440
   41488:	193fca1e 	bne	r3,r4,413b4 <_fseeko_r+0x11c>
   4148c:	10810014 	ori	r2,r2,1024
   41490:	00c10004 	movi	r3,1024
   41494:	80c01315 	stw	r3,76(r16)
   41498:	8080030d 	sth	r2,12(r16)
   4149c:	a000441e 	bne	r20,zero,415b0 <_fseeko_r+0x318>
   414a0:	982f883a 	mov	r23,r19
   414a4:	b0004a1e 	bne	r22,zero,415d0 <_fseeko_r+0x338>
   414a8:	8080030b 	ldhu	r2,12(r16)
   414ac:	1084000c 	andi	r2,r2,4096
   414b0:	10005426 	beq	r2,zero,41604 <_fseeko_r+0x36c>
   414b4:	80801417 	ldw	r2,80(r16)
   414b8:	80c00117 	ldw	r3,4(r16)
   414bc:	81400c17 	ldw	r5,48(r16)
   414c0:	1809883a 	mov	r4,r3
   414c4:	10e5c83a 	sub	r18,r2,r3
   414c8:	28004726 	beq	r5,zero,415e8 <_fseeko_r+0x350>
   414cc:	81000f17 	ldw	r4,60(r16)
   414d0:	9125c83a 	sub	r18,r18,r4
   414d4:	80800e17 	ldw	r2,56(r16)
   414d8:	81800417 	ldw	r6,16(r16)
   414dc:	90e5883a 	add	r18,r18,r3
   414e0:	1185c83a 	sub	r2,r2,r6
   414e4:	90a5c83a 	sub	r18,r18,r2
   414e8:	1105883a 	add	r2,r2,r4
   414ec:	bc800216 	blt	r23,r18,414f8 <_fseeko_r+0x260>
   414f0:	9087883a 	add	r3,r18,r2
   414f4:	b8c04d36 	bltu	r23,r3,4162c <_fseeko_r+0x394>
   414f8:	84801317 	ldw	r18,76(r16)
   414fc:	81400717 	ldw	r5,28(r16)
   41500:	000f883a 	mov	r7,zero
   41504:	04a5c83a 	sub	r18,zero,r18
   41508:	95e4703a 	and	r18,r18,r23
   4150c:	900d883a 	mov	r6,r18
   41510:	8809883a 	mov	r4,r17
   41514:	a83ee83a 	callr	r21
   41518:	10bfffe0 	cmpeqi	r2,r2,-1
   4151c:	103fa71e 	bne	r2,zero,413bc <_fseeko_r+0x124>
   41520:	80800417 	ldw	r2,16(r16)
   41524:	81400c17 	ldw	r5,48(r16)
   41528:	80000115 	stw	zero,4(r16)
   4152c:	80800015 	stw	r2,0(r16)
   41530:	28000526 	beq	r5,zero,41548 <_fseeko_r+0x2b0>
   41534:	80801004 	addi	r2,r16,64
   41538:	28800226 	beq	r5,r2,41544 <_fseeko_r+0x2ac>
   4153c:	8809883a 	mov	r4,r17
   41540:	0040f7c0 	call	40f7c <_free_r>
   41544:	80000c15 	stw	zero,48(r16)
   41548:	8080030b 	ldhu	r2,12(r16)
   4154c:	bcadc83a 	sub	r22,r23,r18
   41550:	10bff7cc 	andi	r2,r2,65503
   41554:	8080030d 	sth	r2,12(r16)
   41558:	bc800b26 	beq	r23,r18,41588 <_fseeko_r+0x2f0>
   4155c:	800b883a 	mov	r5,r16
   41560:	8809883a 	mov	r4,r17
   41564:	00428a00 	call	428a0 <__srefill_r>
   41568:	103f941e 	bne	r2,zero,413bc <_fseeko_r+0x124>
   4156c:	80800117 	ldw	r2,4(r16)
   41570:	15bf9236 	bltu	r2,r22,413bc <_fseeko_r+0x124>
   41574:	80c00017 	ldw	r3,0(r16)
   41578:	1585c83a 	sub	r2,r2,r22
   4157c:	80800115 	stw	r2,4(r16)
   41580:	1dad883a 	add	r22,r3,r22
   41584:	85800015 	stw	r22,0(r16)
   41588:	80001705 	stb	zero,92(r16)
   4158c:	80001745 	stb	zero,93(r16)
   41590:	80001785 	stb	zero,94(r16)
   41594:	800017c5 	stb	zero,95(r16)
   41598:	80001805 	stb	zero,96(r16)
   4159c:	80001845 	stb	zero,97(r16)
   415a0:	80001885 	stb	zero,98(r16)
   415a4:	800018c5 	stb	zero,99(r16)
   415a8:	0025883a 	mov	r18,zero
   415ac:	003f5906 	br	41314 <_fseeko_r+0x7c>
   415b0:	8140038f 	ldh	r5,14(r16)
   415b4:	d80d883a 	mov	r6,sp
   415b8:	8809883a 	mov	r4,r17
   415bc:	00416980 	call	41698 <_fstat_r>
   415c0:	103f7e1e 	bne	r2,zero,413bc <_fseeko_r+0x124>
   415c4:	ddc00417 	ldw	r23,16(sp)
   415c8:	9def883a 	add	r23,r19,r23
   415cc:	b03fb626 	beq	r22,zero,414a8 <_fseeko_r+0x210>
   415d0:	81400c17 	ldw	r5,48(r16)
   415d4:	28000326 	beq	r5,zero,415e4 <_fseeko_r+0x34c>
   415d8:	80c00117 	ldw	r3,4(r16)
   415dc:	81000f17 	ldw	r4,60(r16)
   415e0:	003fbc06 	br	414d4 <_fseeko_r+0x23c>
   415e4:	81000117 	ldw	r4,4(r16)
   415e8:	80800017 	ldw	r2,0(r16)
   415ec:	81800417 	ldw	r6,16(r16)
   415f0:	000b883a 	mov	r5,zero
   415f4:	1185c83a 	sub	r2,r2,r6
   415f8:	90a5c83a 	sub	r18,r18,r2
   415fc:	2085883a 	add	r2,r4,r2
   41600:	003fba06 	br	414ec <_fseeko_r+0x254>
   41604:	81400717 	ldw	r5,28(r16)
   41608:	01c00044 	movi	r7,1
   4160c:	000d883a 	mov	r6,zero
   41610:	8809883a 	mov	r4,r17
   41614:	a83ee83a 	callr	r21
   41618:	10ffffe0 	cmpeqi	r3,r2,-1
   4161c:	183fa626 	beq	r3,zero,414b8 <_fseeko_r+0x220>
   41620:	003f6606 	br	413bc <_fseeko_r+0x124>
   41624:	8080030b 	ldhu	r2,12(r16)
   41628:	003f6206 	br	413b4 <_fseeko_r+0x11c>
   4162c:	bca5c83a 	sub	r18,r23,r18
   41630:	348d883a 	add	r6,r6,r18
   41634:	14a5c83a 	sub	r18,r2,r18
   41638:	81800015 	stw	r6,0(r16)
   4163c:	84800115 	stw	r18,4(r16)
   41640:	28000526 	beq	r5,zero,41658 <_fseeko_r+0x3c0>
   41644:	80801004 	addi	r2,r16,64
   41648:	28800226 	beq	r5,r2,41654 <_fseeko_r+0x3bc>
   4164c:	8809883a 	mov	r4,r17
   41650:	0040f7c0 	call	40f7c <_free_r>
   41654:	80000c15 	stw	zero,48(r16)
   41658:	80c0030b 	ldhu	r3,12(r16)
   4165c:	80001705 	stb	zero,92(r16)
   41660:	18fff7cc 	andi	r3,r3,65503
   41664:	80c0030d 	sth	r3,12(r16)
   41668:	003fc806 	br	4158c <_fseeko_r+0x2f4>
   4166c:	00800744 	movi	r2,29
   41670:	88800015 	stw	r2,0(r17)
   41674:	04bfffc4 	movi	r18,-1
   41678:	003f2606 	br	41314 <_fseeko_r+0x7c>

0004167c <fseeko>:
   4167c:	00c00174 	movhi	r3,5
   41680:	2005883a 	mov	r2,r4
   41684:	190c6317 	ldw	r4,12684(r3)
   41688:	300f883a 	mov	r7,r6
   4168c:	280d883a 	mov	r6,r5
   41690:	100b883a 	mov	r5,r2
   41694:	00412981 	jmpi	41298 <_fseeko_r>

00041698 <_fstat_r>:
   41698:	2807883a 	mov	r3,r5
   4169c:	defffe04 	addi	sp,sp,-8
   416a0:	dc000015 	stw	r16,0(sp)
   416a4:	00800174 	movhi	r2,5
   416a8:	300b883a 	mov	r5,r6
   416ac:	2021883a 	mov	r16,r4
   416b0:	1809883a 	mov	r4,r3
   416b4:	dfc00115 	stw	ra,4(sp)
   416b8:	10137115 	stw	zero,19908(r2)
   416bc:	004e5740 	call	4e574 <fstat>
   416c0:	10ffffd8 	cmpnei	r3,r2,-1
   416c4:	18000426 	beq	r3,zero,416d8 <_fstat_r+0x40>
   416c8:	dfc00117 	ldw	ra,4(sp)
   416cc:	dc000017 	ldw	r16,0(sp)
   416d0:	dec00204 	addi	sp,sp,8
   416d4:	f800283a 	ret
   416d8:	00c00174 	movhi	r3,5
   416dc:	18d37117 	ldw	r3,19908(r3)
   416e0:	183ff926 	beq	r3,zero,416c8 <_fstat_r+0x30>
   416e4:	80c00015 	stw	r3,0(r16)
   416e8:	dfc00117 	ldw	ra,4(sp)
   416ec:	dc000017 	ldw	r16,0(sp)
   416f0:	dec00204 	addi	sp,sp,8
   416f4:	f800283a 	ret

000416f8 <_ftello_r>:
   416f8:	defffd04 	addi	sp,sp,-12
   416fc:	dc400115 	stw	r17,4(sp)
   41700:	dc000015 	stw	r16,0(sp)
   41704:	dfc00215 	stw	ra,8(sp)
   41708:	2023883a 	mov	r17,r4
   4170c:	2821883a 	mov	r16,r5
   41710:	20000226 	beq	r4,zero,4171c <_ftello_r+0x24>
   41714:	20800e17 	ldw	r2,56(r4)
   41718:	10002826 	beq	r2,zero,417bc <_ftello_r+0xc4>
   4171c:	82000a17 	ldw	r8,40(r16)
   41720:	40003826 	beq	r8,zero,41804 <_ftello_r+0x10c>
   41724:	80c0030b 	ldhu	r3,12(r16)
   41728:	1880030c 	andi	r2,r3,12
   4172c:	10800218 	cmpnei	r2,r2,8
   41730:	10002426 	beq	r2,zero,417c4 <_ftello_r+0xcc>
   41734:	1884000c 	andi	r2,r3,4096
   41738:	1000151e 	bne	r2,zero,41790 <_ftello_r+0x98>
   4173c:	81400717 	ldw	r5,28(r16)
   41740:	01c00044 	movi	r7,1
   41744:	000d883a 	mov	r6,zero
   41748:	8809883a 	mov	r4,r17
   4174c:	403ee83a 	callr	r8
   41750:	10ffffe0 	cmpeqi	r3,r2,-1
   41754:	1800291e 	bne	r3,zero,417fc <_ftello_r+0x104>
   41758:	80c0030b 	ldhu	r3,12(r16)
   4175c:	1900010c 	andi	r4,r3,4
   41760:	20000e26 	beq	r4,zero,4179c <_ftello_r+0xa4>
   41764:	81000117 	ldw	r4,4(r16)
   41768:	80c00c17 	ldw	r3,48(r16)
   4176c:	1105c83a 	sub	r2,r2,r4
   41770:	18000226 	beq	r3,zero,4177c <_ftello_r+0x84>
   41774:	80c00f17 	ldw	r3,60(r16)
   41778:	10c5c83a 	sub	r2,r2,r3
   4177c:	dfc00217 	ldw	ra,8(sp)
   41780:	dc400117 	ldw	r17,4(sp)
   41784:	dc000017 	ldw	r16,0(sp)
   41788:	dec00304 	addi	sp,sp,12
   4178c:	f800283a 	ret
   41790:	1900010c 	andi	r4,r3,4
   41794:	80801417 	ldw	r2,80(r16)
   41798:	203ff21e 	bne	r4,zero,41764 <_ftello_r+0x6c>
   4179c:	18c0020c 	andi	r3,r3,8
   417a0:	183ff626 	beq	r3,zero,4177c <_ftello_r+0x84>
   417a4:	80c00017 	ldw	r3,0(r16)
   417a8:	183ff426 	beq	r3,zero,4177c <_ftello_r+0x84>
   417ac:	81000417 	ldw	r4,16(r16)
   417b0:	1907c83a 	sub	r3,r3,r4
   417b4:	10c5883a 	add	r2,r2,r3
   417b8:	003ff006 	br	4177c <_ftello_r+0x84>
   417bc:	0040cc40 	call	40cc4 <__sinit>
   417c0:	003fd606 	br	4171c <_ftello_r+0x24>
   417c4:	80800017 	ldw	r2,0(r16)
   417c8:	103fda26 	beq	r2,zero,41734 <_ftello_r+0x3c>
   417cc:	81000417 	ldw	r4,16(r16)
   417d0:	1105c83a 	sub	r2,r2,r4
   417d4:	00bfd70e 	bge	zero,r2,41734 <_ftello_r+0x3c>
   417d8:	1880400c 	andi	r2,r3,256
   417dc:	103fd526 	beq	r2,zero,41734 <_ftello_r+0x3c>
   417e0:	81400717 	ldw	r5,28(r16)
   417e4:	01c00084 	movi	r7,2
   417e8:	000d883a 	mov	r6,zero
   417ec:	8809883a 	mov	r4,r17
   417f0:	403ee83a 	callr	r8
   417f4:	10ffffd8 	cmpnei	r3,r2,-1
   417f8:	183fd71e 	bne	r3,zero,41758 <_ftello_r+0x60>
   417fc:	00bfffc4 	movi	r2,-1
   41800:	003fde06 	br	4177c <_ftello_r+0x84>
   41804:	00800744 	movi	r2,29
   41808:	88800015 	stw	r2,0(r17)
   4180c:	00bfffc4 	movi	r2,-1
   41810:	003fda06 	br	4177c <_ftello_r+0x84>

00041814 <ftello>:
   41814:	00800174 	movhi	r2,5
   41818:	200b883a 	mov	r5,r4
   4181c:	110c6317 	ldw	r4,12684(r2)
   41820:	00416f81 	jmpi	416f8 <_ftello_r>

00041824 <_fwalk>:
   41824:	defffa04 	addi	sp,sp,-24
   41828:	dd000415 	stw	r20,16(sp)
   4182c:	dcc00315 	stw	r19,12(sp)
   41830:	dc800215 	stw	r18,8(sp)
   41834:	dfc00515 	stw	ra,20(sp)
   41838:	dc400115 	stw	r17,4(sp)
   4183c:	dc000015 	stw	r16,0(sp)
   41840:	2827883a 	mov	r19,r5
   41844:	2480b804 	addi	r18,r4,736
   41848:	0029883a 	mov	r20,zero
   4184c:	94400117 	ldw	r17,4(r18)
   41850:	94000217 	ldw	r16,8(r18)
   41854:	8c7fffc4 	addi	r17,r17,-1
   41858:	88000d16 	blt	r17,zero,41890 <_fwalk+0x6c>
   4185c:	8080030b 	ldhu	r2,12(r16)
   41860:	8c7fffc4 	addi	r17,r17,-1
   41864:	108000b0 	cmpltui	r2,r2,2
   41868:	1000061e 	bne	r2,zero,41884 <_fwalk+0x60>
   4186c:	8080038f 	ldh	r2,14(r16)
   41870:	8009883a 	mov	r4,r16
   41874:	10bfffe0 	cmpeqi	r2,r2,-1
   41878:	1000021e 	bne	r2,zero,41884 <_fwalk+0x60>
   4187c:	983ee83a 	callr	r19
   41880:	a0a8b03a 	or	r20,r20,r2
   41884:	88bfffd8 	cmpnei	r2,r17,-1
   41888:	84001a04 	addi	r16,r16,104
   4188c:	103ff31e 	bne	r2,zero,4185c <_fwalk+0x38>
   41890:	94800017 	ldw	r18,0(r18)
   41894:	903fed1e 	bne	r18,zero,4184c <_fwalk+0x28>
   41898:	a005883a 	mov	r2,r20
   4189c:	dfc00517 	ldw	ra,20(sp)
   418a0:	dd000417 	ldw	r20,16(sp)
   418a4:	dcc00317 	ldw	r19,12(sp)
   418a8:	dc800217 	ldw	r18,8(sp)
   418ac:	dc400117 	ldw	r17,4(sp)
   418b0:	dc000017 	ldw	r16,0(sp)
   418b4:	dec00604 	addi	sp,sp,24
   418b8:	f800283a 	ret

000418bc <_fwalk_reent>:
   418bc:	defff904 	addi	sp,sp,-28
   418c0:	dd400515 	stw	r21,20(sp)
   418c4:	dd000415 	stw	r20,16(sp)
   418c8:	dcc00315 	stw	r19,12(sp)
   418cc:	dc800215 	stw	r18,8(sp)
   418d0:	dfc00615 	stw	ra,24(sp)
   418d4:	dc400115 	stw	r17,4(sp)
   418d8:	dc000015 	stw	r16,0(sp)
   418dc:	202b883a 	mov	r21,r4
   418e0:	2827883a 	mov	r19,r5
   418e4:	2480b804 	addi	r18,r4,736
   418e8:	0029883a 	mov	r20,zero
   418ec:	94400117 	ldw	r17,4(r18)
   418f0:	94000217 	ldw	r16,8(r18)
   418f4:	8c7fffc4 	addi	r17,r17,-1
   418f8:	88000e16 	blt	r17,zero,41934 <_fwalk_reent+0x78>
   418fc:	8080030b 	ldhu	r2,12(r16)
   41900:	8c7fffc4 	addi	r17,r17,-1
   41904:	108000b0 	cmpltui	r2,r2,2
   41908:	1000071e 	bne	r2,zero,41928 <_fwalk_reent+0x6c>
   4190c:	8080038f 	ldh	r2,14(r16)
   41910:	800b883a 	mov	r5,r16
   41914:	a809883a 	mov	r4,r21
   41918:	10bfffe0 	cmpeqi	r2,r2,-1
   4191c:	1000021e 	bne	r2,zero,41928 <_fwalk_reent+0x6c>
   41920:	983ee83a 	callr	r19
   41924:	a0a8b03a 	or	r20,r20,r2
   41928:	88bfffd8 	cmpnei	r2,r17,-1
   4192c:	84001a04 	addi	r16,r16,104
   41930:	103ff21e 	bne	r2,zero,418fc <_fwalk_reent+0x40>
   41934:	94800017 	ldw	r18,0(r18)
   41938:	903fec1e 	bne	r18,zero,418ec <_fwalk_reent+0x30>
   4193c:	a005883a 	mov	r2,r20
   41940:	dfc00617 	ldw	ra,24(sp)
   41944:	dd400517 	ldw	r21,20(sp)
   41948:	dd000417 	ldw	r20,16(sp)
   4194c:	dcc00317 	ldw	r19,12(sp)
   41950:	dc800217 	ldw	r18,8(sp)
   41954:	dc400117 	ldw	r17,4(sp)
   41958:	dc000017 	ldw	r16,0(sp)
   4195c:	dec00704 	addi	sp,sp,28
   41960:	f800283a 	ret

00041964 <_fwrite_r>:
   41964:	defff604 	addi	sp,sp,-40
   41968:	2805883a 	mov	r2,r5
   4196c:	dc400615 	stw	r17,24(sp)
   41970:	300b883a 	mov	r5,r6
   41974:	2023883a 	mov	r17,r4
   41978:	3809883a 	mov	r4,r7
   4197c:	dcc00815 	stw	r19,32(sp)
   41980:	dc800715 	stw	r18,28(sp)
   41984:	dc000515 	stw	r16,20(sp)
   41988:	dfc00915 	stw	ra,36(sp)
   4198c:	3027883a 	mov	r19,r6
   41990:	3821883a 	mov	r16,r7
   41994:	d8800015 	stw	r2,0(sp)
   41998:	004bc540 	call	4bc54 <__mulsi3>
   4199c:	1025883a 	mov	r18,r2
   419a0:	d8800115 	stw	r2,4(sp)
   419a4:	d8800415 	stw	r2,16(sp)
   419a8:	00800044 	movi	r2,1
   419ac:	dec00215 	stw	sp,8(sp)
   419b0:	d8800315 	stw	r2,12(sp)
   419b4:	d9400a17 	ldw	r5,40(sp)
   419b8:	88000226 	beq	r17,zero,419c4 <_fwrite_r+0x60>
   419bc:	88800e17 	ldw	r2,56(r17)
   419c0:	10001826 	beq	r2,zero,41a24 <_fwrite_r+0xc0>
   419c4:	2880030b 	ldhu	r2,12(r5)
   419c8:	10c8000c 	andi	r3,r2,8192
   419cc:	1800061e 	bne	r3,zero,419e8 <_fwrite_r+0x84>
   419d0:	28c01917 	ldw	r3,100(r5)
   419d4:	0137ffc4 	movi	r4,-8193
   419d8:	10880014 	ori	r2,r2,8192
   419dc:	1906703a 	and	r3,r3,r4
   419e0:	2880030d 	sth	r2,12(r5)
   419e4:	28c01915 	stw	r3,100(r5)
   419e8:	d9800204 	addi	r6,sp,8
   419ec:	8809883a 	mov	r4,r17
   419f0:	0046bac0 	call	46bac <__sfvwrite_r>
   419f4:	10000f26 	beq	r2,zero,41a34 <_fwrite_r+0xd0>
   419f8:	d9000417 	ldw	r4,16(sp)
   419fc:	980b883a 	mov	r5,r19
   41a00:	9109c83a 	sub	r4,r18,r4
   41a04:	004bb940 	call	4bb94 <__udivsi3>
   41a08:	dfc00917 	ldw	ra,36(sp)
   41a0c:	dcc00817 	ldw	r19,32(sp)
   41a10:	dc800717 	ldw	r18,28(sp)
   41a14:	dc400617 	ldw	r17,24(sp)
   41a18:	dc000517 	ldw	r16,20(sp)
   41a1c:	dec00a04 	addi	sp,sp,40
   41a20:	f800283a 	ret
   41a24:	8809883a 	mov	r4,r17
   41a28:	0040cc40 	call	40cc4 <__sinit>
   41a2c:	d9400a17 	ldw	r5,40(sp)
   41a30:	003fe406 	br	419c4 <_fwrite_r+0x60>
   41a34:	8005883a 	mov	r2,r16
   41a38:	003ff306 	br	41a08 <_fwrite_r+0xa4>

00041a3c <fwrite>:
   41a3c:	defff504 	addi	sp,sp,-44
   41a40:	dcc00815 	stw	r19,32(sp)
   41a44:	2827883a 	mov	r19,r5
   41a48:	2005883a 	mov	r2,r4
   41a4c:	00c00174 	movhi	r3,5
   41a50:	300b883a 	mov	r5,r6
   41a54:	9809883a 	mov	r4,r19
   41a58:	dd000915 	stw	r20,36(sp)
   41a5c:	dc800715 	stw	r18,28(sp)
   41a60:	dc400615 	stw	r17,24(sp)
   41a64:	dc000515 	stw	r16,20(sp)
   41a68:	1d0c6317 	ldw	r20,12684(r3)
   41a6c:	dfc00a15 	stw	ra,40(sp)
   41a70:	3021883a 	mov	r16,r6
   41a74:	3823883a 	mov	r17,r7
   41a78:	d8800015 	stw	r2,0(sp)
   41a7c:	004bc540 	call	4bc54 <__mulsi3>
   41a80:	1025883a 	mov	r18,r2
   41a84:	d8800115 	stw	r2,4(sp)
   41a88:	d8800415 	stw	r2,16(sp)
   41a8c:	00800044 	movi	r2,1
   41a90:	dec00215 	stw	sp,8(sp)
   41a94:	d8800315 	stw	r2,12(sp)
   41a98:	a0000226 	beq	r20,zero,41aa4 <fwrite+0x68>
   41a9c:	a0800e17 	ldw	r2,56(r20)
   41aa0:	10001a26 	beq	r2,zero,41b0c <fwrite+0xd0>
   41aa4:	8880030b 	ldhu	r2,12(r17)
   41aa8:	10c8000c 	andi	r3,r2,8192
   41aac:	1800061e 	bne	r3,zero,41ac8 <fwrite+0x8c>
   41ab0:	88c01917 	ldw	r3,100(r17)
   41ab4:	0137ffc4 	movi	r4,-8193
   41ab8:	10880014 	ori	r2,r2,8192
   41abc:	1906703a 	and	r3,r3,r4
   41ac0:	8880030d 	sth	r2,12(r17)
   41ac4:	88c01915 	stw	r3,100(r17)
   41ac8:	d9800204 	addi	r6,sp,8
   41acc:	880b883a 	mov	r5,r17
   41ad0:	a009883a 	mov	r4,r20
   41ad4:	0046bac0 	call	46bac <__sfvwrite_r>
   41ad8:	10000f26 	beq	r2,zero,41b18 <fwrite+0xdc>
   41adc:	d9000417 	ldw	r4,16(sp)
   41ae0:	980b883a 	mov	r5,r19
   41ae4:	9109c83a 	sub	r4,r18,r4
   41ae8:	004bb940 	call	4bb94 <__udivsi3>
   41aec:	dfc00a17 	ldw	ra,40(sp)
   41af0:	dd000917 	ldw	r20,36(sp)
   41af4:	dcc00817 	ldw	r19,32(sp)
   41af8:	dc800717 	ldw	r18,28(sp)
   41afc:	dc400617 	ldw	r17,24(sp)
   41b00:	dc000517 	ldw	r16,20(sp)
   41b04:	dec00b04 	addi	sp,sp,44
   41b08:	f800283a 	ret
   41b0c:	a009883a 	mov	r4,r20
   41b10:	0040cc40 	call	40cc4 <__sinit>
   41b14:	003fe306 	br	41aa4 <fwrite+0x68>
   41b18:	8005883a 	mov	r2,r16
   41b1c:	003ff306 	br	41aec <fwrite+0xb0>

00041b20 <_getc_r>:
   41b20:	defffd04 	addi	sp,sp,-12
   41b24:	dc000115 	stw	r16,4(sp)
   41b28:	dfc00215 	stw	ra,8(sp)
   41b2c:	2021883a 	mov	r16,r4
   41b30:	20000226 	beq	r4,zero,41b3c <_getc_r+0x1c>
   41b34:	20800e17 	ldw	r2,56(r4)
   41b38:	10000c26 	beq	r2,zero,41b6c <_getc_r+0x4c>
   41b3c:	28800117 	ldw	r2,4(r5)
   41b40:	10bfffc4 	addi	r2,r2,-1
   41b44:	28800115 	stw	r2,4(r5)
   41b48:	10000f16 	blt	r2,zero,41b88 <_getc_r+0x68>
   41b4c:	28800017 	ldw	r2,0(r5)
   41b50:	10c00044 	addi	r3,r2,1
   41b54:	28c00015 	stw	r3,0(r5)
   41b58:	10800003 	ldbu	r2,0(r2)
   41b5c:	dfc00217 	ldw	ra,8(sp)
   41b60:	dc000117 	ldw	r16,4(sp)
   41b64:	dec00304 	addi	sp,sp,12
   41b68:	f800283a 	ret
   41b6c:	d9400015 	stw	r5,0(sp)
   41b70:	0040cc40 	call	40cc4 <__sinit>
   41b74:	d9400017 	ldw	r5,0(sp)
   41b78:	28800117 	ldw	r2,4(r5)
   41b7c:	10bfffc4 	addi	r2,r2,-1
   41b80:	28800115 	stw	r2,4(r5)
   41b84:	103ff10e 	bge	r2,zero,41b4c <_getc_r+0x2c>
   41b88:	8009883a 	mov	r4,r16
   41b8c:	dfc00217 	ldw	ra,8(sp)
   41b90:	dc000117 	ldw	r16,4(sp)
   41b94:	dec00304 	addi	sp,sp,12
   41b98:	0042a6c1 	jmpi	42a6c <__srget_r>

00041b9c <getc>:
   41b9c:	defffd04 	addi	sp,sp,-12
   41ba0:	00800174 	movhi	r2,5
   41ba4:	dc400115 	stw	r17,4(sp)
   41ba8:	144c6317 	ldw	r17,12684(r2)
   41bac:	dc000015 	stw	r16,0(sp)
   41bb0:	dfc00215 	stw	ra,8(sp)
   41bb4:	2021883a 	mov	r16,r4
   41bb8:	88000226 	beq	r17,zero,41bc4 <getc+0x28>
   41bbc:	88800e17 	ldw	r2,56(r17)
   41bc0:	10000d26 	beq	r2,zero,41bf8 <getc+0x5c>
   41bc4:	80800117 	ldw	r2,4(r16)
   41bc8:	10bfffc4 	addi	r2,r2,-1
   41bcc:	80800115 	stw	r2,4(r16)
   41bd0:	10000f16 	blt	r2,zero,41c10 <getc+0x74>
   41bd4:	80800017 	ldw	r2,0(r16)
   41bd8:	10c00044 	addi	r3,r2,1
   41bdc:	80c00015 	stw	r3,0(r16)
   41be0:	10800003 	ldbu	r2,0(r2)
   41be4:	dfc00217 	ldw	ra,8(sp)
   41be8:	dc400117 	ldw	r17,4(sp)
   41bec:	dc000017 	ldw	r16,0(sp)
   41bf0:	dec00304 	addi	sp,sp,12
   41bf4:	f800283a 	ret
   41bf8:	8809883a 	mov	r4,r17
   41bfc:	0040cc40 	call	40cc4 <__sinit>
   41c00:	80800117 	ldw	r2,4(r16)
   41c04:	10bfffc4 	addi	r2,r2,-1
   41c08:	80800115 	stw	r2,4(r16)
   41c0c:	103ff10e 	bge	r2,zero,41bd4 <getc+0x38>
   41c10:	800b883a 	mov	r5,r16
   41c14:	8809883a 	mov	r4,r17
   41c18:	dfc00217 	ldw	ra,8(sp)
   41c1c:	dc400117 	ldw	r17,4(sp)
   41c20:	dc000017 	ldw	r16,0(sp)
   41c24:	dec00304 	addi	sp,sp,12
   41c28:	0042a6c1 	jmpi	42a6c <__srget_r>

00041c2c <__smakebuf_r>:
   41c2c:	2880030b 	ldhu	r2,12(r5)
   41c30:	deffe804 	addi	sp,sp,-96
   41c34:	dc001215 	stw	r16,72(sp)
   41c38:	dfc01715 	stw	ra,92(sp)
   41c3c:	dd001615 	stw	r20,88(sp)
   41c40:	dcc01515 	stw	r19,84(sp)
   41c44:	dc801415 	stw	r18,80(sp)
   41c48:	dc401315 	stw	r17,76(sp)
   41c4c:	10c0008c 	andi	r3,r2,2
   41c50:	2821883a 	mov	r16,r5
   41c54:	18000d26 	beq	r3,zero,41c8c <__smakebuf_r+0x60>
   41c58:	288010c4 	addi	r2,r5,67
   41c5c:	28800015 	stw	r2,0(r5)
   41c60:	28800415 	stw	r2,16(r5)
   41c64:	00800044 	movi	r2,1
   41c68:	28800515 	stw	r2,20(r5)
   41c6c:	dfc01717 	ldw	ra,92(sp)
   41c70:	dd001617 	ldw	r20,88(sp)
   41c74:	dcc01517 	ldw	r19,84(sp)
   41c78:	dc801417 	ldw	r18,80(sp)
   41c7c:	dc401317 	ldw	r17,76(sp)
   41c80:	dc001217 	ldw	r16,72(sp)
   41c84:	dec01804 	addi	sp,sp,96
   41c88:	f800283a 	ret
   41c8c:	2940038f 	ldh	r5,14(r5)
   41c90:	2023883a 	mov	r17,r4
   41c94:	28002816 	blt	r5,zero,41d38 <__smakebuf_r+0x10c>
   41c98:	d80d883a 	mov	r6,sp
   41c9c:	00416980 	call	41698 <_fstat_r>
   41ca0:	10002416 	blt	r2,zero,41d34 <__smakebuf_r+0x108>
   41ca4:	d8800117 	ldw	r2,4(sp)
   41ca8:	10bc000c 	andi	r2,r2,61440
   41cac:	10880018 	cmpnei	r2,r2,8192
   41cb0:	1000461e 	bne	r2,zero,41dcc <__smakebuf_r+0x1a0>
   41cb4:	8140038f 	ldh	r5,14(r16)
   41cb8:	8809883a 	mov	r4,r17
   41cbc:	00470740 	call	47074 <_isatty_r>
   41cc0:	10003e26 	beq	r2,zero,41dbc <__smakebuf_r+0x190>
   41cc4:	8080030b 	ldhu	r2,12(r16)
   41cc8:	80c010c4 	addi	r3,r16,67
   41ccc:	80c00015 	stw	r3,0(r16)
   41cd0:	10800054 	ori	r2,r2,1
   41cd4:	8080030d 	sth	r2,12(r16)
   41cd8:	00800044 	movi	r2,1
   41cdc:	80c00415 	stw	r3,16(r16)
   41ce0:	80800515 	stw	r2,20(r16)
   41ce4:	04c00044 	movi	r19,1
   41ce8:	05010004 	movi	r20,1024
   41cec:	04820004 	movi	r18,2048
   41cf0:	a00b883a 	mov	r5,r20
   41cf4:	8809883a 	mov	r4,r17
   41cf8:	0041e740 	call	41e74 <_malloc_r>
   41cfc:	10001726 	beq	r2,zero,41d5c <__smakebuf_r+0x130>
   41d00:	80c0030b 	ldhu	r3,12(r16)
   41d04:	01000134 	movhi	r4,4
   41d08:	21025a04 	addi	r4,r4,2408
   41d0c:	89000f15 	stw	r4,60(r17)
   41d10:	18c02014 	ori	r3,r3,128
   41d14:	80c0030d 	sth	r3,12(r16)
   41d18:	80800015 	stw	r2,0(r16)
   41d1c:	80800415 	stw	r2,16(r16)
   41d20:	85000515 	stw	r20,20(r16)
   41d24:	98001d1e 	bne	r19,zero,41d9c <__smakebuf_r+0x170>
   41d28:	90c6b03a 	or	r3,r18,r3
   41d2c:	80c0030d 	sth	r3,12(r16)
   41d30:	003fce06 	br	41c6c <__smakebuf_r+0x40>
   41d34:	8080030b 	ldhu	r2,12(r16)
   41d38:	1080200c 	andi	r2,r2,128
   41d3c:	0027883a 	mov	r19,zero
   41d40:	10001326 	beq	r2,zero,41d90 <__smakebuf_r+0x164>
   41d44:	05001004 	movi	r20,64
   41d48:	a00b883a 	mov	r5,r20
   41d4c:	8809883a 	mov	r4,r17
   41d50:	0025883a 	mov	r18,zero
   41d54:	0041e740 	call	41e74 <_malloc_r>
   41d58:	103fe91e 	bne	r2,zero,41d00 <__smakebuf_r+0xd4>
   41d5c:	8080030b 	ldhu	r2,12(r16)
   41d60:	10c0800c 	andi	r3,r2,512
   41d64:	183fc11e 	bne	r3,zero,41c6c <__smakebuf_r+0x40>
   41d68:	00ffff04 	movi	r3,-4
   41d6c:	10c4703a 	and	r2,r2,r3
   41d70:	10800094 	ori	r2,r2,2
   41d74:	80c010c4 	addi	r3,r16,67
   41d78:	8080030d 	sth	r2,12(r16)
   41d7c:	00800044 	movi	r2,1
   41d80:	80c00015 	stw	r3,0(r16)
   41d84:	80c00415 	stw	r3,16(r16)
   41d88:	80800515 	stw	r2,20(r16)
   41d8c:	003fb706 	br	41c6c <__smakebuf_r+0x40>
   41d90:	05010004 	movi	r20,1024
   41d94:	0025883a 	mov	r18,zero
   41d98:	003fd506 	br	41cf0 <__smakebuf_r+0xc4>
   41d9c:	8140038f 	ldh	r5,14(r16)
   41da0:	8809883a 	mov	r4,r17
   41da4:	00470740 	call	47074 <_isatty_r>
   41da8:	80c0030b 	ldhu	r3,12(r16)
   41dac:	103fde26 	beq	r2,zero,41d28 <__smakebuf_r+0xfc>
   41db0:	18ffff0c 	andi	r3,r3,65532
   41db4:	18c00054 	ori	r3,r3,1
   41db8:	003fdb06 	br	41d28 <__smakebuf_r+0xfc>
   41dbc:	04c00044 	movi	r19,1
   41dc0:	05010004 	movi	r20,1024
   41dc4:	04820004 	movi	r18,2048
   41dc8:	003fc906 	br	41cf0 <__smakebuf_r+0xc4>
   41dcc:	0027883a 	mov	r19,zero
   41dd0:	05010004 	movi	r20,1024
   41dd4:	04820004 	movi	r18,2048
   41dd8:	003fc506 	br	41cf0 <__smakebuf_r+0xc4>

00041ddc <__swhatbuf_r>:
   41ddc:	deffea04 	addi	sp,sp,-88
   41de0:	dc001215 	stw	r16,72(sp)
   41de4:	2821883a 	mov	r16,r5
   41de8:	2940038f 	ldh	r5,14(r5)
   41dec:	dc801415 	stw	r18,80(sp)
   41df0:	dc401315 	stw	r17,76(sp)
   41df4:	dfc01515 	stw	ra,84(sp)
   41df8:	3023883a 	mov	r17,r6
   41dfc:	3825883a 	mov	r18,r7
   41e00:	28001016 	blt	r5,zero,41e44 <__swhatbuf_r+0x68>
   41e04:	d80d883a 	mov	r6,sp
   41e08:	00416980 	call	41698 <_fstat_r>
   41e0c:	10000d16 	blt	r2,zero,41e44 <__swhatbuf_r+0x68>
   41e10:	d8c00117 	ldw	r3,4(sp)
   41e14:	00820004 	movi	r2,2048
   41e18:	18fc000c 	andi	r3,r3,61440
   41e1c:	18c80020 	cmpeqi	r3,r3,8192
   41e20:	90c00015 	stw	r3,0(r18)
   41e24:	00c10004 	movi	r3,1024
   41e28:	88c00015 	stw	r3,0(r17)
   41e2c:	dfc01517 	ldw	ra,84(sp)
   41e30:	dc801417 	ldw	r18,80(sp)
   41e34:	dc401317 	ldw	r17,76(sp)
   41e38:	dc001217 	ldw	r16,72(sp)
   41e3c:	dec01604 	addi	sp,sp,88
   41e40:	f800283a 	ret
   41e44:	8080030b 	ldhu	r2,12(r16)
   41e48:	90000015 	stw	zero,0(r18)
   41e4c:	1080200c 	andi	r2,r2,128
   41e50:	10000426 	beq	r2,zero,41e64 <__swhatbuf_r+0x88>
   41e54:	00801004 	movi	r2,64
   41e58:	88800015 	stw	r2,0(r17)
   41e5c:	0005883a 	mov	r2,zero
   41e60:	003ff206 	br	41e2c <__swhatbuf_r+0x50>
   41e64:	00810004 	movi	r2,1024
   41e68:	88800015 	stw	r2,0(r17)
   41e6c:	0005883a 	mov	r2,zero
   41e70:	003fee06 	br	41e2c <__swhatbuf_r+0x50>

00041e74 <_malloc_r>:
   41e74:	defff604 	addi	sp,sp,-40
   41e78:	dc400115 	stw	r17,4(sp)
   41e7c:	2c4002c4 	addi	r17,r5,11
   41e80:	dc800215 	stw	r18,8(sp)
   41e84:	dfc00915 	stw	ra,36(sp)
   41e88:	df000815 	stw	fp,32(sp)
   41e8c:	ddc00715 	stw	r23,28(sp)
   41e90:	dd800615 	stw	r22,24(sp)
   41e94:	dd400515 	stw	r21,20(sp)
   41e98:	dd000415 	stw	r20,16(sp)
   41e9c:	dcc00315 	stw	r19,12(sp)
   41ea0:	dc000015 	stw	r16,0(sp)
   41ea4:	888005e8 	cmpgeui	r2,r17,23
   41ea8:	2025883a 	mov	r18,r4
   41eac:	10001b1e 	bne	r2,zero,41f1c <_malloc_r+0xa8>
   41eb0:	29400468 	cmpgeui	r5,r5,17
   41eb4:	2800821e 	bne	r5,zero,420c0 <_malloc_r+0x24c>
   41eb8:	004eb280 	call	4eb28 <__malloc_lock>
   41ebc:	04400404 	movi	r17,16
   41ec0:	00800604 	movi	r2,24
   41ec4:	01c00084 	movi	r7,2
   41ec8:	04c00174 	movhi	r19,5
   41ecc:	9cc67804 	addi	r19,r19,6624
   41ed0:	9885883a 	add	r2,r19,r2
   41ed4:	14000117 	ldw	r16,4(r2)
   41ed8:	10fffe04 	addi	r3,r2,-8
   41edc:	80c08b26 	beq	r16,r3,4210c <_malloc_r+0x298>
   41ee0:	80800117 	ldw	r2,4(r16)
   41ee4:	81000317 	ldw	r4,12(r16)
   41ee8:	00ffff04 	movi	r3,-4
   41eec:	10c4703a 	and	r2,r2,r3
   41ef0:	81400217 	ldw	r5,8(r16)
   41ef4:	8085883a 	add	r2,r16,r2
   41ef8:	10c00117 	ldw	r3,4(r2)
   41efc:	29000315 	stw	r4,12(r5)
   41f00:	21400215 	stw	r5,8(r4)
   41f04:	18c00054 	ori	r3,r3,1
   41f08:	10c00115 	stw	r3,4(r2)
   41f0c:	9009883a 	mov	r4,r18
   41f10:	004eb4c0 	call	4eb4c <__malloc_unlock>
   41f14:	80800204 	addi	r2,r16,8
   41f18:	00006c06 	br	420cc <_malloc_r+0x258>
   41f1c:	00bffe04 	movi	r2,-8
   41f20:	88a2703a 	and	r17,r17,r2
   41f24:	88006616 	blt	r17,zero,420c0 <_malloc_r+0x24c>
   41f28:	89406536 	bltu	r17,r5,420c0 <_malloc_r+0x24c>
   41f2c:	004eb280 	call	4eb28 <__malloc_lock>
   41f30:	88807e28 	cmpgeui	r2,r17,504
   41f34:	10012226 	beq	r2,zero,423c0 <_malloc_r+0x54c>
   41f38:	8804d27a 	srli	r2,r17,9
   41f3c:	10006f26 	beq	r2,zero,420fc <_malloc_r+0x288>
   41f40:	10c00168 	cmpgeui	r3,r2,5
   41f44:	1800fe1e 	bne	r3,zero,42340 <_malloc_r+0x4cc>
   41f48:	8804d1ba 	srli	r2,r17,6
   41f4c:	11c00e44 	addi	r7,r2,57
   41f50:	380890fa 	slli	r4,r7,3
   41f54:	12000e04 	addi	r8,r2,56
   41f58:	04c00174 	movhi	r19,5
   41f5c:	9cc67804 	addi	r19,r19,6624
   41f60:	9909883a 	add	r4,r19,r4
   41f64:	24000117 	ldw	r16,4(r4)
   41f68:	213ffe04 	addi	r4,r4,-8
   41f6c:	24000b26 	beq	r4,r16,41f9c <_malloc_r+0x128>
   41f70:	01bfff04 	movi	r6,-4
   41f74:	00000306 	br	41f84 <_malloc_r+0x110>
   41f78:	1800d60e 	bge	r3,zero,422d4 <_malloc_r+0x460>
   41f7c:	84000317 	ldw	r16,12(r16)
   41f80:	24000626 	beq	r4,r16,41f9c <_malloc_r+0x128>
   41f84:	80800117 	ldw	r2,4(r16)
   41f88:	1184703a 	and	r2,r2,r6
   41f8c:	1447c83a 	sub	r3,r2,r17
   41f90:	19400408 	cmpgei	r5,r3,16
   41f94:	283ff826 	beq	r5,zero,41f78 <_malloc_r+0x104>
   41f98:	400f883a 	mov	r7,r8
   41f9c:	9c000417 	ldw	r16,16(r19)
   41fa0:	02400174 	movhi	r9,5
   41fa4:	4a467a04 	addi	r9,r9,6632
   41fa8:	82405f26 	beq	r16,r9,42128 <_malloc_r+0x2b4>
   41fac:	80c00117 	ldw	r3,4(r16)
   41fb0:	00bfff04 	movi	r2,-4
   41fb4:	1884703a 	and	r2,r3,r2
   41fb8:	1447c83a 	sub	r3,r2,r17
   41fbc:	19000410 	cmplti	r4,r3,16
   41fc0:	20010a26 	beq	r4,zero,423ec <_malloc_r+0x578>
   41fc4:	9a400515 	stw	r9,20(r19)
   41fc8:	9a400415 	stw	r9,16(r19)
   41fcc:	1800ff0e 	bge	r3,zero,423cc <_malloc_r+0x558>
   41fd0:	10c08028 	cmpgeui	r3,r2,512
   41fd4:	1800c11e 	bne	r3,zero,422dc <_malloc_r+0x468>
   41fd8:	1006d0fa 	srli	r3,r2,3
   41fdc:	1008d17a 	srli	r4,r2,5
   41fe0:	00800044 	movi	r2,1
   41fe4:	18c00044 	addi	r3,r3,1
   41fe8:	180690fa 	slli	r3,r3,3
   41fec:	99400117 	ldw	r5,4(r19)
   41ff0:	1104983a 	sll	r2,r2,r4
   41ff4:	98c7883a 	add	r3,r19,r3
   41ff8:	19000017 	ldw	r4,0(r3)
   41ffc:	1144b03a 	or	r2,r2,r5
   42000:	197ffe04 	addi	r5,r3,-8
   42004:	81400315 	stw	r5,12(r16)
   42008:	81000215 	stw	r4,8(r16)
   4200c:	98800115 	stw	r2,4(r19)
   42010:	1c000015 	stw	r16,0(r3)
   42014:	24000315 	stw	r16,12(r4)
   42018:	3807d0ba 	srai	r3,r7,2
   4201c:	01000044 	movi	r4,1
   42020:	20c8983a 	sll	r4,r4,r3
   42024:	11004536 	bltu	r2,r4,4213c <_malloc_r+0x2c8>
   42028:	2086703a 	and	r3,r4,r2
   4202c:	18000a1e 	bne	r3,zero,42058 <_malloc_r+0x1e4>
   42030:	00ffff04 	movi	r3,-4
   42034:	2109883a 	add	r4,r4,r4
   42038:	38ce703a 	and	r7,r7,r3
   4203c:	2086703a 	and	r3,r4,r2
   42040:	39c00104 	addi	r7,r7,4
   42044:	1800041e 	bne	r3,zero,42058 <_malloc_r+0x1e4>
   42048:	2109883a 	add	r4,r4,r4
   4204c:	2086703a 	and	r3,r4,r2
   42050:	39c00104 	addi	r7,r7,4
   42054:	183ffc26 	beq	r3,zero,42048 <_malloc_r+0x1d4>
   42058:	02bfff04 	movi	r10,-4
   4205c:	381690fa 	slli	r11,r7,3
   42060:	3819883a 	mov	r12,r7
   42064:	9ad7883a 	add	r11,r19,r11
   42068:	5811883a 	mov	r8,r11
   4206c:	40800317 	ldw	r2,12(r8)
   42070:	4080bc26 	beq	r8,r2,42364 <_malloc_r+0x4f0>
   42074:	10c00117 	ldw	r3,4(r2)
   42078:	1021883a 	mov	r16,r2
   4207c:	10800317 	ldw	r2,12(r2)
   42080:	1a86703a 	and	r3,r3,r10
   42084:	1c4bc83a 	sub	r5,r3,r17
   42088:	29800410 	cmplti	r6,r5,16
   4208c:	3000ba26 	beq	r6,zero,42378 <_malloc_r+0x504>
   42090:	283ff716 	blt	r5,zero,42070 <_malloc_r+0x1fc>
   42094:	80c7883a 	add	r3,r16,r3
   42098:	19400117 	ldw	r5,4(r3)
   4209c:	81800217 	ldw	r6,8(r16)
   420a0:	9009883a 	mov	r4,r18
   420a4:	29400054 	ori	r5,r5,1
   420a8:	19400115 	stw	r5,4(r3)
   420ac:	30800315 	stw	r2,12(r6)
   420b0:	11800215 	stw	r6,8(r2)
   420b4:	004eb4c0 	call	4eb4c <__malloc_unlock>
   420b8:	80800204 	addi	r2,r16,8
   420bc:	00000306 	br	420cc <_malloc_r+0x258>
   420c0:	00800304 	movi	r2,12
   420c4:	90800015 	stw	r2,0(r18)
   420c8:	0005883a 	mov	r2,zero
   420cc:	dfc00917 	ldw	ra,36(sp)
   420d0:	df000817 	ldw	fp,32(sp)
   420d4:	ddc00717 	ldw	r23,28(sp)
   420d8:	dd800617 	ldw	r22,24(sp)
   420dc:	dd400517 	ldw	r21,20(sp)
   420e0:	dd000417 	ldw	r20,16(sp)
   420e4:	dcc00317 	ldw	r19,12(sp)
   420e8:	dc800217 	ldw	r18,8(sp)
   420ec:	dc400117 	ldw	r17,4(sp)
   420f0:	dc000017 	ldw	r16,0(sp)
   420f4:	dec00a04 	addi	sp,sp,40
   420f8:	f800283a 	ret
   420fc:	01008004 	movi	r4,512
   42100:	01c01004 	movi	r7,64
   42104:	02000fc4 	movi	r8,63
   42108:	003f9306 	br	41f58 <_malloc_r+0xe4>
   4210c:	14000317 	ldw	r16,12(r2)
   42110:	39c00084 	addi	r7,r7,2
   42114:	143f721e 	bne	r2,r16,41ee0 <_malloc_r+0x6c>
   42118:	9c000417 	ldw	r16,16(r19)
   4211c:	02400174 	movhi	r9,5
   42120:	4a467a04 	addi	r9,r9,6632
   42124:	827fa11e 	bne	r16,r9,41fac <_malloc_r+0x138>
   42128:	3807d0ba 	srai	r3,r7,2
   4212c:	01000044 	movi	r4,1
   42130:	98800117 	ldw	r2,4(r19)
   42134:	20c8983a 	sll	r4,r4,r3
   42138:	113fbb2e 	bgeu	r2,r4,42028 <_malloc_r+0x1b4>
   4213c:	9c000217 	ldw	r16,8(r19)
   42140:	00bfff04 	movi	r2,-4
   42144:	85400117 	ldw	r21,4(r16)
   42148:	a8ac703a 	and	r22,r21,r2
   4214c:	b4400336 	bltu	r22,r17,4215c <_malloc_r+0x2e8>
   42150:	b445c83a 	sub	r2,r22,r17
   42154:	10c00408 	cmpgei	r3,r2,16
   42158:	1800541e 	bne	r3,zero,422ac <_malloc_r+0x438>
   4215c:	00800174 	movhi	r2,5
   42160:	108c6417 	ldw	r2,12688(r2)
   42164:	00c00174 	movhi	r3,5
   42168:	1d537417 	ldw	r21,19920(r3)
   4216c:	10bfffd8 	cmpnei	r2,r2,-1
   42170:	85b9883a 	add	fp,r16,r22
   42174:	8d6b883a 	add	r21,r17,r21
   42178:	1000d626 	beq	r2,zero,424d4 <_malloc_r+0x660>
   4217c:	ad4403c4 	addi	r21,r21,4111
   42180:	00bc0004 	movi	r2,-4096
   42184:	a8aa703a 	and	r21,r21,r2
   42188:	a80b883a 	mov	r5,r21
   4218c:	9009883a 	mov	r4,r18
   42190:	0042b5c0 	call	42b5c <_sbrk_r>
   42194:	102f883a 	mov	r23,r2
   42198:	10bfffd8 	cmpnei	r2,r2,-1
   4219c:	1000a826 	beq	r2,zero,42440 <_malloc_r+0x5cc>
   421a0:	bf00a636 	bltu	r23,fp,4243c <_malloc_r+0x5c8>
   421a4:	00800174 	movhi	r2,5
   421a8:	15137d17 	ldw	r20,19956(r2)
   421ac:	ad29883a 	add	r20,r21,r20
   421b0:	15137d15 	stw	r20,19956(r2)
   421b4:	a007883a 	mov	r3,r20
   421b8:	e5c0ec26 	beq	fp,r23,4256c <_malloc_r+0x6f8>
   421bc:	00800174 	movhi	r2,5
   421c0:	108c6417 	ldw	r2,12688(r2)
   421c4:	10bfffd8 	cmpnei	r2,r2,-1
   421c8:	1000ef26 	beq	r2,zero,42588 <_malloc_r+0x714>
   421cc:	bf39c83a 	sub	fp,r23,fp
   421d0:	e0c7883a 	add	r3,fp,r3
   421d4:	00800174 	movhi	r2,5
   421d8:	10d37d15 	stw	r3,19956(r2)
   421dc:	bf0001cc 	andi	fp,r23,7
   421e0:	e000c526 	beq	fp,zero,424f8 <_malloc_r+0x684>
   421e4:	bf2fc83a 	sub	r23,r23,fp
   421e8:	bdc00204 	addi	r23,r23,8
   421ec:	05040204 	movi	r20,4104
   421f0:	a729c83a 	sub	r20,r20,fp
   421f4:	bd6b883a 	add	r21,r23,r21
   421f8:	a569c83a 	sub	r20,r20,r21
   421fc:	a503ffcc 	andi	r20,r20,4095
   42200:	a00b883a 	mov	r5,r20
   42204:	9009883a 	mov	r4,r18
   42208:	0042b5c0 	call	42b5c <_sbrk_r>
   4220c:	10ffffe0 	cmpeqi	r3,r2,-1
   42210:	1800f31e 	bne	r3,zero,425e0 <_malloc_r+0x76c>
   42214:	15c5c83a 	sub	r2,r2,r23
   42218:	152b883a 	add	r21,r2,r20
   4221c:	00800174 	movhi	r2,5
   42220:	11537d17 	ldw	r5,19956(r2)
   42224:	9dc00215 	stw	r23,8(r19)
   42228:	ad400054 	ori	r21,r21,1
   4222c:	a169883a 	add	r20,r20,r5
   42230:	15137d15 	stw	r20,19956(r2)
   42234:	bd400115 	stw	r21,4(r23)
   42238:	84c0d626 	beq	r16,r19,42594 <_malloc_r+0x720>
   4223c:	b0800428 	cmpgeui	r2,r22,16
   42240:	1000d626 	beq	r2,zero,4259c <_malloc_r+0x728>
   42244:	80c00117 	ldw	r3,4(r16)
   42248:	013ffe04 	movi	r4,-8
   4224c:	b0bffd04 	addi	r2,r22,-12
   42250:	1104703a 	and	r2,r2,r4
   42254:	18c0004c 	andi	r3,r3,1
   42258:	1886b03a 	or	r3,r3,r2
   4225c:	80c00115 	stw	r3,4(r16)
   42260:	01000144 	movi	r4,5
   42264:	8087883a 	add	r3,r16,r2
   42268:	19000115 	stw	r4,4(r3)
   4226c:	19000215 	stw	r4,8(r3)
   42270:	10800428 	cmpgeui	r2,r2,16
   42274:	1000df1e 	bne	r2,zero,425f4 <_malloc_r+0x780>
   42278:	bd400117 	ldw	r21,4(r23)
   4227c:	b821883a 	mov	r16,r23
   42280:	00800174 	movhi	r2,5
   42284:	10937317 	ldw	r2,19916(r2)
   42288:	1500022e 	bgeu	r2,r20,42294 <_malloc_r+0x420>
   4228c:	00800174 	movhi	r2,5
   42290:	15137315 	stw	r20,19916(r2)
   42294:	00800174 	movhi	r2,5
   42298:	10937217 	ldw	r2,19912(r2)
   4229c:	15006a2e 	bgeu	r2,r20,42448 <_malloc_r+0x5d4>
   422a0:	00800174 	movhi	r2,5
   422a4:	15137215 	stw	r20,19912(r2)
   422a8:	00006706 	br	42448 <_malloc_r+0x5d4>
   422ac:	88c00054 	ori	r3,r17,1
   422b0:	80c00115 	stw	r3,4(r16)
   422b4:	8463883a 	add	r17,r16,r17
   422b8:	10800054 	ori	r2,r2,1
   422bc:	9c400215 	stw	r17,8(r19)
   422c0:	88800115 	stw	r2,4(r17)
   422c4:	9009883a 	mov	r4,r18
   422c8:	004eb4c0 	call	4eb4c <__malloc_unlock>
   422cc:	80800204 	addi	r2,r16,8
   422d0:	003f7e06 	br	420cc <_malloc_r+0x258>
   422d4:	81000317 	ldw	r4,12(r16)
   422d8:	003f0506 	br	41ef0 <_malloc_r+0x7c>
   422dc:	1006d27a 	srli	r3,r2,9
   422e0:	19000168 	cmpgeui	r4,r3,5
   422e4:	20005026 	beq	r4,zero,42428 <_malloc_r+0x5b4>
   422e8:	19000568 	cmpgeui	r4,r3,21
   422ec:	20008c1e 	bne	r4,zero,42520 <_malloc_r+0x6ac>
   422f0:	19401704 	addi	r5,r3,92
   422f4:	280a90fa 	slli	r5,r5,3
   422f8:	190016c4 	addi	r4,r3,91
   422fc:	994b883a 	add	r5,r19,r5
   42300:	28c00017 	ldw	r3,0(r5)
   42304:	297ffe04 	addi	r5,r5,-8
   42308:	28c07426 	beq	r5,r3,424dc <_malloc_r+0x668>
   4230c:	01bfff04 	movi	r6,-4
   42310:	19000117 	ldw	r4,4(r3)
   42314:	2188703a 	and	r4,r4,r6
   42318:	1100022e 	bgeu	r2,r4,42324 <_malloc_r+0x4b0>
   4231c:	18c00217 	ldw	r3,8(r3)
   42320:	28fffb1e 	bne	r5,r3,42310 <_malloc_r+0x49c>
   42324:	19400317 	ldw	r5,12(r3)
   42328:	98800117 	ldw	r2,4(r19)
   4232c:	81400315 	stw	r5,12(r16)
   42330:	80c00215 	stw	r3,8(r16)
   42334:	2c000215 	stw	r16,8(r5)
   42338:	1c000315 	stw	r16,12(r3)
   4233c:	003f3606 	br	42018 <_malloc_r+0x1a4>
   42340:	10c00568 	cmpgeui	r3,r2,21
   42344:	18004a26 	beq	r3,zero,42470 <_malloc_r+0x5fc>
   42348:	10c01568 	cmpgeui	r3,r2,85
   4234c:	18007b1e 	bne	r3,zero,4253c <_malloc_r+0x6c8>
   42350:	8804d33a 	srli	r2,r17,12
   42354:	11c01bc4 	addi	r7,r2,111
   42358:	380890fa 	slli	r4,r7,3
   4235c:	12001b84 	addi	r8,r2,110
   42360:	003efd06 	br	41f58 <_malloc_r+0xe4>
   42364:	63000044 	addi	r12,r12,1
   42368:	608000cc 	andi	r2,r12,3
   4236c:	42000204 	addi	r8,r8,8
   42370:	103f3e1e 	bne	r2,zero,4206c <_malloc_r+0x1f8>
   42374:	00004506 	br	4248c <_malloc_r+0x618>
   42378:	81000217 	ldw	r4,8(r16)
   4237c:	89800054 	ori	r6,r17,1
   42380:	81800115 	stw	r6,4(r16)
   42384:	20800315 	stw	r2,12(r4)
   42388:	11000215 	stw	r4,8(r2)
   4238c:	8463883a 	add	r17,r16,r17
   42390:	9c400515 	stw	r17,20(r19)
   42394:	9c400415 	stw	r17,16(r19)
   42398:	28800054 	ori	r2,r5,1
   4239c:	88800115 	stw	r2,4(r17)
   423a0:	8a400315 	stw	r9,12(r17)
   423a4:	8a400215 	stw	r9,8(r17)
   423a8:	80c7883a 	add	r3,r16,r3
   423ac:	19400015 	stw	r5,0(r3)
   423b0:	9009883a 	mov	r4,r18
   423b4:	004eb4c0 	call	4eb4c <__malloc_unlock>
   423b8:	80800204 	addi	r2,r16,8
   423bc:	003f4306 	br	420cc <_malloc_r+0x258>
   423c0:	880ed0fa 	srli	r7,r17,3
   423c4:	88800204 	addi	r2,r17,8
   423c8:	003ebf06 	br	41ec8 <_malloc_r+0x54>
   423cc:	8085883a 	add	r2,r16,r2
   423d0:	10c00117 	ldw	r3,4(r2)
   423d4:	9009883a 	mov	r4,r18
   423d8:	18c00054 	ori	r3,r3,1
   423dc:	10c00115 	stw	r3,4(r2)
   423e0:	004eb4c0 	call	4eb4c <__malloc_unlock>
   423e4:	80800204 	addi	r2,r16,8
   423e8:	003f3806 	br	420cc <_malloc_r+0x258>
   423ec:	89000054 	ori	r4,r17,1
   423f0:	81000115 	stw	r4,4(r16)
   423f4:	8463883a 	add	r17,r16,r17
   423f8:	9c400515 	stw	r17,20(r19)
   423fc:	9c400415 	stw	r17,16(r19)
   42400:	19000054 	ori	r4,r3,1
   42404:	89000115 	stw	r4,4(r17)
   42408:	8085883a 	add	r2,r16,r2
   4240c:	8a400315 	stw	r9,12(r17)
   42410:	8a400215 	stw	r9,8(r17)
   42414:	10c00015 	stw	r3,0(r2)
   42418:	9009883a 	mov	r4,r18
   4241c:	004eb4c0 	call	4eb4c <__malloc_unlock>
   42420:	80800204 	addi	r2,r16,8
   42424:	003f2906 	br	420cc <_malloc_r+0x258>
   42428:	1006d1ba 	srli	r3,r2,6
   4242c:	19400e44 	addi	r5,r3,57
   42430:	280a90fa 	slli	r5,r5,3
   42434:	19000e04 	addi	r4,r3,56
   42438:	003fb006 	br	422fc <_malloc_r+0x488>
   4243c:	84c04626 	beq	r16,r19,42558 <_malloc_r+0x6e4>
   42440:	9c000217 	ldw	r16,8(r19)
   42444:	85400117 	ldw	r21,4(r16)
   42448:	00bfff04 	movi	r2,-4
   4244c:	a8aa703a 	and	r21,r21,r2
   42450:	ac45c83a 	sub	r2,r21,r17
   42454:	ac400236 	bltu	r21,r17,42460 <_malloc_r+0x5ec>
   42458:	10c00408 	cmpgei	r3,r2,16
   4245c:	183f931e 	bne	r3,zero,422ac <_malloc_r+0x438>
   42460:	9009883a 	mov	r4,r18
   42464:	004eb4c0 	call	4eb4c <__malloc_unlock>
   42468:	0005883a 	mov	r2,zero
   4246c:	003f1706 	br	420cc <_malloc_r+0x258>
   42470:	11c01704 	addi	r7,r2,92
   42474:	380890fa 	slli	r4,r7,3
   42478:	120016c4 	addi	r8,r2,91
   4247c:	003eb606 	br	41f58 <_malloc_r+0xe4>
   42480:	58800217 	ldw	r2,8(r11)
   42484:	39ffffc4 	addi	r7,r7,-1
   42488:	12c0701e 	bne	r2,r11,4264c <_malloc_r+0x7d8>
   4248c:	388000cc 	andi	r2,r7,3
   42490:	5afffe04 	addi	r11,r11,-8
   42494:	103ffa1e 	bne	r2,zero,42480 <_malloc_r+0x60c>
   42498:	98c00117 	ldw	r3,4(r19)
   4249c:	0104303a 	nor	r2,zero,r4
   424a0:	10c4703a 	and	r2,r2,r3
   424a4:	98800115 	stw	r2,4(r19)
   424a8:	2109883a 	add	r4,r4,r4
   424ac:	113f2336 	bltu	r2,r4,4213c <_malloc_r+0x2c8>
   424b0:	203f2226 	beq	r4,zero,4213c <_malloc_r+0x2c8>
   424b4:	2086703a 	and	r3,r4,r2
   424b8:	1800041e 	bne	r3,zero,424cc <_malloc_r+0x658>
   424bc:	2109883a 	add	r4,r4,r4
   424c0:	2086703a 	and	r3,r4,r2
   424c4:	63000104 	addi	r12,r12,4
   424c8:	183ffc26 	beq	r3,zero,424bc <_malloc_r+0x648>
   424cc:	600f883a 	mov	r7,r12
   424d0:	003ee206 	br	4205c <_malloc_r+0x1e8>
   424d4:	ad400404 	addi	r21,r21,16
   424d8:	003f2b06 	br	42188 <_malloc_r+0x314>
   424dc:	2009d0ba 	srai	r4,r4,2
   424e0:	00800044 	movi	r2,1
   424e4:	99800117 	ldw	r6,4(r19)
   424e8:	1104983a 	sll	r2,r2,r4
   424ec:	1184b03a 	or	r2,r2,r6
   424f0:	98800115 	stw	r2,4(r19)
   424f4:	003f8d06 	br	4232c <_malloc_r+0x4b8>
   424f8:	bd69883a 	add	r20,r23,r21
   424fc:	0529c83a 	sub	r20,zero,r20
   42500:	a503ffcc 	andi	r20,r20,4095
   42504:	a00b883a 	mov	r5,r20
   42508:	9009883a 	mov	r4,r18
   4250c:	0042b5c0 	call	42b5c <_sbrk_r>
   42510:	10ffffe0 	cmpeqi	r3,r2,-1
   42514:	183f3f26 	beq	r3,zero,42214 <_malloc_r+0x3a0>
   42518:	0029883a 	mov	r20,zero
   4251c:	003f3f06 	br	4221c <_malloc_r+0x3a8>
   42520:	19001568 	cmpgeui	r4,r3,85
   42524:	2000201e 	bne	r4,zero,425a8 <_malloc_r+0x734>
   42528:	1006d33a 	srli	r3,r2,12
   4252c:	19401bc4 	addi	r5,r3,111
   42530:	280a90fa 	slli	r5,r5,3
   42534:	19001b84 	addi	r4,r3,110
   42538:	003f7006 	br	422fc <_malloc_r+0x488>
   4253c:	10c05568 	cmpgeui	r3,r2,341
   42540:	1800201e 	bne	r3,zero,425c4 <_malloc_r+0x750>
   42544:	8804d3fa 	srli	r2,r17,15
   42548:	11c01e04 	addi	r7,r2,120
   4254c:	380890fa 	slli	r4,r7,3
   42550:	12001dc4 	addi	r8,r2,119
   42554:	003e8006 	br	41f58 <_malloc_r+0xe4>
   42558:	00800174 	movhi	r2,5
   4255c:	10d37d17 	ldw	r3,19956(r2)
   42560:	a8c7883a 	add	r3,r21,r3
   42564:	10d37d15 	stw	r3,19956(r2)
   42568:	003f1406 	br	421bc <_malloc_r+0x348>
   4256c:	e083ffcc 	andi	r2,fp,4095
   42570:	103f121e 	bne	r2,zero,421bc <_malloc_r+0x348>
   42574:	9c000217 	ldw	r16,8(r19)
   42578:	b56b883a 	add	r21,r22,r21
   4257c:	ad400054 	ori	r21,r21,1
   42580:	85400115 	stw	r21,4(r16)
   42584:	003f3e06 	br	42280 <_malloc_r+0x40c>
   42588:	00800174 	movhi	r2,5
   4258c:	15cc6415 	stw	r23,12688(r2)
   42590:	003f1206 	br	421dc <_malloc_r+0x368>
   42594:	b821883a 	mov	r16,r23
   42598:	003f3906 	br	42280 <_malloc_r+0x40c>
   4259c:	00800044 	movi	r2,1
   425a0:	b8800115 	stw	r2,4(r23)
   425a4:	003fae06 	br	42460 <_malloc_r+0x5ec>
   425a8:	19005568 	cmpgeui	r4,r3,341
   425ac:	2000191e 	bne	r4,zero,42614 <_malloc_r+0x7a0>
   425b0:	1006d3fa 	srli	r3,r2,15
   425b4:	19401e04 	addi	r5,r3,120
   425b8:	280a90fa 	slli	r5,r5,3
   425bc:	19001dc4 	addi	r4,r3,119
   425c0:	003f4e06 	br	422fc <_malloc_r+0x488>
   425c4:	10815568 	cmpgeui	r2,r2,1365
   425c8:	1000191e 	bne	r2,zero,42630 <_malloc_r+0x7bc>
   425cc:	8804d4ba 	srli	r2,r17,18
   425d0:	11c01f44 	addi	r7,r2,125
   425d4:	380890fa 	slli	r4,r7,3
   425d8:	12001f04 	addi	r8,r2,124
   425dc:	003e5e06 	br	41f58 <_malloc_r+0xe4>
   425e0:	e73ffe04 	addi	fp,fp,-8
   425e4:	af2b883a 	add	r21,r21,fp
   425e8:	adebc83a 	sub	r21,r21,r23
   425ec:	0029883a 	mov	r20,zero
   425f0:	003f0a06 	br	4221c <_malloc_r+0x3a8>
   425f4:	81400204 	addi	r5,r16,8
   425f8:	9009883a 	mov	r4,r18
   425fc:	0040f7c0 	call	40f7c <_free_r>
   42600:	9c000217 	ldw	r16,8(r19)
   42604:	00800174 	movhi	r2,5
   42608:	15137d17 	ldw	r20,19956(r2)
   4260c:	85400117 	ldw	r21,4(r16)
   42610:	003f1b06 	br	42280 <_malloc_r+0x40c>
   42614:	18c15568 	cmpgeui	r3,r3,1365
   42618:	1800091e 	bne	r3,zero,42640 <_malloc_r+0x7cc>
   4261c:	1006d4ba 	srli	r3,r2,18
   42620:	19401f44 	addi	r5,r3,125
   42624:	280a90fa 	slli	r5,r5,3
   42628:	19001f04 	addi	r4,r3,124
   4262c:	003f3306 	br	422fc <_malloc_r+0x488>
   42630:	0100fe04 	movi	r4,1016
   42634:	01c01fc4 	movi	r7,127
   42638:	02001f84 	movi	r8,126
   4263c:	003e4606 	br	41f58 <_malloc_r+0xe4>
   42640:	0140fe04 	movi	r5,1016
   42644:	01001f84 	movi	r4,126
   42648:	003f2c06 	br	422fc <_malloc_r+0x488>
   4264c:	98800117 	ldw	r2,4(r19)
   42650:	003f9506 	br	424a8 <_malloc_r+0x634>

00042654 <memset>:
   42654:	20c000cc 	andi	r3,r4,3
   42658:	2005883a 	mov	r2,r4
   4265c:	18003626 	beq	r3,zero,42738 <memset+0xe4>
   42660:	31ffffc4 	addi	r7,r6,-1
   42664:	30003326 	beq	r6,zero,42734 <memset+0xe0>
   42668:	2811883a 	mov	r8,r5
   4266c:	2007883a 	mov	r3,r4
   42670:	00000306 	br	42680 <memset+0x2c>
   42674:	39ffffc4 	addi	r7,r7,-1
   42678:	39bfffe0 	cmpeqi	r6,r7,-1
   4267c:	30002d1e 	bne	r6,zero,42734 <memset+0xe0>
   42680:	18c00044 	addi	r3,r3,1
   42684:	198000cc 	andi	r6,r3,3
   42688:	1a3fffc5 	stb	r8,-1(r3)
   4268c:	303ff91e 	bne	r6,zero,42674 <memset+0x20>
   42690:	39000130 	cmpltui	r4,r7,4
   42694:	2000221e 	bne	r4,zero,42720 <memset+0xcc>
   42698:	29003fcc 	andi	r4,r5,255
   4269c:	200c923a 	slli	r6,r4,8
   426a0:	3a000430 	cmpltui	r8,r7,16
   426a4:	3108b03a 	or	r4,r6,r4
   426a8:	200c943a 	slli	r6,r4,16
   426ac:	310cb03a 	or	r6,r6,r4
   426b0:	40000e1e 	bne	r8,zero,426ec <memset+0x98>
   426b4:	393ffc04 	addi	r4,r7,-16
   426b8:	2008d13a 	srli	r4,r4,4
   426bc:	21000044 	addi	r4,r4,1
   426c0:	2008913a 	slli	r4,r4,4
   426c4:	1909883a 	add	r4,r3,r4
   426c8:	19800015 	stw	r6,0(r3)
   426cc:	19800115 	stw	r6,4(r3)
   426d0:	19800215 	stw	r6,8(r3)
   426d4:	19800315 	stw	r6,12(r3)
   426d8:	18c00404 	addi	r3,r3,16
   426dc:	20fffa1e 	bne	r4,r3,426c8 <memset+0x74>
   426e0:	3900030c 	andi	r4,r7,12
   426e4:	39c003cc 	andi	r7,r7,15
   426e8:	20000d26 	beq	r4,zero,42720 <memset+0xcc>
   426ec:	1811883a 	mov	r8,r3
   426f0:	42000104 	addi	r8,r8,4
   426f4:	3a09c83a 	sub	r4,r7,r8
   426f8:	1909883a 	add	r4,r3,r4
   426fc:	21000128 	cmpgeui	r4,r4,4
   42700:	41bfff15 	stw	r6,-4(r8)
   42704:	203ffa1e 	bne	r4,zero,426f0 <memset+0x9c>
   42708:	393fff04 	addi	r4,r7,-4
   4270c:	2008d0ba 	srli	r4,r4,2
   42710:	39c000cc 	andi	r7,r7,3
   42714:	21000044 	addi	r4,r4,1
   42718:	200890ba 	slli	r4,r4,2
   4271c:	1907883a 	add	r3,r3,r4
   42720:	38000426 	beq	r7,zero,42734 <memset+0xe0>
   42724:	19cf883a 	add	r7,r3,r7
   42728:	18c00044 	addi	r3,r3,1
   4272c:	197fffc5 	stb	r5,-1(r3)
   42730:	38fffd1e 	bne	r7,r3,42728 <memset+0xd4>
   42734:	f800283a 	ret
   42738:	2007883a 	mov	r3,r4
   4273c:	300f883a 	mov	r7,r6
   42740:	003fd306 	br	42690 <memset+0x3c>

00042744 <_open_r>:
   42744:	2807883a 	mov	r3,r5
   42748:	defffe04 	addi	sp,sp,-8
   4274c:	dc000015 	stw	r16,0(sp)
   42750:	300b883a 	mov	r5,r6
   42754:	00800174 	movhi	r2,5
   42758:	380d883a 	mov	r6,r7
   4275c:	2021883a 	mov	r16,r4
   42760:	1809883a 	mov	r4,r3
   42764:	dfc00115 	stw	ra,4(sp)
   42768:	10137115 	stw	zero,19908(r2)
   4276c:	004ec880 	call	4ec88 <open>
   42770:	10ffffd8 	cmpnei	r3,r2,-1
   42774:	18000426 	beq	r3,zero,42788 <_open_r+0x44>
   42778:	dfc00117 	ldw	ra,4(sp)
   4277c:	dc000017 	ldw	r16,0(sp)
   42780:	dec00204 	addi	sp,sp,8
   42784:	f800283a 	ret
   42788:	00c00174 	movhi	r3,5
   4278c:	18d37117 	ldw	r3,19908(r3)
   42790:	183ff926 	beq	r3,zero,42778 <_open_r+0x34>
   42794:	80c00015 	stw	r3,0(r16)
   42798:	dfc00117 	ldw	ra,4(sp)
   4279c:	dc000017 	ldw	r16,0(sp)
   427a0:	dec00204 	addi	sp,sp,8
   427a4:	f800283a 	ret

000427a8 <_puts_r>:
   427a8:	defff504 	addi	sp,sp,-44
   427ac:	dc000815 	stw	r16,32(sp)
   427b0:	2021883a 	mov	r16,r4
   427b4:	2809883a 	mov	r4,r5
   427b8:	dc400915 	stw	r17,36(sp)
   427bc:	dfc00a15 	stw	ra,40(sp)
   427c0:	2823883a 	mov	r17,r5
   427c4:	0042cf40 	call	42cf4 <strlen>
   427c8:	11000044 	addi	r4,r2,1
   427cc:	d8800515 	stw	r2,20(sp)
   427d0:	00800044 	movi	r2,1
   427d4:	00c00174 	movhi	r3,5
   427d8:	d8800715 	stw	r2,28(sp)
   427dc:	d8800404 	addi	r2,sp,16
   427e0:	18c3d504 	addi	r3,r3,3924
   427e4:	d8800115 	stw	r2,4(sp)
   427e8:	00800084 	movi	r2,2
   427ec:	dc400415 	stw	r17,16(sp)
   427f0:	d8c00615 	stw	r3,24(sp)
   427f4:	d9000315 	stw	r4,12(sp)
   427f8:	d8800215 	stw	r2,8(sp)
   427fc:	81400217 	ldw	r5,8(r16)
   42800:	80000226 	beq	r16,zero,4280c <_puts_r+0x64>
   42804:	80800e17 	ldw	r2,56(r16)
   42808:	10001326 	beq	r2,zero,42858 <_puts_r+0xb0>
   4280c:	2880030b 	ldhu	r2,12(r5)
   42810:	10c8000c 	andi	r3,r2,8192
   42814:	1800061e 	bne	r3,zero,42830 <_puts_r+0x88>
   42818:	28c01917 	ldw	r3,100(r5)
   4281c:	0137ffc4 	movi	r4,-8193
   42820:	10880014 	ori	r2,r2,8192
   42824:	1906703a 	and	r3,r3,r4
   42828:	2880030d 	sth	r2,12(r5)
   4282c:	28c01915 	stw	r3,100(r5)
   42830:	d9800104 	addi	r6,sp,4
   42834:	8009883a 	mov	r4,r16
   42838:	0046bac0 	call	46bac <__sfvwrite_r>
   4283c:	10000b1e 	bne	r2,zero,4286c <_puts_r+0xc4>
   42840:	00800284 	movi	r2,10
   42844:	dfc00a17 	ldw	ra,40(sp)
   42848:	dc400917 	ldw	r17,36(sp)
   4284c:	dc000817 	ldw	r16,32(sp)
   42850:	dec00b04 	addi	sp,sp,44
   42854:	f800283a 	ret
   42858:	8009883a 	mov	r4,r16
   4285c:	d9400015 	stw	r5,0(sp)
   42860:	0040cc40 	call	40cc4 <__sinit>
   42864:	d9400017 	ldw	r5,0(sp)
   42868:	003fe806 	br	4280c <_puts_r+0x64>
   4286c:	00bfffc4 	movi	r2,-1
   42870:	003ff406 	br	42844 <_puts_r+0x9c>

00042874 <puts>:
   42874:	00800174 	movhi	r2,5
   42878:	200b883a 	mov	r5,r4
   4287c:	110c6317 	ldw	r4,12684(r2)
   42880:	00427a81 	jmpi	427a8 <_puts_r>

00042884 <lflush>:
   42884:	2080030b 	ldhu	r2,12(r4)
   42888:	1080024c 	andi	r2,r2,9
   4288c:	10800258 	cmpnei	r2,r2,9
   42890:	10000226 	beq	r2,zero,4289c <lflush+0x18>
   42894:	0005883a 	mov	r2,zero
   42898:	f800283a 	ret
   4289c:	00408dc1 	jmpi	408dc <fflush>

000428a0 <__srefill_r>:
   428a0:	defffc04 	addi	sp,sp,-16
   428a4:	dc400115 	stw	r17,4(sp)
   428a8:	dc000015 	stw	r16,0(sp)
   428ac:	dfc00315 	stw	ra,12(sp)
   428b0:	dc800215 	stw	r18,8(sp)
   428b4:	2023883a 	mov	r17,r4
   428b8:	2821883a 	mov	r16,r5
   428bc:	20000226 	beq	r4,zero,428c8 <__srefill_r+0x28>
   428c0:	20800e17 	ldw	r2,56(r4)
   428c4:	10003a26 	beq	r2,zero,429b0 <__srefill_r+0x110>
   428c8:	80c0030b 	ldhu	r3,12(r16)
   428cc:	1908000c 	andi	r4,r3,8192
   428d0:	1805883a 	mov	r2,r3
   428d4:	2000071e 	bne	r4,zero,428f4 <__srefill_r+0x54>
   428d8:	81001917 	ldw	r4,100(r16)
   428dc:	18880014 	ori	r2,r3,8192
   428e0:	00f7ffc4 	movi	r3,-8193
   428e4:	20c8703a 	and	r4,r4,r3
   428e8:	8080030d 	sth	r2,12(r16)
   428ec:	1007883a 	mov	r3,r2
   428f0:	81001915 	stw	r4,100(r16)
   428f4:	80000115 	stw	zero,4(r16)
   428f8:	1100080c 	andi	r4,r2,32
   428fc:	20004d1e 	bne	r4,zero,42a34 <__srefill_r+0x194>
   42900:	1100010c 	andi	r4,r2,4
   42904:	20001c1e 	bne	r4,zero,42978 <__srefill_r+0xd8>
   42908:	1100040c 	andi	r4,r2,16
   4290c:	20005126 	beq	r4,zero,42a54 <__srefill_r+0x1b4>
   42910:	1080020c 	andi	r2,r2,8
   42914:	1000371e 	bne	r2,zero,429f4 <__srefill_r+0x154>
   42918:	18c00114 	ori	r3,r3,4
   4291c:	80c0030d 	sth	r3,12(r16)
   42920:	80800417 	ldw	r2,16(r16)
   42924:	10003c26 	beq	r2,zero,42a18 <__srefill_r+0x178>
   42928:	8480030b 	ldhu	r18,12(r16)
   4292c:	908000cc 	andi	r2,r18,3
   42930:	1000211e 	bne	r2,zero,429b8 <__srefill_r+0x118>
   42934:	81800417 	ldw	r6,16(r16)
   42938:	80800817 	ldw	r2,32(r16)
   4293c:	81c00517 	ldw	r7,20(r16)
   42940:	81400717 	ldw	r5,28(r16)
   42944:	81800015 	stw	r6,0(r16)
   42948:	8809883a 	mov	r4,r17
   4294c:	103ee83a 	callr	r2
   42950:	1007883a 	mov	r3,r2
   42954:	80800115 	stw	r2,4(r16)
   42958:	0005883a 	mov	r2,zero
   4295c:	00c0370e 	bge	zero,r3,42a3c <__srefill_r+0x19c>
   42960:	dfc00317 	ldw	ra,12(sp)
   42964:	dc800217 	ldw	r18,8(sp)
   42968:	dc400117 	ldw	r17,4(sp)
   4296c:	dc000017 	ldw	r16,0(sp)
   42970:	dec00404 	addi	sp,sp,16
   42974:	f800283a 	ret
   42978:	81400c17 	ldw	r5,48(r16)
   4297c:	283fe826 	beq	r5,zero,42920 <__srefill_r+0x80>
   42980:	80801004 	addi	r2,r16,64
   42984:	28800226 	beq	r5,r2,42990 <__srefill_r+0xf0>
   42988:	8809883a 	mov	r4,r17
   4298c:	0040f7c0 	call	40f7c <_free_r>
   42990:	80800f17 	ldw	r2,60(r16)
   42994:	80000c15 	stw	zero,48(r16)
   42998:	80800115 	stw	r2,4(r16)
   4299c:	103fe026 	beq	r2,zero,42920 <__srefill_r+0x80>
   429a0:	80c00e17 	ldw	r3,56(r16)
   429a4:	0005883a 	mov	r2,zero
   429a8:	80c00015 	stw	r3,0(r16)
   429ac:	003fec06 	br	42960 <__srefill_r+0xc0>
   429b0:	0040cc40 	call	40cc4 <__sinit>
   429b4:	003fc406 	br	428c8 <__srefill_r+0x28>
   429b8:	00800174 	movhi	r2,5
   429bc:	110c6217 	ldw	r4,12680(r2)
   429c0:	01400134 	movhi	r5,4
   429c4:	00800044 	movi	r2,1
   429c8:	8080030d 	sth	r2,12(r16)
   429cc:	294a2104 	addi	r5,r5,10372
   429d0:	00418240 	call	41824 <_fwalk>
   429d4:	9080024c 	andi	r2,r18,9
   429d8:	8480030d 	sth	r18,12(r16)
   429dc:	10800258 	cmpnei	r2,r2,9
   429e0:	103fd41e 	bne	r2,zero,42934 <__srefill_r+0x94>
   429e4:	800b883a 	mov	r5,r16
   429e8:	8809883a 	mov	r4,r17
   429ec:	00406540 	call	40654 <__sflush_r>
   429f0:	003fd006 	br	42934 <__srefill_r+0x94>
   429f4:	800b883a 	mov	r5,r16
   429f8:	8809883a 	mov	r4,r17
   429fc:	004087c0 	call	4087c <_fflush_r>
   42a00:	10000c1e 	bne	r2,zero,42a34 <__srefill_r+0x194>
   42a04:	80c0030b 	ldhu	r3,12(r16)
   42a08:	80000215 	stw	zero,8(r16)
   42a0c:	80000615 	stw	zero,24(r16)
   42a10:	18fffdcc 	andi	r3,r3,65527
   42a14:	003fc006 	br	42918 <__srefill_r+0x78>
   42a18:	800b883a 	mov	r5,r16
   42a1c:	8809883a 	mov	r4,r17
   42a20:	0041c2c0 	call	41c2c <__smakebuf_r>
   42a24:	003fc006 	br	42928 <__srefill_r+0x88>
   42a28:	10801014 	ori	r2,r2,64
   42a2c:	80000115 	stw	zero,4(r16)
   42a30:	8080030d 	sth	r2,12(r16)
   42a34:	00bfffc4 	movi	r2,-1
   42a38:	003fc906 	br	42960 <__srefill_r+0xc0>
   42a3c:	8080030b 	ldhu	r2,12(r16)
   42a40:	183ff91e 	bne	r3,zero,42a28 <__srefill_r+0x188>
   42a44:	10800814 	ori	r2,r2,32
   42a48:	8080030d 	sth	r2,12(r16)
   42a4c:	00bfffc4 	movi	r2,-1
   42a50:	003fc306 	br	42960 <__srefill_r+0xc0>
   42a54:	00800244 	movi	r2,9
   42a58:	88800015 	stw	r2,0(r17)
   42a5c:	18c01014 	ori	r3,r3,64
   42a60:	80c0030d 	sth	r3,12(r16)
   42a64:	00bfffc4 	movi	r2,-1
   42a68:	003fbd06 	br	42960 <__srefill_r+0xc0>

00042a6c <__srget_r>:
   42a6c:	defffd04 	addi	sp,sp,-12
   42a70:	dc400115 	stw	r17,4(sp)
   42a74:	dc000015 	stw	r16,0(sp)
   42a78:	dfc00215 	stw	ra,8(sp)
   42a7c:	2023883a 	mov	r17,r4
   42a80:	2821883a 	mov	r16,r5
   42a84:	20000226 	beq	r4,zero,42a90 <__srget_r+0x24>
   42a88:	20800e17 	ldw	r2,56(r4)
   42a8c:	10001026 	beq	r2,zero,42ad0 <__srget_r+0x64>
   42a90:	800b883a 	mov	r5,r16
   42a94:	8809883a 	mov	r4,r17
   42a98:	00428a00 	call	428a0 <__srefill_r>
   42a9c:	10000e1e 	bne	r2,zero,42ad8 <__srget_r+0x6c>
   42aa0:	80c00017 	ldw	r3,0(r16)
   42aa4:	80800117 	ldw	r2,4(r16)
   42aa8:	19000044 	addi	r4,r3,1
   42aac:	10bfffc4 	addi	r2,r2,-1
   42ab0:	80800115 	stw	r2,4(r16)
   42ab4:	81000015 	stw	r4,0(r16)
   42ab8:	18800003 	ldbu	r2,0(r3)
   42abc:	dfc00217 	ldw	ra,8(sp)
   42ac0:	dc400117 	ldw	r17,4(sp)
   42ac4:	dc000017 	ldw	r16,0(sp)
   42ac8:	dec00304 	addi	sp,sp,12
   42acc:	f800283a 	ret
   42ad0:	0040cc40 	call	40cc4 <__sinit>
   42ad4:	003fee06 	br	42a90 <__srget_r+0x24>
   42ad8:	00bfffc4 	movi	r2,-1
   42adc:	003ff706 	br	42abc <__srget_r+0x50>

00042ae0 <__srget>:
   42ae0:	defffd04 	addi	sp,sp,-12
   42ae4:	00800174 	movhi	r2,5
   42ae8:	dc400115 	stw	r17,4(sp)
   42aec:	144c6317 	ldw	r17,12684(r2)
   42af0:	dc000015 	stw	r16,0(sp)
   42af4:	dfc00215 	stw	ra,8(sp)
   42af8:	2021883a 	mov	r16,r4
   42afc:	88000226 	beq	r17,zero,42b08 <__srget+0x28>
   42b00:	88800e17 	ldw	r2,56(r17)
   42b04:	10001026 	beq	r2,zero,42b48 <__srget+0x68>
   42b08:	800b883a 	mov	r5,r16
   42b0c:	8809883a 	mov	r4,r17
   42b10:	00428a00 	call	428a0 <__srefill_r>
   42b14:	10000f1e 	bne	r2,zero,42b54 <__srget+0x74>
   42b18:	80c00017 	ldw	r3,0(r16)
   42b1c:	80800117 	ldw	r2,4(r16)
   42b20:	19000044 	addi	r4,r3,1
   42b24:	10bfffc4 	addi	r2,r2,-1
   42b28:	80800115 	stw	r2,4(r16)
   42b2c:	81000015 	stw	r4,0(r16)
   42b30:	18800003 	ldbu	r2,0(r3)
   42b34:	dfc00217 	ldw	ra,8(sp)
   42b38:	dc400117 	ldw	r17,4(sp)
   42b3c:	dc000017 	ldw	r16,0(sp)
   42b40:	dec00304 	addi	sp,sp,12
   42b44:	f800283a 	ret
   42b48:	8809883a 	mov	r4,r17
   42b4c:	0040cc40 	call	40cc4 <__sinit>
   42b50:	003fed06 	br	42b08 <__srget+0x28>
   42b54:	00bfffc4 	movi	r2,-1
   42b58:	003ff606 	br	42b34 <__srget+0x54>

00042b5c <_sbrk_r>:
   42b5c:	defffe04 	addi	sp,sp,-8
   42b60:	dc000015 	stw	r16,0(sp)
   42b64:	00800174 	movhi	r2,5
   42b68:	2021883a 	mov	r16,r4
   42b6c:	2809883a 	mov	r4,r5
   42b70:	dfc00115 	stw	ra,4(sp)
   42b74:	10137115 	stw	zero,19908(r2)
   42b78:	004ef9c0 	call	4ef9c <sbrk>
   42b7c:	10ffffd8 	cmpnei	r3,r2,-1
   42b80:	18000426 	beq	r3,zero,42b94 <_sbrk_r+0x38>
   42b84:	dfc00117 	ldw	ra,4(sp)
   42b88:	dc000017 	ldw	r16,0(sp)
   42b8c:	dec00204 	addi	sp,sp,8
   42b90:	f800283a 	ret
   42b94:	00c00174 	movhi	r3,5
   42b98:	18d37117 	ldw	r3,19908(r3)
   42b9c:	183ff926 	beq	r3,zero,42b84 <_sbrk_r+0x28>
   42ba0:	80c00015 	stw	r3,0(r16)
   42ba4:	dfc00117 	ldw	ra,4(sp)
   42ba8:	dc000017 	ldw	r16,0(sp)
   42bac:	dec00204 	addi	sp,sp,8
   42bb0:	f800283a 	ret

00042bb4 <__sread>:
   42bb4:	defffe04 	addi	sp,sp,-8
   42bb8:	dc000015 	stw	r16,0(sp)
   42bbc:	2821883a 	mov	r16,r5
   42bc0:	2940038f 	ldh	r5,14(r5)
   42bc4:	dfc00115 	stw	ra,4(sp)
   42bc8:	004863c0 	call	4863c <_read_r>
   42bcc:	10000716 	blt	r2,zero,42bec <__sread+0x38>
   42bd0:	80c01417 	ldw	r3,80(r16)
   42bd4:	1887883a 	add	r3,r3,r2
   42bd8:	80c01415 	stw	r3,80(r16)
   42bdc:	dfc00117 	ldw	ra,4(sp)
   42be0:	dc000017 	ldw	r16,0(sp)
   42be4:	dec00204 	addi	sp,sp,8
   42be8:	f800283a 	ret
   42bec:	80c0030b 	ldhu	r3,12(r16)
   42bf0:	18fbffcc 	andi	r3,r3,61439
   42bf4:	80c0030d 	sth	r3,12(r16)
   42bf8:	dfc00117 	ldw	ra,4(sp)
   42bfc:	dc000017 	ldw	r16,0(sp)
   42c00:	dec00204 	addi	sp,sp,8
   42c04:	f800283a 	ret

00042c08 <__seofread>:
   42c08:	0005883a 	mov	r2,zero
   42c0c:	f800283a 	ret

00042c10 <__swrite>:
   42c10:	2880030b 	ldhu	r2,12(r5)
   42c14:	defffb04 	addi	sp,sp,-20
   42c18:	dcc00315 	stw	r19,12(sp)
   42c1c:	dc800215 	stw	r18,8(sp)
   42c20:	dc400115 	stw	r17,4(sp)
   42c24:	dc000015 	stw	r16,0(sp)
   42c28:	dfc00415 	stw	ra,16(sp)
   42c2c:	10c0400c 	andi	r3,r2,256
   42c30:	2821883a 	mov	r16,r5
   42c34:	2023883a 	mov	r17,r4
   42c38:	2940038f 	ldh	r5,14(r5)
   42c3c:	3025883a 	mov	r18,r6
   42c40:	3827883a 	mov	r19,r7
   42c44:	18000c1e 	bne	r3,zero,42c78 <__swrite+0x68>
   42c48:	10bbffcc 	andi	r2,r2,61439
   42c4c:	980f883a 	mov	r7,r19
   42c50:	900d883a 	mov	r6,r18
   42c54:	8809883a 	mov	r4,r17
   42c58:	8080030d 	sth	r2,12(r16)
   42c5c:	dfc00417 	ldw	ra,16(sp)
   42c60:	dcc00317 	ldw	r19,12(sp)
   42c64:	dc800217 	ldw	r18,8(sp)
   42c68:	dc400117 	ldw	r17,4(sp)
   42c6c:	dc000017 	ldw	r16,0(sp)
   42c70:	dec00504 	addi	sp,sp,20
   42c74:	0044f6c1 	jmpi	44f6c <_write_r>
   42c78:	01c00084 	movi	r7,2
   42c7c:	000d883a 	mov	r6,zero
   42c80:	00470ec0 	call	470ec <_lseek_r>
   42c84:	8080030b 	ldhu	r2,12(r16)
   42c88:	8140038f 	ldh	r5,14(r16)
   42c8c:	003fee06 	br	42c48 <__swrite+0x38>

00042c90 <__sseek>:
   42c90:	defffe04 	addi	sp,sp,-8
   42c94:	dc000015 	stw	r16,0(sp)
   42c98:	2821883a 	mov	r16,r5
   42c9c:	2940038f 	ldh	r5,14(r5)
   42ca0:	dfc00115 	stw	ra,4(sp)
   42ca4:	00470ec0 	call	470ec <_lseek_r>
   42ca8:	10ffffd8 	cmpnei	r3,r2,-1
   42cac:	18000826 	beq	r3,zero,42cd0 <__sseek+0x40>
   42cb0:	80c0030b 	ldhu	r3,12(r16)
   42cb4:	80801415 	stw	r2,80(r16)
   42cb8:	18c40014 	ori	r3,r3,4096
   42cbc:	80c0030d 	sth	r3,12(r16)
   42cc0:	dfc00117 	ldw	ra,4(sp)
   42cc4:	dc000017 	ldw	r16,0(sp)
   42cc8:	dec00204 	addi	sp,sp,8
   42ccc:	f800283a 	ret
   42cd0:	80c0030b 	ldhu	r3,12(r16)
   42cd4:	18fbffcc 	andi	r3,r3,61439
   42cd8:	80c0030d 	sth	r3,12(r16)
   42cdc:	dfc00117 	ldw	ra,4(sp)
   42ce0:	dc000017 	ldw	r16,0(sp)
   42ce4:	dec00204 	addi	sp,sp,8
   42ce8:	f800283a 	ret

00042cec <__sclose>:
   42cec:	2940038f 	ldh	r5,14(r5)
   42cf0:	00451341 	jmpi	45134 <_close_r>

00042cf4 <strlen>:
   42cf4:	208000cc 	andi	r2,r4,3
   42cf8:	10000926 	beq	r2,zero,42d20 <strlen+0x2c>
   42cfc:	2005883a 	mov	r2,r4
   42d00:	00000306 	br	42d10 <strlen+0x1c>
   42d04:	10800044 	addi	r2,r2,1
   42d08:	10c000cc 	andi	r3,r2,3
   42d0c:	18000526 	beq	r3,zero,42d24 <strlen+0x30>
   42d10:	10c00007 	ldb	r3,0(r2)
   42d14:	183ffb1e 	bne	r3,zero,42d04 <strlen+0x10>
   42d18:	1105c83a 	sub	r2,r2,r4
   42d1c:	f800283a 	ret
   42d20:	2005883a 	mov	r2,r4
   42d24:	11400017 	ldw	r5,0(r2)
   42d28:	01ffbff4 	movhi	r7,65279
   42d2c:	39ffbfc4 	addi	r7,r7,-257
   42d30:	29c7883a 	add	r3,r5,r7
   42d34:	01a02074 	movhi	r6,32897
   42d38:	014a303a 	nor	r5,zero,r5
   42d3c:	1946703a 	and	r3,r3,r5
   42d40:	31a02004 	addi	r6,r6,-32640
   42d44:	1986703a 	and	r3,r3,r6
   42d48:	1800071e 	bne	r3,zero,42d68 <strlen+0x74>
   42d4c:	11400117 	ldw	r5,4(r2)
   42d50:	10800104 	addi	r2,r2,4
   42d54:	29c7883a 	add	r3,r5,r7
   42d58:	014a303a 	nor	r5,zero,r5
   42d5c:	1946703a 	and	r3,r3,r5
   42d60:	1986703a 	and	r3,r3,r6
   42d64:	183ff926 	beq	r3,zero,42d4c <strlen+0x58>
   42d68:	10c00007 	ldb	r3,0(r2)
   42d6c:	183fea26 	beq	r3,zero,42d18 <strlen+0x24>
   42d70:	10c00047 	ldb	r3,1(r2)
   42d74:	10800044 	addi	r2,r2,1
   42d78:	183fe726 	beq	r3,zero,42d18 <strlen+0x24>
   42d7c:	10c00047 	ldb	r3,1(r2)
   42d80:	10800044 	addi	r2,r2,1
   42d84:	183ffa1e 	bne	r3,zero,42d70 <strlen+0x7c>
   42d88:	003fe306 	br	42d18 <strlen+0x24>

00042d8c <___vfprintf_internal_r>:
   42d8c:	deffbf04 	addi	sp,sp,-260
   42d90:	dfc04015 	stw	ra,256(sp)
   42d94:	dd803d15 	stw	r22,244(sp)
   42d98:	dcc03a15 	stw	r19,232(sp)
   42d9c:	dc803915 	stw	r18,228(sp)
   42da0:	2027883a 	mov	r19,r4
   42da4:	2825883a 	mov	r18,r5
   42da8:	302d883a 	mov	r22,r6
   42dac:	d9c00615 	stw	r7,24(sp)
   42db0:	df003f15 	stw	fp,252(sp)
   42db4:	ddc03e15 	stw	r23,248(sp)
   42db8:	dd403c15 	stw	r21,240(sp)
   42dbc:	dd003b15 	stw	r20,236(sp)
   42dc0:	dc403815 	stw	r17,224(sp)
   42dc4:	dc003715 	stw	r16,220(sp)
   42dc8:	00470d40 	call	470d4 <_localeconv_r>
   42dcc:	10800017 	ldw	r2,0(r2)
   42dd0:	1009883a 	mov	r4,r2
   42dd4:	d8800d15 	stw	r2,52(sp)
   42dd8:	0042cf40 	call	42cf4 <strlen>
   42ddc:	d8800b15 	stw	r2,44(sp)
   42de0:	98000226 	beq	r19,zero,42dec <___vfprintf_internal_r+0x60>
   42de4:	98800e17 	ldw	r2,56(r19)
   42de8:	1001e026 	beq	r2,zero,4356c <___vfprintf_internal_r+0x7e0>
   42dec:	9080030b 	ldhu	r2,12(r18)
   42df0:	10c8000c 	andi	r3,r2,8192
   42df4:	1800061e 	bne	r3,zero,42e10 <___vfprintf_internal_r+0x84>
   42df8:	90c01917 	ldw	r3,100(r18)
   42dfc:	0137ffc4 	movi	r4,-8193
   42e00:	10880014 	ori	r2,r2,8192
   42e04:	1906703a 	and	r3,r3,r4
   42e08:	9080030d 	sth	r2,12(r18)
   42e0c:	90c01915 	stw	r3,100(r18)
   42e10:	10c0020c 	andi	r3,r2,8
   42e14:	1800fc26 	beq	r3,zero,43208 <___vfprintf_internal_r+0x47c>
   42e18:	90c00417 	ldw	r3,16(r18)
   42e1c:	1800fa26 	beq	r3,zero,43208 <___vfprintf_internal_r+0x47c>
   42e20:	1080068c 	andi	r2,r2,26
   42e24:	10800298 	cmpnei	r2,r2,10
   42e28:	1000ff26 	beq	r2,zero,43228 <___vfprintf_internal_r+0x49c>
   42e2c:	d8802704 	addi	r2,sp,156
   42e30:	b02f883a 	mov	r23,r22
   42e34:	d8801a15 	stw	r2,104(sp)
   42e38:	d8001c15 	stw	zero,112(sp)
   42e3c:	d8001b15 	stw	zero,108(sp)
   42e40:	d8000815 	stw	zero,32(sp)
   42e44:	d8000915 	stw	zero,36(sp)
   42e48:	d8000a15 	stw	zero,40(sp)
   42e4c:	d8000c15 	stw	zero,48(sp)
   42e50:	d8001015 	stw	zero,64(sp)
   42e54:	d8000515 	stw	zero,20(sp)
   42e58:	102d883a 	mov	r22,r2
   42e5c:	b8800007 	ldb	r2,0(r23)
   42e60:	1000d726 	beq	r2,zero,431c0 <___vfprintf_internal_r+0x434>
   42e64:	b821883a 	mov	r16,r23
   42e68:	00000306 	br	42e78 <___vfprintf_internal_r+0xec>
   42e6c:	80800047 	ldb	r2,1(r16)
   42e70:	84000044 	addi	r16,r16,1
   42e74:	10012226 	beq	r2,zero,43300 <___vfprintf_internal_r+0x574>
   42e78:	10800958 	cmpnei	r2,r2,37
   42e7c:	103ffb1e 	bne	r2,zero,42e6c <___vfprintf_internal_r+0xe0>
   42e80:	85e3c83a 	sub	r17,r16,r23
   42e84:	85c1201e 	bne	r16,r23,43308 <___vfprintf_internal_r+0x57c>
   42e88:	80800003 	ldbu	r2,0(r16)
   42e8c:	10803fcc 	andi	r2,r2,255
   42e90:	1080201c 	xori	r2,r2,128
   42e94:	10bfe004 	addi	r2,r2,-128
   42e98:	1000c926 	beq	r2,zero,431c0 <___vfprintf_internal_r+0x434>
   42e9c:	82c00047 	ldb	r11,1(r16)
   42ea0:	85c00044 	addi	r23,r16,1
   42ea4:	d8001345 	stb	zero,77(sp)
   42ea8:	0009883a 	mov	r4,zero
   42eac:	000b883a 	mov	r5,zero
   42eb0:	023fffc4 	movi	r8,-1
   42eb4:	0021883a 	mov	r16,zero
   42eb8:	0019883a 	mov	r12,zero
   42ebc:	bdc00044 	addi	r23,r23,1
   42ec0:	5839883a 	mov	fp,r11
   42ec4:	e0bff804 	addi	r2,fp,-32
   42ec8:	10c01668 	cmpgeui	r3,r2,89
   42ecc:	18006c1e 	bne	r3,zero,43080 <___vfprintf_internal_r+0x2f4>
   42ed0:	100490ba 	slli	r2,r2,2
   42ed4:	00c00134 	movhi	r3,4
   42ed8:	10c7883a 	add	r3,r2,r3
   42edc:	188bb917 	ldw	r2,12004(r3)
   42ee0:	1000683a 	jmp	r2
   42ee4:	00043834 	movhi	zero,4320
   42ee8:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42eec:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42ef0:	00043828 	cmpgeui	zero,zero,4320
   42ef4:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42ef8:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42efc:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f00:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f04:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f08:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f0c:	00043800 	call	4380 <__alt_mem_onchip_memory-0x3bc80>
   42f10:	000437f0 	cmpltui	zero,zero,4319
   42f14:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f18:	000437d8 	cmpnei	zero,zero,4319
   42f1c:	0004378c 	andi	zero,zero,4318
   42f20:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f24:	00043780 	call	4378 <__alt_mem_onchip_memory-0x3bc88>
   42f28:	00043048 	cmpgei	zero,zero,4289
   42f2c:	00043048 	cmpgei	zero,zero,4289
   42f30:	00043048 	cmpgei	zero,zero,4289
   42f34:	00043048 	cmpgei	zero,zero,4289
   42f38:	00043048 	cmpgei	zero,zero,4289
   42f3c:	00043048 	cmpgei	zero,zero,4289
   42f40:	00043048 	cmpgei	zero,zero,4289
   42f44:	00043048 	cmpgei	zero,zero,4289
   42f48:	00043048 	cmpgei	zero,zero,4289
   42f4c:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f50:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f54:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f58:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f5c:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f60:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f64:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f68:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f6c:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f70:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f74:	00043698 	cmpnei	zero,zero,4314
   42f78:	00043364 	muli	zero,zero,4301
   42f7c:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f80:	00043364 	muli	zero,zero,4301
   42f84:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f88:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f8c:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f90:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f94:	0004368c 	andi	zero,zero,4314
   42f98:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42f9c:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fa0:	00043298 	cmpnei	zero,zero,4298
   42fa4:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fa8:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fac:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fb0:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fb4:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fb8:	00043270 	cmpltui	zero,zero,4297
   42fbc:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fc0:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fc4:	00043644 	movi	zero,4313
   42fc8:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fcc:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fd0:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fd4:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fd8:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fdc:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fe0:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fe4:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fe8:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42fec:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   42ff0:	0004361c 	xori	zero,zero,4312
   42ff4:	00043578 	rdprs	zero,zero,4309
   42ff8:	00043364 	muli	zero,zero,4301
   42ffc:	00043364 	muli	zero,zero,4301
   43000:	00043364 	muli	zero,zero,4301
   43004:	00043610 	cmplti	zero,zero,4312
   43008:	00043578 	rdprs	zero,zero,4309
   4300c:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   43010:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   43014:	00043988 	cmpgei	zero,zero,4326
   43018:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   4301c:	0004394c 	andi	zero,zero,4325
   43020:	0004329c 	xori	zero,zero,4298
   43024:	0004390c 	andi	zero,zero,4324
   43028:	00043900 	call	4390 <__alt_mem_onchip_memory-0x3bc70>
   4302c:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   43030:	000438a8 	cmpgeui	zero,zero,4322
   43034:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   43038:	00043274 	movhi	zero,4297
   4303c:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   43040:	00043080 	call	4308 <__alt_mem_onchip_memory-0x3bcf8>
   43044:	00043860 	cmpeqi	zero,zero,4321
   43048:	0021883a 	mov	r16,zero
   4304c:	e0fff404 	addi	r3,fp,-48
   43050:	800490ba 	slli	r2,r16,2
   43054:	bf000007 	ldb	fp,0(r23)
   43058:	bdc00044 	addi	r23,r23,1
   4305c:	1421883a 	add	r16,r2,r16
   43060:	8421883a 	add	r16,r16,r16
   43064:	1c21883a 	add	r16,r3,r16
   43068:	e0fff404 	addi	r3,fp,-48
   4306c:	188002b0 	cmpltui	r2,r3,10
   43070:	103ff71e 	bne	r2,zero,43050 <___vfprintf_internal_r+0x2c4>
   43074:	e0bff804 	addi	r2,fp,-32
   43078:	10c01668 	cmpgeui	r3,r2,89
   4307c:	183f9426 	beq	r3,zero,42ed0 <___vfprintf_internal_r+0x144>
   43080:	21003fcc 	andi	r4,r4,255
   43084:	2006871e 	bne	r4,zero,44aa4 <___vfprintf_internal_r+0x1d18>
   43088:	e0004d26 	beq	fp,zero,431c0 <___vfprintf_internal_r+0x434>
   4308c:	df001d05 	stb	fp,116(sp)
   43090:	d8001345 	stb	zero,77(sp)
   43094:	05000044 	movi	r20,1
   43098:	05400044 	movi	r21,1
   4309c:	dc401d04 	addi	r17,sp,116
   430a0:	db000415 	stw	r12,16(sp)
   430a4:	0011883a 	mov	r8,zero
   430a8:	d8000715 	stw	zero,28(sp)
   430ac:	d8800417 	ldw	r2,16(sp)
   430b0:	1380008c 	andi	r14,r2,2
   430b4:	70000126 	beq	r14,zero,430bc <___vfprintf_internal_r+0x330>
   430b8:	a5000084 	addi	r20,r20,2
   430bc:	d8800417 	ldw	r2,16(sp)
   430c0:	d8c01c17 	ldw	r3,112(sp)
   430c4:	1340210c 	andi	r13,r2,132
   430c8:	6800021e 	bne	r13,zero,430d4 <___vfprintf_internal_r+0x348>
   430cc:	850fc83a 	sub	r7,r16,r20
   430d0:	01c34516 	blt	zero,r7,43de8 <___vfprintf_internal_r+0x105c>
   430d4:	d8801347 	ldb	r2,77(sp)
   430d8:	10000c26 	beq	r2,zero,4310c <___vfprintf_internal_r+0x380>
   430dc:	d8801b17 	ldw	r2,108(sp)
   430e0:	d9001344 	addi	r4,sp,77
   430e4:	18c00044 	addi	r3,r3,1
   430e8:	10800044 	addi	r2,r2,1
   430ec:	b1000015 	stw	r4,0(r22)
   430f0:	01000044 	movi	r4,1
   430f4:	d8801b15 	stw	r2,108(sp)
   430f8:	b1000115 	stw	r4,4(r22)
   430fc:	d8c01c15 	stw	r3,112(sp)
   43100:	10800208 	cmpgei	r2,r2,8
   43104:	1003791e 	bne	r2,zero,43eec <___vfprintf_internal_r+0x1160>
   43108:	b5800204 	addi	r22,r22,8
   4310c:	70000c26 	beq	r14,zero,43140 <___vfprintf_internal_r+0x3b4>
   43110:	d8801b17 	ldw	r2,108(sp)
   43114:	d9001384 	addi	r4,sp,78
   43118:	18c00084 	addi	r3,r3,2
   4311c:	10800044 	addi	r2,r2,1
   43120:	b1000015 	stw	r4,0(r22)
   43124:	01000084 	movi	r4,2
   43128:	d8801b15 	stw	r2,108(sp)
   4312c:	b1000115 	stw	r4,4(r22)
   43130:	d8c01c15 	stw	r3,112(sp)
   43134:	10800208 	cmpgei	r2,r2,8
   43138:	10037a1e 	bne	r2,zero,43f24 <___vfprintf_internal_r+0x1198>
   4313c:	b5800204 	addi	r22,r22,8
   43140:	6b402018 	cmpnei	r13,r13,128
   43144:	68025b26 	beq	r13,zero,43ab4 <___vfprintf_internal_r+0xd28>
   43148:	4551c83a 	sub	r8,r8,r21
   4314c:	02029316 	blt	zero,r8,43b9c <___vfprintf_internal_r+0xe10>
   43150:	d8800417 	ldw	r2,16(sp)
   43154:	1080400c 	andi	r2,r2,256
   43158:	1002101e 	bne	r2,zero,4399c <___vfprintf_internal_r+0xc10>
   4315c:	d8801b17 	ldw	r2,108(sp)
   43160:	1d47883a 	add	r3,r3,r21
   43164:	b4400015 	stw	r17,0(r22)
   43168:	10800044 	addi	r2,r2,1
   4316c:	b5400115 	stw	r21,4(r22)
   43170:	d8801b15 	stw	r2,108(sp)
   43174:	d8c01c15 	stw	r3,112(sp)
   43178:	10800208 	cmpgei	r2,r2,8
   4317c:	1003101e 	bne	r2,zero,43dc0 <___vfprintf_internal_r+0x1034>
   43180:	b5800204 	addi	r22,r22,8
   43184:	d8800417 	ldw	r2,16(sp)
   43188:	1440010c 	andi	r17,r2,4
   4318c:	88000226 	beq	r17,zero,43198 <___vfprintf_internal_r+0x40c>
   43190:	8523c83a 	sub	r17,r16,r20
   43194:	0440c616 	blt	zero,r17,434b0 <___vfprintf_internal_r+0x724>
   43198:	8500010e 	bge	r16,r20,431a0 <___vfprintf_internal_r+0x414>
   4319c:	a021883a 	mov	r16,r20
   431a0:	d8800517 	ldw	r2,20(sp)
   431a4:	1405883a 	add	r2,r2,r16
   431a8:	d8800515 	stw	r2,20(sp)
   431ac:	1802c21e 	bne	r3,zero,43cb8 <___vfprintf_internal_r+0xf2c>
   431b0:	b8800007 	ldb	r2,0(r23)
   431b4:	d8001b15 	stw	zero,108(sp)
   431b8:	dd802704 	addi	r22,sp,156
   431bc:	103f291e 	bne	r2,zero,42e64 <___vfprintf_internal_r+0xd8>
   431c0:	d8801c17 	ldw	r2,112(sp)
   431c4:	1006391e 	bne	r2,zero,44aac <___vfprintf_internal_r+0x1d20>
   431c8:	9080030b 	ldhu	r2,12(r18)
   431cc:	1080100c 	andi	r2,r2,64
   431d0:	1006cf1e 	bne	r2,zero,44d10 <___vfprintf_internal_r+0x1f84>
   431d4:	d8800517 	ldw	r2,20(sp)
   431d8:	dfc04017 	ldw	ra,256(sp)
   431dc:	df003f17 	ldw	fp,252(sp)
   431e0:	ddc03e17 	ldw	r23,248(sp)
   431e4:	dd803d17 	ldw	r22,244(sp)
   431e8:	dd403c17 	ldw	r21,240(sp)
   431ec:	dd003b17 	ldw	r20,236(sp)
   431f0:	dcc03a17 	ldw	r19,232(sp)
   431f4:	dc803917 	ldw	r18,228(sp)
   431f8:	dc403817 	ldw	r17,224(sp)
   431fc:	dc003717 	ldw	r16,220(sp)
   43200:	dec04104 	addi	sp,sp,260
   43204:	f800283a 	ret
   43208:	900b883a 	mov	r5,r18
   4320c:	9809883a 	mov	r4,r19
   43210:	0044fd00 	call	44fd0 <__swsetup_r>
   43214:	1006be1e 	bne	r2,zero,44d10 <___vfprintf_internal_r+0x1f84>
   43218:	9080030b 	ldhu	r2,12(r18)
   4321c:	1080068c 	andi	r2,r2,26
   43220:	10800298 	cmpnei	r2,r2,10
   43224:	103f011e 	bne	r2,zero,42e2c <___vfprintf_internal_r+0xa0>
   43228:	9080038f 	ldh	r2,14(r18)
   4322c:	103eff16 	blt	r2,zero,42e2c <___vfprintf_internal_r+0xa0>
   43230:	d9c00617 	ldw	r7,24(sp)
   43234:	b00d883a 	mov	r6,r22
   43238:	900b883a 	mov	r5,r18
   4323c:	9809883a 	mov	r4,r19
   43240:	dfc04017 	ldw	ra,256(sp)
   43244:	df003f17 	ldw	fp,252(sp)
   43248:	ddc03e17 	ldw	r23,248(sp)
   4324c:	dd803d17 	ldw	r22,244(sp)
   43250:	dd403c17 	ldw	r21,240(sp)
   43254:	dd003b17 	ldw	r20,236(sp)
   43258:	dcc03a17 	ldw	r19,232(sp)
   4325c:	dc803917 	ldw	r18,228(sp)
   43260:	dc403817 	ldw	r17,224(sp)
   43264:	dc003717 	ldw	r16,220(sp)
   43268:	dec04104 	addi	sp,sp,260
   4326c:	0044eac1 	jmpi	44eac <__sbprintf>
   43270:	63000414 	ori	r12,r12,16
   43274:	6080080c 	andi	r2,r12,32
   43278:	10008126 	beq	r2,zero,43480 <___vfprintf_internal_r+0x6f4>
   4327c:	d8c00617 	ldw	r3,24(sp)
   43280:	00800044 	movi	r2,1
   43284:	1d000017 	ldw	r20,0(r3)
   43288:	1d400117 	ldw	r21,4(r3)
   4328c:	18c00204 	addi	r3,r3,8
   43290:	d8c00615 	stw	r3,24(sp)
   43294:	00000906 	br	432bc <___vfprintf_internal_r+0x530>
   43298:	63000414 	ori	r12,r12,16
   4329c:	6080080c 	andi	r2,r12,32
   432a0:	10006b26 	beq	r2,zero,43450 <___vfprintf_internal_r+0x6c4>
   432a4:	d8c00617 	ldw	r3,24(sp)
   432a8:	0005883a 	mov	r2,zero
   432ac:	1d000017 	ldw	r20,0(r3)
   432b0:	1d400117 	ldw	r21,4(r3)
   432b4:	18c00204 	addi	r3,r3,8
   432b8:	d8c00615 	stw	r3,24(sp)
   432bc:	d8001345 	stb	zero,77(sp)
   432c0:	40ffffe0 	cmpeqi	r3,r8,-1
   432c4:	001b883a 	mov	r13,zero
   432c8:	18010e1e 	bne	r3,zero,43704 <___vfprintf_internal_r+0x978>
   432cc:	047fdfc4 	movi	r17,-129
   432d0:	6448703a 	and	r4,r12,r17
   432d4:	a546b03a 	or	r3,r20,r21
   432d8:	d9000415 	stw	r4,16(sp)
   432dc:	1802c01e 	bne	r3,zero,43de0 <___vfprintf_internal_r+0x1054>
   432e0:	40025f1e 	bne	r8,zero,43c60 <___vfprintf_internal_r+0xed4>
   432e4:	1003751e 	bne	r2,zero,440bc <___vfprintf_internal_r+0x1330>
   432e8:	6540004c 	andi	r21,r12,1
   432ec:	a803b026 	beq	r21,zero,441b0 <___vfprintf_internal_r+0x1424>
   432f0:	00800c04 	movi	r2,48
   432f4:	d88026c5 	stb	r2,155(sp)
   432f8:	dc4026c4 	addi	r17,sp,155
   432fc:	0000ba06 	br	435e8 <___vfprintf_internal_r+0x85c>
   43300:	85e3c83a 	sub	r17,r16,r23
   43304:	85ffae26 	beq	r16,r23,431c0 <___vfprintf_internal_r+0x434>
   43308:	d8c01c17 	ldw	r3,112(sp)
   4330c:	d8801b17 	ldw	r2,108(sp)
   43310:	b5c00015 	stw	r23,0(r22)
   43314:	1c47883a 	add	r3,r3,r17
   43318:	10800044 	addi	r2,r2,1
   4331c:	d8801b15 	stw	r2,108(sp)
   43320:	b4400115 	stw	r17,4(r22)
   43324:	d8c01c15 	stw	r3,112(sp)
   43328:	10800208 	cmpgei	r2,r2,8
   4332c:	1000061e 	bne	r2,zero,43348 <___vfprintf_internal_r+0x5bc>
   43330:	b5800204 	addi	r22,r22,8
   43334:	d8c00517 	ldw	r3,20(sp)
   43338:	80800003 	ldbu	r2,0(r16)
   4333c:	1c47883a 	add	r3,r3,r17
   43340:	d8c00515 	stw	r3,20(sp)
   43344:	003ed106 	br	42e8c <___vfprintf_internal_r+0x100>
   43348:	d9801a04 	addi	r6,sp,104
   4334c:	900b883a 	mov	r5,r18
   43350:	9809883a 	mov	r4,r19
   43354:	0048cf80 	call	48cf8 <__sprint_r>
   43358:	103f9b1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   4335c:	dd802704 	addi	r22,sp,156
   43360:	003ff406 	br	43334 <___vfprintf_internal_r+0x5a8>
   43364:	21003fcc 	andi	r4,r4,255
   43368:	2006671e 	bne	r4,zero,44d08 <___vfprintf_internal_r+0x1f7c>
   4336c:	d8c00617 	ldw	r3,24(sp)
   43370:	6080020c 	andi	r2,r12,8
   43374:	19000204 	addi	r4,r3,8
   43378:	d9000e15 	stw	r4,56(sp)
   4337c:	1003a71e 	bne	r2,zero,4421c <___vfprintf_internal_r+0x1490>
   43380:	d8800617 	ldw	r2,24(sp)
   43384:	10c00017 	ldw	r3,0(r2)
   43388:	10800117 	ldw	r2,4(r2)
   4338c:	d8c00915 	stw	r3,36(sp)
   43390:	d8800a15 	stw	r2,40(sp)
   43394:	dd400a17 	ldw	r21,40(sp)
   43398:	dd000917 	ldw	r20,36(sp)
   4339c:	00a00034 	movhi	r2,32768
   433a0:	10bfffc4 	addi	r2,r2,-1
   433a4:	a8a2703a 	and	r17,r21,r2
   433a8:	01dffc34 	movhi	r7,32752
   433ac:	01bfffc4 	movi	r6,-1
   433b0:	39ffffc4 	addi	r7,r7,-1
   433b4:	a009883a 	mov	r4,r20
   433b8:	880b883a 	mov	r5,r17
   433bc:	da000615 	stw	r8,24(sp)
   433c0:	db000415 	stw	r12,16(sp)
   433c4:	004e14c0 	call	4e14c <__unorddf2>
   433c8:	db000417 	ldw	r12,16(sp)
   433cc:	da000617 	ldw	r8,24(sp)
   433d0:	1004641e 	bne	r2,zero,44564 <___vfprintf_internal_r+0x17d8>
   433d4:	01dffc34 	movhi	r7,32752
   433d8:	01bfffc4 	movi	r6,-1
   433dc:	39ffffc4 	addi	r7,r7,-1
   433e0:	a009883a 	mov	r4,r20
   433e4:	880b883a 	mov	r5,r17
   433e8:	004d0040 	call	4d004 <__ledf2>
   433ec:	db000417 	ldw	r12,16(sp)
   433f0:	da000617 	ldw	r8,24(sp)
   433f4:	00845b0e 	bge	zero,r2,44564 <___vfprintf_internal_r+0x17d8>
   433f8:	000d883a 	mov	r6,zero
   433fc:	000f883a 	mov	r7,zero
   43400:	a009883a 	mov	r4,r20
   43404:	a80b883a 	mov	r5,r21
   43408:	004d0040 	call	4d004 <__ledf2>
   4340c:	db000417 	ldw	r12,16(sp)
   43410:	10059116 	blt	r2,zero,44a58 <___vfprintf_internal_r+0x1ccc>
   43414:	db401343 	ldbu	r13,77(sp)
   43418:	e0801210 	cmplti	r2,fp,72
   4341c:	1005391e 	bne	r2,zero,44904 <___vfprintf_internal_r+0x1b78>
   43420:	04400174 	movhi	r17,5
   43424:	8c43d704 	addi	r17,r17,3932
   43428:	00bfdfc4 	movi	r2,-129
   4342c:	6084703a 	and	r2,r12,r2
   43430:	d8800415 	stw	r2,16(sp)
   43434:	d8800e17 	ldw	r2,56(sp)
   43438:	050000c4 	movi	r20,3
   4343c:	054000c4 	movi	r21,3
   43440:	d8800615 	stw	r2,24(sp)
   43444:	0011883a 	mov	r8,zero
   43448:	d8000715 	stw	zero,28(sp)
   4344c:	00006a06 	br	435f8 <___vfprintf_internal_r+0x86c>
   43450:	d9000617 	ldw	r4,24(sp)
   43454:	6080040c 	andi	r2,r12,16
   43458:	20c00104 	addi	r3,r4,4
   4345c:	10036a1e 	bne	r2,zero,44208 <___vfprintf_internal_r+0x147c>
   43460:	6080100c 	andi	r2,r12,64
   43464:	10052126 	beq	r2,zero,448ec <___vfprintf_internal_r+0x1b60>
   43468:	d8800617 	ldw	r2,24(sp)
   4346c:	002b883a 	mov	r21,zero
   43470:	d8c00615 	stw	r3,24(sp)
   43474:	1500000b 	ldhu	r20,0(r2)
   43478:	0005883a 	mov	r2,zero
   4347c:	003f8f06 	br	432bc <___vfprintf_internal_r+0x530>
   43480:	d9000617 	ldw	r4,24(sp)
   43484:	6080040c 	andi	r2,r12,16
   43488:	20c00104 	addi	r3,r4,4
   4348c:	1003501e 	bne	r2,zero,441d0 <___vfprintf_internal_r+0x1444>
   43490:	6080100c 	andi	r2,r12,64
   43494:	10055926 	beq	r2,zero,449fc <___vfprintf_internal_r+0x1c70>
   43498:	d8800617 	ldw	r2,24(sp)
   4349c:	002b883a 	mov	r21,zero
   434a0:	d8c00615 	stw	r3,24(sp)
   434a4:	1500000b 	ldhu	r20,0(r2)
   434a8:	00800044 	movi	r2,1
   434ac:	003f8306 	br	432bc <___vfprintf_internal_r+0x530>
   434b0:	03000174 	movhi	r12,5
   434b4:	89000450 	cmplti	r4,r17,17
   434b8:	d8801b17 	ldw	r2,108(sp)
   434bc:	6303eb04 	addi	r12,r12,4012
   434c0:	20001b1e 	bne	r4,zero,43530 <___vfprintf_internal_r+0x7a4>
   434c4:	05400404 	movi	r21,16
   434c8:	6039883a 	mov	fp,r12
   434cc:	00000406 	br	434e0 <___vfprintf_internal_r+0x754>
   434d0:	8c7ffc04 	addi	r17,r17,-16
   434d4:	89000448 	cmpgei	r4,r17,17
   434d8:	b5800204 	addi	r22,r22,8
   434dc:	20001326 	beq	r4,zero,4352c <___vfprintf_internal_r+0x7a0>
   434e0:	10800044 	addi	r2,r2,1
   434e4:	18c00404 	addi	r3,r3,16
   434e8:	b7000015 	stw	fp,0(r22)
   434ec:	b5400115 	stw	r21,4(r22)
   434f0:	d8c01c15 	stw	r3,112(sp)
   434f4:	d8801b15 	stw	r2,108(sp)
   434f8:	11000208 	cmpgei	r4,r2,8
   434fc:	203ff426 	beq	r4,zero,434d0 <___vfprintf_internal_r+0x744>
   43500:	d9801a04 	addi	r6,sp,104
   43504:	900b883a 	mov	r5,r18
   43508:	9809883a 	mov	r4,r19
   4350c:	0048cf80 	call	48cf8 <__sprint_r>
   43510:	103f2d1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   43514:	8c7ffc04 	addi	r17,r17,-16
   43518:	89000448 	cmpgei	r4,r17,17
   4351c:	d8c01c17 	ldw	r3,112(sp)
   43520:	d8801b17 	ldw	r2,108(sp)
   43524:	dd802704 	addi	r22,sp,156
   43528:	203fed1e 	bne	r4,zero,434e0 <___vfprintf_internal_r+0x754>
   4352c:	e019883a 	mov	r12,fp
   43530:	10800044 	addi	r2,r2,1
   43534:	1c47883a 	add	r3,r3,r17
   43538:	d8801b15 	stw	r2,108(sp)
   4353c:	b3000015 	stw	r12,0(r22)
   43540:	b4400115 	stw	r17,4(r22)
   43544:	d8c01c15 	stw	r3,112(sp)
   43548:	10800210 	cmplti	r2,r2,8
   4354c:	103f121e 	bne	r2,zero,43198 <___vfprintf_internal_r+0x40c>
   43550:	d9801a04 	addi	r6,sp,104
   43554:	900b883a 	mov	r5,r18
   43558:	9809883a 	mov	r4,r19
   4355c:	0048cf80 	call	48cf8 <__sprint_r>
   43560:	103f191e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   43564:	d8c01c17 	ldw	r3,112(sp)
   43568:	003f0b06 	br	43198 <___vfprintf_internal_r+0x40c>
   4356c:	9809883a 	mov	r4,r19
   43570:	0040cc40 	call	40cc4 <__sinit>
   43574:	003e1d06 	br	42dec <___vfprintf_internal_r+0x60>
   43578:	21003fcc 	andi	r4,r4,255
   4357c:	2005de1e 	bne	r4,zero,44cf8 <___vfprintf_internal_r+0x1f6c>
   43580:	6080080c 	andi	r2,r12,32
   43584:	10004926 	beq	r2,zero,436ac <___vfprintf_internal_r+0x920>
   43588:	d8c00617 	ldw	r3,24(sp)
   4358c:	18800117 	ldw	r2,4(r3)
   43590:	1d000017 	ldw	r20,0(r3)
   43594:	18c00204 	addi	r3,r3,8
   43598:	d8c00615 	stw	r3,24(sp)
   4359c:	102b883a 	mov	r21,r2
   435a0:	10004e16 	blt	r2,zero,436dc <___vfprintf_internal_r+0x950>
   435a4:	40bfffd8 	cmpnei	r2,r8,-1
   435a8:	db401343 	ldbu	r13,77(sp)
   435ac:	10000626 	beq	r2,zero,435c8 <___vfprintf_internal_r+0x83c>
   435b0:	047fdfc4 	movi	r17,-129
   435b4:	6446703a 	and	r3,r12,r17
   435b8:	a544b03a 	or	r2,r20,r21
   435bc:	d8c00415 	stw	r3,16(sp)
   435c0:	1002bd26 	beq	r2,zero,440b8 <___vfprintf_internal_r+0x132c>
   435c4:	db000417 	ldw	r12,16(sp)
   435c8:	a803701e 	bne	r21,zero,4438c <___vfprintf_internal_r+0x1600>
   435cc:	a08002a8 	cmpgeui	r2,r20,10
   435d0:	10036e1e 	bne	r2,zero,4438c <___vfprintf_internal_r+0x1600>
   435d4:	a5000c04 	addi	r20,r20,48
   435d8:	dd0026c5 	stb	r20,155(sp)
   435dc:	db000415 	stw	r12,16(sp)
   435e0:	05400044 	movi	r21,1
   435e4:	dc4026c4 	addi	r17,sp,155
   435e8:	4029883a 	mov	r20,r8
   435ec:	4540010e 	bge	r8,r21,435f4 <___vfprintf_internal_r+0x868>
   435f0:	a829883a 	mov	r20,r21
   435f4:	d8000715 	stw	zero,28(sp)
   435f8:	6b403fcc 	andi	r13,r13,255
   435fc:	6b40201c 	xori	r13,r13,128
   43600:	6b7fe004 	addi	r13,r13,-128
   43604:	683ea926 	beq	r13,zero,430ac <___vfprintf_internal_r+0x320>
   43608:	a5000044 	addi	r20,r20,1
   4360c:	003ea706 	br	430ac <___vfprintf_internal_r+0x320>
   43610:	bac00007 	ldb	r11,0(r23)
   43614:	63001014 	ori	r12,r12,64
   43618:	003e2806 	br	42ebc <___vfprintf_internal_r+0x130>
   4361c:	d8c00617 	ldw	r3,24(sp)
   43620:	d8001345 	stb	zero,77(sp)
   43624:	05000044 	movi	r20,1
   43628:	18800017 	ldw	r2,0(r3)
   4362c:	18c00104 	addi	r3,r3,4
   43630:	d8c00615 	stw	r3,24(sp)
   43634:	d8801d05 	stb	r2,116(sp)
   43638:	05400044 	movi	r21,1
   4363c:	dc401d04 	addi	r17,sp,116
   43640:	003e9706 	br	430a0 <___vfprintf_internal_r+0x314>
   43644:	21003fcc 	andi	r4,r4,255
   43648:	2005a71e 	bne	r4,zero,44ce8 <___vfprintf_internal_r+0x1f5c>
   4364c:	00800174 	movhi	r2,5
   43650:	1083df04 	addi	r2,r2,3964
   43654:	d8800c15 	stw	r2,48(sp)
   43658:	6080080c 	andi	r2,r12,32
   4365c:	10008726 	beq	r2,zero,4387c <___vfprintf_internal_r+0xaf0>
   43660:	d8800617 	ldw	r2,24(sp)
   43664:	15000017 	ldw	r20,0(r2)
   43668:	15400117 	ldw	r21,4(r2)
   4366c:	10800204 	addi	r2,r2,8
   43670:	d8800615 	stw	r2,24(sp)
   43674:	6080004c 	andi	r2,r12,1
   43678:	10000226 	beq	r2,zero,43684 <___vfprintf_internal_r+0x8f8>
   4367c:	a544b03a 	or	r2,r20,r21
   43680:	1002cd1e 	bne	r2,zero,441b8 <___vfprintf_internal_r+0x142c>
   43684:	00800084 	movi	r2,2
   43688:	003f0c06 	br	432bc <___vfprintf_internal_r+0x530>
   4368c:	bac00007 	ldb	r11,0(r23)
   43690:	63000214 	ori	r12,r12,8
   43694:	003e0906 	br	42ebc <___vfprintf_internal_r+0x130>
   43698:	21003fcc 	andi	r4,r4,255
   4369c:	2005981e 	bne	r4,zero,44d00 <___vfprintf_internal_r+0x1f74>
   436a0:	63000414 	ori	r12,r12,16
   436a4:	6080080c 	andi	r2,r12,32
   436a8:	103fb71e 	bne	r2,zero,43588 <___vfprintf_internal_r+0x7fc>
   436ac:	d9000617 	ldw	r4,24(sp)
   436b0:	6080040c 	andi	r2,r12,16
   436b4:	20c00104 	addi	r3,r4,4
   436b8:	1002dd1e 	bne	r2,zero,44230 <___vfprintf_internal_r+0x14a4>
   436bc:	6080100c 	andi	r2,r12,64
   436c0:	10048426 	beq	r2,zero,448d4 <___vfprintf_internal_r+0x1b48>
   436c4:	d8800617 	ldw	r2,24(sp)
   436c8:	d8c00615 	stw	r3,24(sp)
   436cc:	1500000f 	ldh	r20,0(r2)
   436d0:	a02bd7fa 	srai	r21,r20,31
   436d4:	a805883a 	mov	r2,r21
   436d8:	103fb20e 	bge	r2,zero,435a4 <___vfprintf_internal_r+0x818>
   436dc:	a004c03a 	cmpne	r2,r20,zero
   436e0:	056bc83a 	sub	r21,zero,r21
   436e4:	a8abc83a 	sub	r21,r21,r2
   436e8:	00800b44 	movi	r2,45
   436ec:	d8801345 	stb	r2,77(sp)
   436f0:	40ffffe0 	cmpeqi	r3,r8,-1
   436f4:	0529c83a 	sub	r20,zero,r20
   436f8:	03400b44 	movi	r13,45
   436fc:	00800044 	movi	r2,1
   43700:	183ef226 	beq	r3,zero,432cc <___vfprintf_internal_r+0x540>
   43704:	10c00060 	cmpeqi	r3,r2,1
   43708:	183faf1e 	bne	r3,zero,435c8 <___vfprintf_internal_r+0x83c>
   4370c:	108000a0 	cmpeqi	r2,r2,2
   43710:	1001581e 	bne	r2,zero,43c74 <___vfprintf_internal_r+0xee8>
   43714:	dc402704 	addi	r17,sp,156
   43718:	a006d0fa 	srli	r3,r20,3
   4371c:	a808977a 	slli	r4,r21,29
   43720:	a82ad0fa 	srli	r21,r21,3
   43724:	a50001cc 	andi	r20,r20,7
   43728:	a0800c04 	addi	r2,r20,48
   4372c:	20e8b03a 	or	r20,r4,r3
   43730:	88bfffc5 	stb	r2,-1(r17)
   43734:	a546b03a 	or	r3,r20,r21
   43738:	880b883a 	mov	r5,r17
   4373c:	8c7fffc4 	addi	r17,r17,-1
   43740:	183ff51e 	bne	r3,zero,43718 <___vfprintf_internal_r+0x98c>
   43744:	60c0004c 	andi	r3,r12,1
   43748:	18015726 	beq	r3,zero,43ca8 <___vfprintf_internal_r+0xf1c>
   4374c:	10803fcc 	andi	r2,r2,255
   43750:	1080201c 	xori	r2,r2,128
   43754:	10bfe004 	addi	r2,r2,-128
   43758:	10800c18 	cmpnei	r2,r2,48
   4375c:	10015226 	beq	r2,zero,43ca8 <___vfprintf_internal_r+0xf1c>
   43760:	00800c04 	movi	r2,48
   43764:	297fff84 	addi	r5,r5,-2
   43768:	88bfffc5 	stb	r2,-1(r17)
   4376c:	d8802704 	addi	r2,sp,156
   43770:	116bc83a 	sub	r21,r2,r5
   43774:	db000415 	stw	r12,16(sp)
   43778:	2823883a 	mov	r17,r5
   4377c:	003f9a06 	br	435e8 <___vfprintf_internal_r+0x85c>
   43780:	bac00007 	ldb	r11,0(r23)
   43784:	63002014 	ori	r12,r12,128
   43788:	003dcc06 	br	42ebc <___vfprintf_internal_r+0x130>
   4378c:	bf000007 	ldb	fp,0(r23)
   43790:	b8800044 	addi	r2,r23,1
   43794:	e0c00aa0 	cmpeqi	r3,fp,42
   43798:	1805b11e 	bne	r3,zero,44e60 <___vfprintf_internal_r+0x20d4>
   4379c:	e0fff404 	addi	r3,fp,-48
   437a0:	198002b0 	cmpltui	r6,r3,10
   437a4:	102f883a 	mov	r23,r2
   437a8:	0011883a 	mov	r8,zero
   437ac:	303dc526 	beq	r6,zero,42ec4 <___vfprintf_internal_r+0x138>
   437b0:	400490ba 	slli	r2,r8,2
   437b4:	bf000007 	ldb	fp,0(r23)
   437b8:	bdc00044 	addi	r23,r23,1
   437bc:	1211883a 	add	r8,r2,r8
   437c0:	4211883a 	add	r8,r8,r8
   437c4:	40d1883a 	add	r8,r8,r3
   437c8:	e0fff404 	addi	r3,fp,-48
   437cc:	188002b0 	cmpltui	r2,r3,10
   437d0:	103ff71e 	bne	r2,zero,437b0 <___vfprintf_internal_r+0xa24>
   437d4:	003dbb06 	br	42ec4 <___vfprintf_internal_r+0x138>
   437d8:	bf000003 	ldbu	fp,0(r23)
   437dc:	e2c03fcc 	andi	r11,fp,255
   437e0:	5ac0201c 	xori	r11,r11,128
   437e4:	63000114 	ori	r12,r12,4
   437e8:	5affe004 	addi	r11,r11,-128
   437ec:	003db306 	br	42ebc <___vfprintf_internal_r+0x130>
   437f0:	bac00007 	ldb	r11,0(r23)
   437f4:	01000044 	movi	r4,1
   437f8:	01400ac4 	movi	r5,43
   437fc:	003daf06 	br	42ebc <___vfprintf_internal_r+0x130>
   43800:	d8800617 	ldw	r2,24(sp)
   43804:	bf000003 	ldbu	fp,0(r23)
   43808:	14000017 	ldw	r16,0(r2)
   4380c:	10800104 	addi	r2,r2,4
   43810:	80028c16 	blt	r16,zero,44244 <___vfprintf_internal_r+0x14b8>
   43814:	d8800615 	stw	r2,24(sp)
   43818:	e2c03fcc 	andi	r11,fp,255
   4381c:	5ac0201c 	xori	r11,r11,128
   43820:	5affe004 	addi	r11,r11,-128
   43824:	003da506 	br	42ebc <___vfprintf_internal_r+0x130>
   43828:	bac00007 	ldb	r11,0(r23)
   4382c:	63000054 	ori	r12,r12,1
   43830:	003da206 	br	42ebc <___vfprintf_internal_r+0x130>
   43834:	28803fcc 	andi	r2,r5,255
   43838:	1080201c 	xori	r2,r2,128
   4383c:	10bfe004 	addi	r2,r2,-128
   43840:	bf000003 	ldbu	fp,0(r23)
   43844:	103ff41e 	bne	r2,zero,43818 <___vfprintf_internal_r+0xa8c>
   43848:	e2c03fcc 	andi	r11,fp,255
   4384c:	5ac0201c 	xori	r11,r11,128
   43850:	01000044 	movi	r4,1
   43854:	01400804 	movi	r5,32
   43858:	5affe004 	addi	r11,r11,-128
   4385c:	003d9706 	br	42ebc <___vfprintf_internal_r+0x130>
   43860:	21003fcc 	andi	r4,r4,255
   43864:	20051e1e 	bne	r4,zero,44ce0 <___vfprintf_internal_r+0x1f54>
   43868:	00800174 	movhi	r2,5
   4386c:	1083da04 	addi	r2,r2,3944
   43870:	d8800c15 	stw	r2,48(sp)
   43874:	6080080c 	andi	r2,r12,32
   43878:	103f791e 	bne	r2,zero,43660 <___vfprintf_internal_r+0x8d4>
   4387c:	d9000617 	ldw	r4,24(sp)
   43880:	6080040c 	andi	r2,r12,16
   43884:	20c00104 	addi	r3,r4,4
   43888:	10025b1e 	bne	r2,zero,441f8 <___vfprintf_internal_r+0x146c>
   4388c:	6080100c 	andi	r2,r12,64
   43890:	10046026 	beq	r2,zero,44a14 <___vfprintf_internal_r+0x1c88>
   43894:	d8800617 	ldw	r2,24(sp)
   43898:	002b883a 	mov	r21,zero
   4389c:	d8c00615 	stw	r3,24(sp)
   438a0:	1500000b 	ldhu	r20,0(r2)
   438a4:	003f7306 	br	43674 <___vfprintf_internal_r+0x8e8>
   438a8:	d8800617 	ldw	r2,24(sp)
   438ac:	d8001345 	stb	zero,77(sp)
   438b0:	14400017 	ldw	r17,0(r2)
   438b4:	10c00104 	addi	r3,r2,4
   438b8:	88028e26 	beq	r17,zero,442f4 <___vfprintf_internal_r+0x1568>
   438bc:	40bfffe0 	cmpeqi	r2,r8,-1
   438c0:	1003c01e 	bne	r2,zero,447c4 <___vfprintf_internal_r+0x1a38>
   438c4:	400d883a 	mov	r6,r8
   438c8:	000b883a 	mov	r5,zero
   438cc:	8809883a 	mov	r4,r17
   438d0:	d8c00715 	stw	r3,28(sp)
   438d4:	db000615 	stw	r12,24(sp)
   438d8:	da000415 	stw	r8,16(sp)
   438dc:	00471500 	call	47150 <memchr>
   438e0:	da000417 	ldw	r8,16(sp)
   438e4:	db000617 	ldw	r12,24(sp)
   438e8:	d8c00717 	ldw	r3,28(sp)
   438ec:	1004ec26 	beq	r2,zero,44ca0 <___vfprintf_internal_r+0x1f14>
   438f0:	146bc83a 	sub	r21,r2,r17
   438f4:	a829883a 	mov	r20,r21
   438f8:	d8c00615 	stw	r3,24(sp)
   438fc:	003de806 	br	430a0 <___vfprintf_internal_r+0x314>
   43900:	bac00007 	ldb	r11,0(r23)
   43904:	63000814 	ori	r12,r12,32
   43908:	003d6c06 	br	42ebc <___vfprintf_internal_r+0x130>
   4390c:	d8c00617 	ldw	r3,24(sp)
   43910:	00800c04 	movi	r2,48
   43914:	d8801385 	stb	r2,78(sp)
   43918:	00801e04 	movi	r2,120
   4391c:	01000174 	movhi	r4,5
   43920:	d88013c5 	stb	r2,79(sp)
   43924:	18800104 	addi	r2,r3,4
   43928:	d8800615 	stw	r2,24(sp)
   4392c:	2083da04 	addi	r2,r4,3944
   43930:	d8800c15 	stw	r2,48(sp)
   43934:	1d000017 	ldw	r20,0(r3)
   43938:	002b883a 	mov	r21,zero
   4393c:	63000094 	ori	r12,r12,2
   43940:	00800084 	movi	r2,2
   43944:	07001e04 	movi	fp,120
   43948:	003e5c06 	br	432bc <___vfprintf_internal_r+0x530>
   4394c:	21003fcc 	andi	r4,r4,255
   43950:	2004e71e 	bne	r4,zero,44cf0 <___vfprintf_internal_r+0x1f64>
   43954:	d9000617 	ldw	r4,24(sp)
   43958:	6080080c 	andi	r2,r12,32
   4395c:	20c00017 	ldw	r3,0(r4)
   43960:	21000104 	addi	r4,r4,4
   43964:	d9000615 	stw	r4,24(sp)
   43968:	10021e1e 	bne	r2,zero,441e4 <___vfprintf_internal_r+0x1458>
   4396c:	6080040c 	andi	r2,r12,16
   43970:	1002ae1e 	bne	r2,zero,4442c <___vfprintf_internal_r+0x16a0>
   43974:	6300100c 	andi	r12,r12,64
   43978:	6002ac26 	beq	r12,zero,4442c <___vfprintf_internal_r+0x16a0>
   4397c:	d8800517 	ldw	r2,20(sp)
   43980:	1880000d 	sth	r2,0(r3)
   43984:	003d3506 	br	42e5c <___vfprintf_internal_r+0xd0>
   43988:	bac00007 	ldb	r11,0(r23)
   4398c:	58801b18 	cmpnei	r2,r11,108
   43990:	10024926 	beq	r2,zero,442b8 <___vfprintf_internal_r+0x152c>
   43994:	63000414 	ori	r12,r12,16
   43998:	003d4806 	br	42ebc <___vfprintf_internal_r+0x130>
   4399c:	e2c01990 	cmplti	r11,fp,102
   439a0:	5800cb1e 	bne	r11,zero,43cd0 <___vfprintf_internal_r+0xf44>
   439a4:	d9000917 	ldw	r4,36(sp)
   439a8:	d9400a17 	ldw	r5,40(sp)
   439ac:	000d883a 	mov	r6,zero
   439b0:	000f883a 	mov	r7,zero
   439b4:	d8c00e15 	stw	r3,56(sp)
   439b8:	004ce9c0 	call	4ce9c <__eqdf2>
   439bc:	d8c00e17 	ldw	r3,56(sp)
   439c0:	1001641e 	bne	r2,zero,43f54 <___vfprintf_internal_r+0x11c8>
   439c4:	d8801b17 	ldw	r2,108(sp)
   439c8:	01000174 	movhi	r4,5
   439cc:	2103e604 	addi	r4,r4,3992
   439d0:	10800044 	addi	r2,r2,1
   439d4:	18c00044 	addi	r3,r3,1
   439d8:	b1000015 	stw	r4,0(r22)
   439dc:	01000044 	movi	r4,1
   439e0:	d8801b15 	stw	r2,108(sp)
   439e4:	b1000115 	stw	r4,4(r22)
   439e8:	d8c01c15 	stw	r3,112(sp)
   439ec:	10800208 	cmpgei	r2,r2,8
   439f0:	1003621e 	bne	r2,zero,4477c <___vfprintf_internal_r+0x19f0>
   439f4:	b5800204 	addi	r22,r22,8
   439f8:	d8801417 	ldw	r2,80(sp)
   439fc:	d9000817 	ldw	r4,32(sp)
   43a00:	1101e70e 	bge	r2,r4,441a0 <___vfprintf_internal_r+0x1414>
   43a04:	d8800d17 	ldw	r2,52(sp)
   43a08:	d9000b17 	ldw	r4,44(sp)
   43a0c:	b0800015 	stw	r2,0(r22)
   43a10:	d8801b17 	ldw	r2,108(sp)
   43a14:	1907883a 	add	r3,r3,r4
   43a18:	b1000115 	stw	r4,4(r22)
   43a1c:	10800044 	addi	r2,r2,1
   43a20:	d8801b15 	stw	r2,108(sp)
   43a24:	d8c01c15 	stw	r3,112(sp)
   43a28:	10800208 	cmpgei	r2,r2,8
   43a2c:	1002291e 	bne	r2,zero,442d4 <___vfprintf_internal_r+0x1548>
   43a30:	b5800204 	addi	r22,r22,8
   43a34:	d8800817 	ldw	r2,32(sp)
   43a38:	157fffc4 	addi	r21,r2,-1
   43a3c:	057dd10e 	bge	zero,r21,43184 <___vfprintf_internal_r+0x3f8>
   43a40:	01c00174 	movhi	r7,5
   43a44:	a9000450 	cmplti	r4,r21,17
   43a48:	d8801b17 	ldw	r2,108(sp)
   43a4c:	39c3e704 	addi	r7,r7,3996
   43a50:	2003461e 	bne	r4,zero,4476c <___vfprintf_internal_r+0x19e0>
   43a54:	07000404 	movi	fp,16
   43a58:	3823883a 	mov	r17,r7
   43a5c:	00000406 	br	43a70 <___vfprintf_internal_r+0xce4>
   43a60:	b5800204 	addi	r22,r22,8
   43a64:	ad7ffc04 	addi	r21,r21,-16
   43a68:	a9000448 	cmpgei	r4,r21,17
   43a6c:	20033e26 	beq	r4,zero,44768 <___vfprintf_internal_r+0x19dc>
   43a70:	10800044 	addi	r2,r2,1
   43a74:	18c00404 	addi	r3,r3,16
   43a78:	b4400015 	stw	r17,0(r22)
   43a7c:	b7000115 	stw	fp,4(r22)
   43a80:	d8c01c15 	stw	r3,112(sp)
   43a84:	d8801b15 	stw	r2,108(sp)
   43a88:	11000208 	cmpgei	r4,r2,8
   43a8c:	203ff426 	beq	r4,zero,43a60 <___vfprintf_internal_r+0xcd4>
   43a90:	d9801a04 	addi	r6,sp,104
   43a94:	900b883a 	mov	r5,r18
   43a98:	9809883a 	mov	r4,r19
   43a9c:	0048cf80 	call	48cf8 <__sprint_r>
   43aa0:	103dc91e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   43aa4:	d8c01c17 	ldw	r3,112(sp)
   43aa8:	d8801b17 	ldw	r2,108(sp)
   43aac:	dd802704 	addi	r22,sp,156
   43ab0:	003fec06 	br	43a64 <___vfprintf_internal_r+0xcd8>
   43ab4:	8519c83a 	sub	r12,r16,r20
   43ab8:	033da30e 	bge	zero,r12,43148 <___vfprintf_internal_r+0x3bc>
   43abc:	01c00174 	movhi	r7,5
   43ac0:	61000450 	cmplti	r4,r12,17
   43ac4:	d8801b17 	ldw	r2,108(sp)
   43ac8:	39c3e704 	addi	r7,r7,3996
   43acc:	2000281e 	bne	r4,zero,43b70 <___vfprintf_internal_r+0xde4>
   43ad0:	dc400e15 	stw	r17,56(sp)
   43ad4:	dc000f15 	stw	r16,60(sp)
   43ad8:	b009883a 	mov	r4,r22
   43adc:	03400404 	movi	r13,16
   43ae0:	a02d883a 	mov	r22,r20
   43ae4:	6021883a 	mov	r16,r12
   43ae8:	4029883a 	mov	r20,r8
   43aec:	3823883a 	mov	r17,r7
   43af0:	00000406 	br	43b04 <___vfprintf_internal_r+0xd78>
   43af4:	843ffc04 	addi	r16,r16,-16
   43af8:	81400448 	cmpgei	r5,r16,17
   43afc:	21000204 	addi	r4,r4,8
   43b00:	28001426 	beq	r5,zero,43b54 <___vfprintf_internal_r+0xdc8>
   43b04:	10800044 	addi	r2,r2,1
   43b08:	18c00404 	addi	r3,r3,16
   43b0c:	24400015 	stw	r17,0(r4)
   43b10:	23400115 	stw	r13,4(r4)
   43b14:	d8c01c15 	stw	r3,112(sp)
   43b18:	d8801b15 	stw	r2,108(sp)
   43b1c:	11400208 	cmpgei	r5,r2,8
   43b20:	283ff426 	beq	r5,zero,43af4 <___vfprintf_internal_r+0xd68>
   43b24:	d9801a04 	addi	r6,sp,104
   43b28:	900b883a 	mov	r5,r18
   43b2c:	9809883a 	mov	r4,r19
   43b30:	0048cf80 	call	48cf8 <__sprint_r>
   43b34:	103da41e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   43b38:	843ffc04 	addi	r16,r16,-16
   43b3c:	81400448 	cmpgei	r5,r16,17
   43b40:	d8c01c17 	ldw	r3,112(sp)
   43b44:	d8801b17 	ldw	r2,108(sp)
   43b48:	d9002704 	addi	r4,sp,156
   43b4c:	03400404 	movi	r13,16
   43b50:	283fec1e 	bne	r5,zero,43b04 <___vfprintf_internal_r+0xd78>
   43b54:	8019883a 	mov	r12,r16
   43b58:	880f883a 	mov	r7,r17
   43b5c:	dc000f17 	ldw	r16,60(sp)
   43b60:	dc400e17 	ldw	r17,56(sp)
   43b64:	a011883a 	mov	r8,r20
   43b68:	b029883a 	mov	r20,r22
   43b6c:	202d883a 	mov	r22,r4
   43b70:	10800044 	addi	r2,r2,1
   43b74:	1b07883a 	add	r3,r3,r12
   43b78:	d8801b15 	stw	r2,108(sp)
   43b7c:	b1c00015 	stw	r7,0(r22)
   43b80:	b3000115 	stw	r12,4(r22)
   43b84:	d8c01c15 	stw	r3,112(sp)
   43b88:	10800208 	cmpgei	r2,r2,8
   43b8c:	1003031e 	bne	r2,zero,4479c <___vfprintf_internal_r+0x1a10>
   43b90:	4551c83a 	sub	r8,r8,r21
   43b94:	b5800204 	addi	r22,r22,8
   43b98:	023d6d0e 	bge	zero,r8,43150 <___vfprintf_internal_r+0x3c4>
   43b9c:	01c00174 	movhi	r7,5
   43ba0:	41000450 	cmplti	r4,r8,17
   43ba4:	d8801b17 	ldw	r2,108(sp)
   43ba8:	39c3e704 	addi	r7,r7,3996
   43bac:	2000221e 	bne	r4,zero,43c38 <___vfprintf_internal_r+0xeac>
   43bb0:	dc400e15 	stw	r17,56(sp)
   43bb4:	dc000f15 	stw	r16,60(sp)
   43bb8:	03000404 	movi	r12,16
   43bbc:	4021883a 	mov	r16,r8
   43bc0:	3823883a 	mov	r17,r7
   43bc4:	00000406 	br	43bd8 <___vfprintf_internal_r+0xe4c>
   43bc8:	843ffc04 	addi	r16,r16,-16
   43bcc:	81000448 	cmpgei	r4,r16,17
   43bd0:	b5800204 	addi	r22,r22,8
   43bd4:	20001426 	beq	r4,zero,43c28 <___vfprintf_internal_r+0xe9c>
   43bd8:	10800044 	addi	r2,r2,1
   43bdc:	18c00404 	addi	r3,r3,16
   43be0:	b4400015 	stw	r17,0(r22)
   43be4:	b3000115 	stw	r12,4(r22)
   43be8:	d8c01c15 	stw	r3,112(sp)
   43bec:	d8801b15 	stw	r2,108(sp)
   43bf0:	11000208 	cmpgei	r4,r2,8
   43bf4:	203ff426 	beq	r4,zero,43bc8 <___vfprintf_internal_r+0xe3c>
   43bf8:	d9801a04 	addi	r6,sp,104
   43bfc:	900b883a 	mov	r5,r18
   43c00:	9809883a 	mov	r4,r19
   43c04:	0048cf80 	call	48cf8 <__sprint_r>
   43c08:	103d6f1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   43c0c:	843ffc04 	addi	r16,r16,-16
   43c10:	81000448 	cmpgei	r4,r16,17
   43c14:	d8c01c17 	ldw	r3,112(sp)
   43c18:	d8801b17 	ldw	r2,108(sp)
   43c1c:	dd802704 	addi	r22,sp,156
   43c20:	03000404 	movi	r12,16
   43c24:	203fec1e 	bne	r4,zero,43bd8 <___vfprintf_internal_r+0xe4c>
   43c28:	8011883a 	mov	r8,r16
   43c2c:	880f883a 	mov	r7,r17
   43c30:	dc000f17 	ldw	r16,60(sp)
   43c34:	dc400e17 	ldw	r17,56(sp)
   43c38:	10800044 	addi	r2,r2,1
   43c3c:	1a07883a 	add	r3,r3,r8
   43c40:	d8801b15 	stw	r2,108(sp)
   43c44:	b1c00015 	stw	r7,0(r22)
   43c48:	b2000115 	stw	r8,4(r22)
   43c4c:	d8c01c15 	stw	r3,112(sp)
   43c50:	10800208 	cmpgei	r2,r2,8
   43c54:	10014a1e 	bne	r2,zero,44180 <___vfprintf_internal_r+0x13f4>
   43c58:	b5800204 	addi	r22,r22,8
   43c5c:	003d3c06 	br	43150 <___vfprintf_internal_r+0x3c4>
   43c60:	10c00060 	cmpeqi	r3,r2,1
   43c64:	1803bc1e 	bne	r3,zero,44b58 <___vfprintf_internal_r+0x1dcc>
   43c68:	108000a0 	cmpeqi	r2,r2,2
   43c6c:	db000417 	ldw	r12,16(sp)
   43c70:	103ea826 	beq	r2,zero,43714 <___vfprintf_internal_r+0x988>
   43c74:	d9000c17 	ldw	r4,48(sp)
   43c78:	dc402704 	addi	r17,sp,156
   43c7c:	a08003cc 	andi	r2,r20,15
   43c80:	a806973a 	slli	r3,r21,28
   43c84:	a028d13a 	srli	r20,r20,4
   43c88:	2085883a 	add	r2,r4,r2
   43c8c:	10800003 	ldbu	r2,0(r2)
   43c90:	a82ad13a 	srli	r21,r21,4
   43c94:	1d28b03a 	or	r20,r3,r20
   43c98:	88bfffc5 	stb	r2,-1(r17)
   43c9c:	a544b03a 	or	r2,r20,r21
   43ca0:	8c7fffc4 	addi	r17,r17,-1
   43ca4:	103ff51e 	bne	r2,zero,43c7c <___vfprintf_internal_r+0xef0>
   43ca8:	d8802704 	addi	r2,sp,156
   43cac:	146bc83a 	sub	r21,r2,r17
   43cb0:	db000415 	stw	r12,16(sp)
   43cb4:	003e4c06 	br	435e8 <___vfprintf_internal_r+0x85c>
   43cb8:	d9801a04 	addi	r6,sp,104
   43cbc:	900b883a 	mov	r5,r18
   43cc0:	9809883a 	mov	r4,r19
   43cc4:	0048cf80 	call	48cf8 <__sprint_r>
   43cc8:	103d3926 	beq	r2,zero,431b0 <___vfprintf_internal_r+0x424>
   43ccc:	003d3e06 	br	431c8 <___vfprintf_internal_r+0x43c>
   43cd0:	d8800817 	ldw	r2,32(sp)
   43cd4:	da001b17 	ldw	r8,108(sp)
   43cd8:	18c00044 	addi	r3,r3,1
   43cdc:	10800088 	cmpgei	r2,r2,2
   43ce0:	45400044 	addi	r21,r8,1
   43ce4:	b7000204 	addi	fp,r22,8
   43ce8:	1000f826 	beq	r2,zero,440cc <___vfprintf_internal_r+0x1340>
   43cec:	00800044 	movi	r2,1
   43cf0:	b0800115 	stw	r2,4(r22)
   43cf4:	b4400015 	stw	r17,0(r22)
   43cf8:	d8c01c15 	stw	r3,112(sp)
   43cfc:	dd401b15 	stw	r21,108(sp)
   43d00:	a8800210 	cmplti	r2,r21,8
   43d04:	1001cc26 	beq	r2,zero,44438 <___vfprintf_internal_r+0x16ac>
   43d08:	d8800b17 	ldw	r2,44(sp)
   43d0c:	d9000d17 	ldw	r4,52(sp)
   43d10:	ad400044 	addi	r21,r21,1
   43d14:	1887883a 	add	r3,r3,r2
   43d18:	e0800115 	stw	r2,4(fp)
   43d1c:	e1000015 	stw	r4,0(fp)
   43d20:	d8c01c15 	stw	r3,112(sp)
   43d24:	dd401b15 	stw	r21,108(sp)
   43d28:	a8800208 	cmpgei	r2,r21,8
   43d2c:	1001cb1e 	bne	r2,zero,4445c <___vfprintf_internal_r+0x16d0>
   43d30:	e7000204 	addi	fp,fp,8
   43d34:	d9000917 	ldw	r4,36(sp)
   43d38:	d9400a17 	ldw	r5,40(sp)
   43d3c:	aa000044 	addi	r8,r21,1
   43d40:	000d883a 	mov	r6,zero
   43d44:	000f883a 	mov	r7,zero
   43d48:	d8c00e15 	stw	r3,56(sp)
   43d4c:	da000715 	stw	r8,28(sp)
   43d50:	004ce9c0 	call	4ce9c <__eqdf2>
   43d54:	d8c00817 	ldw	r3,32(sp)
   43d58:	da000717 	ldw	r8,28(sp)
   43d5c:	e5800204 	addi	r22,fp,8
   43d60:	1affffc4 	addi	r11,r3,-1
   43d64:	d8c00e17 	ldw	r3,56(sp)
   43d68:	1000e526 	beq	r2,zero,44100 <___vfprintf_internal_r+0x1374>
   43d6c:	8a400044 	addi	r9,r17,1
   43d70:	1ac7883a 	add	r3,r3,r11
   43d74:	da001b15 	stw	r8,108(sp)
   43d78:	e2400015 	stw	r9,0(fp)
   43d7c:	e2c00115 	stw	r11,4(fp)
   43d80:	d8c01c15 	stw	r3,112(sp)
   43d84:	42000208 	cmpgei	r8,r8,8
   43d88:	40013e1e 	bne	r8,zero,44284 <___vfprintf_internal_r+0x14f8>
   43d8c:	e0800404 	addi	r2,fp,16
   43d90:	aa000084 	addi	r8,r21,2
   43d94:	b039883a 	mov	fp,r22
   43d98:	102d883a 	mov	r22,r2
   43d9c:	d9001017 	ldw	r4,64(sp)
   43da0:	d8801644 	addi	r2,sp,89
   43da4:	da001b15 	stw	r8,108(sp)
   43da8:	20c7883a 	add	r3,r4,r3
   43dac:	e0800015 	stw	r2,0(fp)
   43db0:	e1000115 	stw	r4,4(fp)
   43db4:	d8c01c15 	stw	r3,112(sp)
   43db8:	42000210 	cmplti	r8,r8,8
   43dbc:	403cf11e 	bne	r8,zero,43184 <___vfprintf_internal_r+0x3f8>
   43dc0:	d9801a04 	addi	r6,sp,104
   43dc4:	900b883a 	mov	r5,r18
   43dc8:	9809883a 	mov	r4,r19
   43dcc:	0048cf80 	call	48cf8 <__sprint_r>
   43dd0:	103cfd1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   43dd4:	d8c01c17 	ldw	r3,112(sp)
   43dd8:	dd802704 	addi	r22,sp,156
   43ddc:	003ce906 	br	43184 <___vfprintf_internal_r+0x3f8>
   43de0:	db000417 	ldw	r12,16(sp)
   43de4:	003e4706 	br	43704 <___vfprintf_internal_r+0x978>
   43de8:	03000174 	movhi	r12,5
   43dec:	39000450 	cmplti	r4,r7,17
   43df0:	d8801b17 	ldw	r2,108(sp)
   43df4:	6303eb04 	addi	r12,r12,4012
   43df8:	2000321e 	bne	r4,zero,43ec4 <___vfprintf_internal_r+0x1138>
   43dfc:	dc401115 	stw	r17,68(sp)
   43e00:	b009883a 	mov	r4,r22
   43e04:	9023883a 	mov	r17,r18
   43e08:	a82d883a 	mov	r22,r21
   43e0c:	ddc01215 	stw	r23,72(sp)
   43e10:	03c00404 	movi	r15,16
   43e14:	a02f883a 	mov	r23,r20
   43e18:	db800e15 	stw	r14,56(sp)
   43e1c:	8029883a 	mov	r20,r16
   43e20:	db400f15 	stw	r13,60(sp)
   43e24:	402b883a 	mov	r21,r8
   43e28:	3821883a 	mov	r16,r7
   43e2c:	6025883a 	mov	r18,r12
   43e30:	00000406 	br	43e44 <___vfprintf_internal_r+0x10b8>
   43e34:	843ffc04 	addi	r16,r16,-16
   43e38:	81800448 	cmpgei	r6,r16,17
   43e3c:	21000204 	addi	r4,r4,8
   43e40:	30001426 	beq	r6,zero,43e94 <___vfprintf_internal_r+0x1108>
   43e44:	10800044 	addi	r2,r2,1
   43e48:	18c00404 	addi	r3,r3,16
   43e4c:	24800015 	stw	r18,0(r4)
   43e50:	23c00115 	stw	r15,4(r4)
   43e54:	d8c01c15 	stw	r3,112(sp)
   43e58:	d8801b15 	stw	r2,108(sp)
   43e5c:	11800208 	cmpgei	r6,r2,8
   43e60:	303ff426 	beq	r6,zero,43e34 <___vfprintf_internal_r+0x10a8>
   43e64:	d9801a04 	addi	r6,sp,104
   43e68:	880b883a 	mov	r5,r17
   43e6c:	9809883a 	mov	r4,r19
   43e70:	0048cf80 	call	48cf8 <__sprint_r>
   43e74:	1001b91e 	bne	r2,zero,4455c <___vfprintf_internal_r+0x17d0>
   43e78:	843ffc04 	addi	r16,r16,-16
   43e7c:	81800448 	cmpgei	r6,r16,17
   43e80:	d8c01c17 	ldw	r3,112(sp)
   43e84:	d8801b17 	ldw	r2,108(sp)
   43e88:	d9002704 	addi	r4,sp,156
   43e8c:	03c00404 	movi	r15,16
   43e90:	303fec1e 	bne	r6,zero,43e44 <___vfprintf_internal_r+0x10b8>
   43e94:	800f883a 	mov	r7,r16
   43e98:	9019883a 	mov	r12,r18
   43e9c:	a021883a 	mov	r16,r20
   43ea0:	8825883a 	mov	r18,r17
   43ea4:	b829883a 	mov	r20,r23
   43ea8:	db800e17 	ldw	r14,56(sp)
   43eac:	db400f17 	ldw	r13,60(sp)
   43eb0:	ddc01217 	ldw	r23,72(sp)
   43eb4:	dc401117 	ldw	r17,68(sp)
   43eb8:	a811883a 	mov	r8,r21
   43ebc:	b02b883a 	mov	r21,r22
   43ec0:	202d883a 	mov	r22,r4
   43ec4:	10800044 	addi	r2,r2,1
   43ec8:	19c7883a 	add	r3,r3,r7
   43ecc:	d8801b15 	stw	r2,108(sp)
   43ed0:	b3000015 	stw	r12,0(r22)
   43ed4:	b1c00115 	stw	r7,4(r22)
   43ed8:	d8c01c15 	stw	r3,112(sp)
   43edc:	10800208 	cmpgei	r2,r2,8
   43ee0:	1001671e 	bne	r2,zero,44480 <___vfprintf_internal_r+0x16f4>
   43ee4:	b5800204 	addi	r22,r22,8
   43ee8:	003c7a06 	br	430d4 <___vfprintf_internal_r+0x348>
   43eec:	d9801a04 	addi	r6,sp,104
   43ef0:	900b883a 	mov	r5,r18
   43ef4:	9809883a 	mov	r4,r19
   43ef8:	da001115 	stw	r8,68(sp)
   43efc:	db400f15 	stw	r13,60(sp)
   43f00:	db800e15 	stw	r14,56(sp)
   43f04:	0048cf80 	call	48cf8 <__sprint_r>
   43f08:	103caf1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   43f0c:	d8c01c17 	ldw	r3,112(sp)
   43f10:	da001117 	ldw	r8,68(sp)
   43f14:	db400f17 	ldw	r13,60(sp)
   43f18:	db800e17 	ldw	r14,56(sp)
   43f1c:	dd802704 	addi	r22,sp,156
   43f20:	003c7a06 	br	4310c <___vfprintf_internal_r+0x380>
   43f24:	d9801a04 	addi	r6,sp,104
   43f28:	900b883a 	mov	r5,r18
   43f2c:	9809883a 	mov	r4,r19
   43f30:	da000f15 	stw	r8,60(sp)
   43f34:	db400e15 	stw	r13,56(sp)
   43f38:	0048cf80 	call	48cf8 <__sprint_r>
   43f3c:	103ca21e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   43f40:	d8c01c17 	ldw	r3,112(sp)
   43f44:	da000f17 	ldw	r8,60(sp)
   43f48:	db400e17 	ldw	r13,56(sp)
   43f4c:	dd802704 	addi	r22,sp,156
   43f50:	003c7b06 	br	43140 <___vfprintf_internal_r+0x3b4>
   43f54:	d9401417 	ldw	r5,80(sp)
   43f58:	0141570e 	bge	zero,r5,444b8 <___vfprintf_internal_r+0x172c>
   43f5c:	d8800717 	ldw	r2,28(sp)
   43f60:	d9000817 	ldw	r4,32(sp)
   43f64:	102b883a 	mov	r21,r2
   43f68:	2080b916 	blt	r4,r2,44250 <___vfprintf_internal_r+0x14c4>
   43f6c:	05400a0e 	bge	zero,r21,43f98 <___vfprintf_internal_r+0x120c>
   43f70:	d8801b17 	ldw	r2,108(sp)
   43f74:	1d47883a 	add	r3,r3,r21
   43f78:	b4400015 	stw	r17,0(r22)
   43f7c:	10800044 	addi	r2,r2,1
   43f80:	d8801b15 	stw	r2,108(sp)
   43f84:	b5400115 	stw	r21,4(r22)
   43f88:	d8c01c15 	stw	r3,112(sp)
   43f8c:	10800208 	cmpgei	r2,r2,8
   43f90:	10032d1e 	bne	r2,zero,44c48 <___vfprintf_internal_r+0x1ebc>
   43f94:	b5800204 	addi	r22,r22,8
   43f98:	a800c516 	blt	r21,zero,442b0 <___vfprintf_internal_r+0x1524>
   43f9c:	d8800717 	ldw	r2,28(sp)
   43fa0:	156bc83a 	sub	r21,r2,r21
   43fa4:	0540db16 	blt	zero,r21,44314 <___vfprintf_internal_r+0x1588>
   43fa8:	dd401417 	ldw	r21,80(sp)
   43fac:	d8800817 	ldw	r2,32(sp)
   43fb0:	a880aa0e 	bge	r21,r2,4425c <___vfprintf_internal_r+0x14d0>
   43fb4:	d8800d17 	ldw	r2,52(sp)
   43fb8:	d9000b17 	ldw	r4,44(sp)
   43fbc:	b0800015 	stw	r2,0(r22)
   43fc0:	d8801b17 	ldw	r2,108(sp)
   43fc4:	1907883a 	add	r3,r3,r4
   43fc8:	b1000115 	stw	r4,4(r22)
   43fcc:	10800044 	addi	r2,r2,1
   43fd0:	d8801b15 	stw	r2,108(sp)
   43fd4:	d8c01c15 	stw	r3,112(sp)
   43fd8:	10800208 	cmpgei	r2,r2,8
   43fdc:	1003111e 	bne	r2,zero,44c24 <___vfprintf_internal_r+0x1e98>
   43fe0:	b5800204 	addi	r22,r22,8
   43fe4:	d9000817 	ldw	r4,32(sp)
   43fe8:	d9400717 	ldw	r5,28(sp)
   43fec:	2545c83a 	sub	r2,r4,r21
   43ff0:	2149c83a 	sub	r4,r4,r5
   43ff4:	102b883a 	mov	r21,r2
   43ff8:	2080010e 	bge	r4,r2,44000 <___vfprintf_internal_r+0x1274>
   43ffc:	202b883a 	mov	r21,r4
   44000:	05400c0e 	bge	zero,r21,44034 <___vfprintf_internal_r+0x12a8>
   44004:	d9000717 	ldw	r4,28(sp)
   44008:	1d47883a 	add	r3,r3,r21
   4400c:	b5400115 	stw	r21,4(r22)
   44010:	8913883a 	add	r9,r17,r4
   44014:	d9001b17 	ldw	r4,108(sp)
   44018:	b2400015 	stw	r9,0(r22)
   4401c:	d8c01c15 	stw	r3,112(sp)
   44020:	21000044 	addi	r4,r4,1
   44024:	d9001b15 	stw	r4,108(sp)
   44028:	21000208 	cmpgei	r4,r4,8
   4402c:	2003111e 	bne	r4,zero,44c74 <___vfprintf_internal_r+0x1ee8>
   44030:	b5800204 	addi	r22,r22,8
   44034:	a800010e 	bge	r21,zero,4403c <___vfprintf_internal_r+0x12b0>
   44038:	002b883a 	mov	r21,zero
   4403c:	156bc83a 	sub	r21,r2,r21
   44040:	057c500e 	bge	zero,r21,43184 <___vfprintf_internal_r+0x3f8>
   44044:	01c00174 	movhi	r7,5
   44048:	a9000450 	cmplti	r4,r21,17
   4404c:	d8801b17 	ldw	r2,108(sp)
   44050:	39c3e704 	addi	r7,r7,3996
   44054:	2001c51e 	bne	r4,zero,4476c <___vfprintf_internal_r+0x19e0>
   44058:	07000404 	movi	fp,16
   4405c:	3823883a 	mov	r17,r7
   44060:	00000406 	br	44074 <___vfprintf_internal_r+0x12e8>
   44064:	b5800204 	addi	r22,r22,8
   44068:	ad7ffc04 	addi	r21,r21,-16
   4406c:	a9000448 	cmpgei	r4,r21,17
   44070:	2001bd26 	beq	r4,zero,44768 <___vfprintf_internal_r+0x19dc>
   44074:	10800044 	addi	r2,r2,1
   44078:	18c00404 	addi	r3,r3,16
   4407c:	b4400015 	stw	r17,0(r22)
   44080:	b7000115 	stw	fp,4(r22)
   44084:	d8c01c15 	stw	r3,112(sp)
   44088:	d8801b15 	stw	r2,108(sp)
   4408c:	11000208 	cmpgei	r4,r2,8
   44090:	203ff426 	beq	r4,zero,44064 <___vfprintf_internal_r+0x12d8>
   44094:	d9801a04 	addi	r6,sp,104
   44098:	900b883a 	mov	r5,r18
   4409c:	9809883a 	mov	r4,r19
   440a0:	0048cf80 	call	48cf8 <__sprint_r>
   440a4:	103c481e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   440a8:	d8c01c17 	ldw	r3,112(sp)
   440ac:	d8801b17 	ldw	r2,108(sp)
   440b0:	dd802704 	addi	r22,sp,156
   440b4:	003fec06 	br	44068 <___vfprintf_internal_r+0x12dc>
   440b8:	4002a71e 	bne	r8,zero,44b58 <___vfprintf_internal_r+0x1dcc>
   440bc:	0011883a 	mov	r8,zero
   440c0:	002b883a 	mov	r21,zero
   440c4:	dc402704 	addi	r17,sp,156
   440c8:	003d4706 	br	435e8 <___vfprintf_internal_r+0x85c>
   440cc:	d8800417 	ldw	r2,16(sp)
   440d0:	1080004c 	andi	r2,r2,1
   440d4:	103f051e 	bne	r2,zero,43cec <___vfprintf_internal_r+0xf60>
   440d8:	00800044 	movi	r2,1
   440dc:	dd401b15 	stw	r21,108(sp)
   440e0:	b4400015 	stw	r17,0(r22)
   440e4:	b0800115 	stw	r2,4(r22)
   440e8:	d8c01c15 	stw	r3,112(sp)
   440ec:	ad400208 	cmpgei	r21,r21,8
   440f0:	a800641e 	bne	r21,zero,44284 <___vfprintf_internal_r+0x14f8>
   440f4:	42000084 	addi	r8,r8,2
   440f8:	b5800404 	addi	r22,r22,16
   440fc:	003f2706 	br	43d9c <___vfprintf_internal_r+0x1010>
   44100:	02ff260e 	bge	zero,r11,43d9c <___vfprintf_internal_r+0x1010>
   44104:	58800450 	cmplti	r2,r11,17
   44108:	01c00174 	movhi	r7,5
   4410c:	10034c1e 	bne	r2,zero,44e40 <___vfprintf_internal_r+0x20b4>
   44110:	39c3e704 	addi	r7,r7,3996
   44114:	dc000715 	stw	r16,28(sp)
   44118:	05800404 	movi	r22,16
   4411c:	5823883a 	mov	r17,r11
   44120:	402b883a 	mov	r21,r8
   44124:	3821883a 	mov	r16,r7
   44128:	00000506 	br	44140 <___vfprintf_internal_r+0x13b4>
   4412c:	e7000204 	addi	fp,fp,8
   44130:	8c7ffc04 	addi	r17,r17,-16
   44134:	88800448 	cmpgei	r2,r17,17
   44138:	1001d626 	beq	r2,zero,44894 <___vfprintf_internal_r+0x1b08>
   4413c:	ad400044 	addi	r21,r21,1
   44140:	18c00404 	addi	r3,r3,16
   44144:	e4000015 	stw	r16,0(fp)
   44148:	e5800115 	stw	r22,4(fp)
   4414c:	d8c01c15 	stw	r3,112(sp)
   44150:	dd401b15 	stw	r21,108(sp)
   44154:	a8800208 	cmpgei	r2,r21,8
   44158:	103ff426 	beq	r2,zero,4412c <___vfprintf_internal_r+0x13a0>
   4415c:	d9801a04 	addi	r6,sp,104
   44160:	900b883a 	mov	r5,r18
   44164:	9809883a 	mov	r4,r19
   44168:	0048cf80 	call	48cf8 <__sprint_r>
   4416c:	103c161e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44170:	dd401b17 	ldw	r21,108(sp)
   44174:	d8c01c17 	ldw	r3,112(sp)
   44178:	df002704 	addi	fp,sp,156
   4417c:	003fec06 	br	44130 <___vfprintf_internal_r+0x13a4>
   44180:	d9801a04 	addi	r6,sp,104
   44184:	900b883a 	mov	r5,r18
   44188:	9809883a 	mov	r4,r19
   4418c:	0048cf80 	call	48cf8 <__sprint_r>
   44190:	103c0d1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44194:	d8c01c17 	ldw	r3,112(sp)
   44198:	dd802704 	addi	r22,sp,156
   4419c:	003bec06 	br	43150 <___vfprintf_internal_r+0x3c4>
   441a0:	d8800417 	ldw	r2,16(sp)
   441a4:	1080004c 	andi	r2,r2,1
   441a8:	103bf626 	beq	r2,zero,43184 <___vfprintf_internal_r+0x3f8>
   441ac:	003e1506 	br	43a04 <___vfprintf_internal_r+0xc78>
   441b0:	dc402704 	addi	r17,sp,156
   441b4:	003d0c06 	br	435e8 <___vfprintf_internal_r+0x85c>
   441b8:	00800c04 	movi	r2,48
   441bc:	d8801385 	stb	r2,78(sp)
   441c0:	df0013c5 	stb	fp,79(sp)
   441c4:	63000094 	ori	r12,r12,2
   441c8:	00800084 	movi	r2,2
   441cc:	003c3b06 	br	432bc <___vfprintf_internal_r+0x530>
   441d0:	25000017 	ldw	r20,0(r4)
   441d4:	002b883a 	mov	r21,zero
   441d8:	d8c00615 	stw	r3,24(sp)
   441dc:	00800044 	movi	r2,1
   441e0:	003c3606 	br	432bc <___vfprintf_internal_r+0x530>
   441e4:	d9000517 	ldw	r4,20(sp)
   441e8:	2005d7fa 	srai	r2,r4,31
   441ec:	19000015 	stw	r4,0(r3)
   441f0:	18800115 	stw	r2,4(r3)
   441f4:	003b1906 	br	42e5c <___vfprintf_internal_r+0xd0>
   441f8:	25000017 	ldw	r20,0(r4)
   441fc:	002b883a 	mov	r21,zero
   44200:	d8c00615 	stw	r3,24(sp)
   44204:	003d1b06 	br	43674 <___vfprintf_internal_r+0x8e8>
   44208:	25000017 	ldw	r20,0(r4)
   4420c:	002b883a 	mov	r21,zero
   44210:	d8c00615 	stw	r3,24(sp)
   44214:	0005883a 	mov	r2,zero
   44218:	003c2806 	br	432bc <___vfprintf_internal_r+0x530>
   4421c:	18800017 	ldw	r2,0(r3)
   44220:	d8800915 	stw	r2,36(sp)
   44224:	18800117 	ldw	r2,4(r3)
   44228:	d8800a15 	stw	r2,40(sp)
   4422c:	003c5906 	br	43394 <___vfprintf_internal_r+0x608>
   44230:	25000017 	ldw	r20,0(r4)
   44234:	d8c00615 	stw	r3,24(sp)
   44238:	a02bd7fa 	srai	r21,r20,31
   4423c:	a805883a 	mov	r2,r21
   44240:	003cd706 	br	435a0 <___vfprintf_internal_r+0x814>
   44244:	0421c83a 	sub	r16,zero,r16
   44248:	d8800615 	stw	r2,24(sp)
   4424c:	003d6306 	br	437dc <___vfprintf_internal_r+0xa50>
   44250:	202b883a 	mov	r21,r4
   44254:	057f4616 	blt	zero,r21,43f70 <___vfprintf_internal_r+0x11e4>
   44258:	003f4f06 	br	43f98 <___vfprintf_internal_r+0x120c>
   4425c:	d8800417 	ldw	r2,16(sp)
   44260:	1080004c 	andi	r2,r2,1
   44264:	103f531e 	bne	r2,zero,43fb4 <___vfprintf_internal_r+0x1228>
   44268:	d9000817 	ldw	r4,32(sp)
   4426c:	d9400717 	ldw	r5,28(sp)
   44270:	2545c83a 	sub	r2,r4,r21
   44274:	216bc83a 	sub	r21,r4,r5
   44278:	157f6e0e 	bge	r2,r21,44034 <___vfprintf_internal_r+0x12a8>
   4427c:	102b883a 	mov	r21,r2
   44280:	003f6c06 	br	44034 <___vfprintf_internal_r+0x12a8>
   44284:	d9801a04 	addi	r6,sp,104
   44288:	900b883a 	mov	r5,r18
   4428c:	9809883a 	mov	r4,r19
   44290:	0048cf80 	call	48cf8 <__sprint_r>
   44294:	103bcc1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44298:	da001b17 	ldw	r8,108(sp)
   4429c:	d8c01c17 	ldw	r3,112(sp)
   442a0:	dd802904 	addi	r22,sp,164
   442a4:	42000044 	addi	r8,r8,1
   442a8:	df002704 	addi	fp,sp,156
   442ac:	003ebb06 	br	43d9c <___vfprintf_internal_r+0x1010>
   442b0:	002b883a 	mov	r21,zero
   442b4:	003f3906 	br	43f9c <___vfprintf_internal_r+0x1210>
   442b8:	bf000043 	ldbu	fp,1(r23)
   442bc:	63000814 	ori	r12,r12,32
   442c0:	bdc00044 	addi	r23,r23,1
   442c4:	e2c03fcc 	andi	r11,fp,255
   442c8:	5ac0201c 	xori	r11,r11,128
   442cc:	5affe004 	addi	r11,r11,-128
   442d0:	003afa06 	br	42ebc <___vfprintf_internal_r+0x130>
   442d4:	d9801a04 	addi	r6,sp,104
   442d8:	900b883a 	mov	r5,r18
   442dc:	9809883a 	mov	r4,r19
   442e0:	0048cf80 	call	48cf8 <__sprint_r>
   442e4:	103bb81e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   442e8:	d8c01c17 	ldw	r3,112(sp)
   442ec:	dd802704 	addi	r22,sp,156
   442f0:	003dd006 	br	43a34 <___vfprintf_internal_r+0xca8>
   442f4:	408001f0 	cmpltui	r2,r8,7
   442f8:	402b883a 	mov	r21,r8
   442fc:	1001e726 	beq	r2,zero,44a9c <___vfprintf_internal_r+0x1d10>
   44300:	04400174 	movhi	r17,5
   44304:	a829883a 	mov	r20,r21
   44308:	d8c00615 	stw	r3,24(sp)
   4430c:	8c43e404 	addi	r17,r17,3984
   44310:	003b6306 	br	430a0 <___vfprintf_internal_r+0x314>
   44314:	01c00174 	movhi	r7,5
   44318:	a9000450 	cmplti	r4,r21,17
   4431c:	d8801b17 	ldw	r2,108(sp)
   44320:	39c3e704 	addi	r7,r7,3996
   44324:	2001c21e 	bne	r4,zero,44a30 <___vfprintf_internal_r+0x1ca4>
   44328:	dc000e15 	stw	r16,56(sp)
   4432c:	07000404 	movi	fp,16
   44330:	3821883a 	mov	r16,r7
   44334:	00000406 	br	44348 <___vfprintf_internal_r+0x15bc>
   44338:	b5800204 	addi	r22,r22,8
   4433c:	ad7ffc04 	addi	r21,r21,-16
   44340:	a9000448 	cmpgei	r4,r21,17
   44344:	2001b826 	beq	r4,zero,44a28 <___vfprintf_internal_r+0x1c9c>
   44348:	10800044 	addi	r2,r2,1
   4434c:	18c00404 	addi	r3,r3,16
   44350:	b4000015 	stw	r16,0(r22)
   44354:	b7000115 	stw	fp,4(r22)
   44358:	d8c01c15 	stw	r3,112(sp)
   4435c:	d8801b15 	stw	r2,108(sp)
   44360:	11000208 	cmpgei	r4,r2,8
   44364:	203ff426 	beq	r4,zero,44338 <___vfprintf_internal_r+0x15ac>
   44368:	d9801a04 	addi	r6,sp,104
   4436c:	900b883a 	mov	r5,r18
   44370:	9809883a 	mov	r4,r19
   44374:	0048cf80 	call	48cf8 <__sprint_r>
   44378:	103b931e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   4437c:	d8c01c17 	ldw	r3,112(sp)
   44380:	d8801b17 	ldw	r2,108(sp)
   44384:	dd802704 	addi	r22,sp,156
   44388:	003fec06 	br	4433c <___vfprintf_internal_r+0x15b0>
   4438c:	dc402704 	addi	r17,sp,156
   44390:	a805883a 	mov	r2,r21
   44394:	dc000715 	stw	r16,28(sp)
   44398:	902b883a 	mov	r21,r18
   4439c:	8821883a 	mov	r16,r17
   443a0:	db000415 	stw	r12,16(sp)
   443a4:	a023883a 	mov	r17,r20
   443a8:	da000e15 	stw	r8,56(sp)
   443ac:	9829883a 	mov	r20,r19
   443b0:	1025883a 	mov	r18,r2
   443b4:	6827883a 	mov	r19,r13
   443b8:	8809883a 	mov	r4,r17
   443bc:	900b883a 	mov	r5,r18
   443c0:	01800284 	movi	r6,10
   443c4:	000f883a 	mov	r7,zero
   443c8:	004b4dc0 	call	4b4dc <__umoddi3>
   443cc:	10800c04 	addi	r2,r2,48
   443d0:	8809883a 	mov	r4,r17
   443d4:	900b883a 	mov	r5,r18
   443d8:	01800284 	movi	r6,10
   443dc:	000f883a 	mov	r7,zero
   443e0:	80bfffc5 	stb	r2,-1(r16)
   443e4:	004aebc0 	call	4aebc <__udivdi3>
   443e8:	900d883a 	mov	r6,r18
   443ec:	880f883a 	mov	r7,r17
   443f0:	843fffc4 	addi	r16,r16,-1
   443f4:	1023883a 	mov	r17,r2
   443f8:	1825883a 	mov	r18,r3
   443fc:	303fee1e 	bne	r6,zero,443b8 <___vfprintf_internal_r+0x162c>
   44400:	39c002a8 	cmpgeui	r7,r7,10
   44404:	383fec1e 	bne	r7,zero,443b8 <___vfprintf_internal_r+0x162c>
   44408:	8023883a 	mov	r17,r16
   4440c:	d8802704 	addi	r2,sp,156
   44410:	981b883a 	mov	r13,r19
   44414:	a825883a 	mov	r18,r21
   44418:	dc000717 	ldw	r16,28(sp)
   4441c:	da000e17 	ldw	r8,56(sp)
   44420:	a027883a 	mov	r19,r20
   44424:	146bc83a 	sub	r21,r2,r17
   44428:	003c6f06 	br	435e8 <___vfprintf_internal_r+0x85c>
   4442c:	d8800517 	ldw	r2,20(sp)
   44430:	18800015 	stw	r2,0(r3)
   44434:	003a8906 	br	42e5c <___vfprintf_internal_r+0xd0>
   44438:	d9801a04 	addi	r6,sp,104
   4443c:	900b883a 	mov	r5,r18
   44440:	9809883a 	mov	r4,r19
   44444:	0048cf80 	call	48cf8 <__sprint_r>
   44448:	103b5f1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   4444c:	d8c01c17 	ldw	r3,112(sp)
   44450:	dd401b17 	ldw	r21,108(sp)
   44454:	df002704 	addi	fp,sp,156
   44458:	003e2b06 	br	43d08 <___vfprintf_internal_r+0xf7c>
   4445c:	d9801a04 	addi	r6,sp,104
   44460:	900b883a 	mov	r5,r18
   44464:	9809883a 	mov	r4,r19
   44468:	0048cf80 	call	48cf8 <__sprint_r>
   4446c:	103b561e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44470:	d8c01c17 	ldw	r3,112(sp)
   44474:	dd401b17 	ldw	r21,108(sp)
   44478:	df002704 	addi	fp,sp,156
   4447c:	003e2d06 	br	43d34 <___vfprintf_internal_r+0xfa8>
   44480:	d9801a04 	addi	r6,sp,104
   44484:	900b883a 	mov	r5,r18
   44488:	9809883a 	mov	r4,r19
   4448c:	da001115 	stw	r8,68(sp)
   44490:	db400f15 	stw	r13,60(sp)
   44494:	db800e15 	stw	r14,56(sp)
   44498:	0048cf80 	call	48cf8 <__sprint_r>
   4449c:	103b4a1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   444a0:	d8c01c17 	ldw	r3,112(sp)
   444a4:	da001117 	ldw	r8,68(sp)
   444a8:	db400f17 	ldw	r13,60(sp)
   444ac:	db800e17 	ldw	r14,56(sp)
   444b0:	dd802704 	addi	r22,sp,156
   444b4:	003b0706 	br	430d4 <___vfprintf_internal_r+0x348>
   444b8:	d8801b17 	ldw	r2,108(sp)
   444bc:	01000174 	movhi	r4,5
   444c0:	2103e604 	addi	r4,r4,3992
   444c4:	10800044 	addi	r2,r2,1
   444c8:	18c00044 	addi	r3,r3,1
   444cc:	b1000015 	stw	r4,0(r22)
   444d0:	01000044 	movi	r4,1
   444d4:	d8801b15 	stw	r2,108(sp)
   444d8:	b1000115 	stw	r4,4(r22)
   444dc:	d8c01c15 	stw	r3,112(sp)
   444e0:	10800208 	cmpgei	r2,r2,8
   444e4:	1001641e 	bne	r2,zero,44a78 <___vfprintf_internal_r+0x1cec>
   444e8:	b5800204 	addi	r22,r22,8
   444ec:	2800bd1e 	bne	r5,zero,447e4 <___vfprintf_internal_r+0x1a58>
   444f0:	d8800417 	ldw	r2,16(sp)
   444f4:	d9000817 	ldw	r4,32(sp)
   444f8:	1080004c 	andi	r2,r2,1
   444fc:	1104b03a 	or	r2,r2,r4
   44500:	103b2026 	beq	r2,zero,43184 <___vfprintf_internal_r+0x3f8>
   44504:	d8800d17 	ldw	r2,52(sp)
   44508:	d9000b17 	ldw	r4,44(sp)
   4450c:	b0800015 	stw	r2,0(r22)
   44510:	d8801b17 	ldw	r2,108(sp)
   44514:	20c7883a 	add	r3,r4,r3
   44518:	b1000115 	stw	r4,4(r22)
   4451c:	10800044 	addi	r2,r2,1
   44520:	d8c01c15 	stw	r3,112(sp)
   44524:	d8801b15 	stw	r2,108(sp)
   44528:	11000208 	cmpgei	r4,r2,8
   4452c:	2001771e 	bne	r4,zero,44b0c <___vfprintf_internal_r+0x1d80>
   44530:	b5800204 	addi	r22,r22,8
   44534:	d9000817 	ldw	r4,32(sp)
   44538:	10800044 	addi	r2,r2,1
   4453c:	d8801b15 	stw	r2,108(sp)
   44540:	20c7883a 	add	r3,r4,r3
   44544:	b4400015 	stw	r17,0(r22)
   44548:	b1000115 	stw	r4,4(r22)
   4454c:	d8c01c15 	stw	r3,112(sp)
   44550:	10800208 	cmpgei	r2,r2,8
   44554:	103b0a26 	beq	r2,zero,43180 <___vfprintf_internal_r+0x3f4>
   44558:	003e1906 	br	43dc0 <___vfprintf_internal_r+0x1034>
   4455c:	8825883a 	mov	r18,r17
   44560:	003b1906 	br	431c8 <___vfprintf_internal_r+0x43c>
   44564:	d9000917 	ldw	r4,36(sp)
   44568:	d9400a17 	ldw	r5,40(sp)
   4456c:	da000615 	stw	r8,24(sp)
   44570:	200d883a 	mov	r6,r4
   44574:	280f883a 	mov	r7,r5
   44578:	db000415 	stw	r12,16(sp)
   4457c:	004e14c0 	call	4e14c <__unorddf2>
   44580:	db000417 	ldw	r12,16(sp)
   44584:	da000617 	ldw	r8,24(sp)
   44588:	1002061e 	bne	r2,zero,44da4 <___vfprintf_internal_r+0x2018>
   4458c:	057ff7c4 	movi	r21,-33
   44590:	40bfffe0 	cmpeqi	r2,r8,-1
   44594:	e56a703a 	and	r21,fp,r21
   44598:	1001b41e 	bne	r2,zero,44c6c <___vfprintf_internal_r+0x1ee0>
   4459c:	a88011d8 	cmpnei	r2,r21,71
   445a0:	10015726 	beq	r2,zero,44b00 <___vfprintf_internal_r+0x1d74>
   445a4:	60804014 	ori	r2,r12,256
   445a8:	d8800415 	stw	r2,16(sp)
   445ac:	d8800a17 	ldw	r2,40(sp)
   445b0:	10012d16 	blt	r2,zero,44a68 <___vfprintf_internal_r+0x1cdc>
   445b4:	dd000a17 	ldw	r20,40(sp)
   445b8:	d8000605 	stb	zero,24(sp)
   445bc:	e08019a0 	cmpeqi	r2,fp,102
   445c0:	d8800f15 	stw	r2,60(sp)
   445c4:	1000d21e 	bne	r2,zero,44910 <___vfprintf_internal_r+0x1b84>
   445c8:	e08011a0 	cmpeqi	r2,fp,70
   445cc:	1000d01e 	bne	r2,zero,44910 <___vfprintf_internal_r+0x1b84>
   445d0:	a8801158 	cmpnei	r2,r21,69
   445d4:	10016226 	beq	r2,zero,44b60 <___vfprintf_internal_r+0x1dd4>
   445d8:	d8801804 	addi	r2,sp,96
   445dc:	d8800315 	stw	r2,12(sp)
   445e0:	d9400917 	ldw	r5,36(sp)
   445e4:	d8801504 	addi	r2,sp,84
   445e8:	d8800215 	stw	r2,8(sp)
   445ec:	d8801404 	addi	r2,sp,80
   445f0:	da000015 	stw	r8,0(sp)
   445f4:	9809883a 	mov	r4,r19
   445f8:	d8800115 	stw	r2,4(sp)
   445fc:	01c00084 	movi	r7,2
   44600:	a00d883a 	mov	r6,r20
   44604:	db000815 	stw	r12,32(sp)
   44608:	da000715 	stw	r8,28(sp)
   4460c:	00453ac0 	call	453ac <_dtoa_r>
   44610:	da000717 	ldw	r8,28(sp)
   44614:	e10019d8 	cmpnei	r4,fp,103
   44618:	db000817 	ldw	r12,32(sp)
   4461c:	1023883a 	mov	r17,r2
   44620:	4007883a 	mov	r3,r8
   44624:	2001621e 	bne	r4,zero,44bb0 <___vfprintf_internal_r+0x1e24>
   44628:	6080004c 	andi	r2,r12,1
   4462c:	1001621e 	bne	r2,zero,44bb8 <___vfprintf_internal_r+0x1e2c>
   44630:	d8801417 	ldw	r2,80(sp)
   44634:	ad4011e0 	cmpeqi	r21,r21,71
   44638:	d8800715 	stw	r2,28(sp)
   4463c:	d8801817 	ldw	r2,96(sp)
   44640:	1445c83a 	sub	r2,r2,r17
   44644:	d8800815 	stw	r2,32(sp)
   44648:	a8000526 	beq	r21,zero,44660 <___vfprintf_internal_r+0x18d4>
   4464c:	d8c00717 	ldw	r3,28(sp)
   44650:	18bfff50 	cmplti	r2,r3,-3
   44654:	1000011e 	bne	r2,zero,4465c <___vfprintf_internal_r+0x18d0>
   44658:	40c1670e 	bge	r8,r3,44bf8 <___vfprintf_internal_r+0x1e6c>
   4465c:	e73fff84 	addi	fp,fp,-2
   44660:	d8800717 	ldw	r2,28(sp)
   44664:	df001645 	stb	fp,89(sp)
   44668:	157fffc4 	addi	r21,r2,-1
   4466c:	dd401415 	stw	r21,80(sp)
   44670:	a801d416 	blt	r21,zero,44dc4 <___vfprintf_internal_r+0x2038>
   44674:	00800ac4 	movi	r2,43
   44678:	d8801685 	stb	r2,90(sp)
   4467c:	a8800290 	cmplti	r2,r21,10
   44680:	1001c11e 	bne	r2,zero,44d88 <___vfprintf_internal_r+0x1ffc>
   44684:	d98019c4 	addi	r6,sp,103
   44688:	9029883a 	mov	r20,r18
   4468c:	dc400715 	stw	r17,28(sp)
   44690:	8025883a 	mov	r18,r16
   44694:	db000f15 	stw	r12,60(sp)
   44698:	3021883a 	mov	r16,r6
   4469c:	a809883a 	mov	r4,r21
   446a0:	01400284 	movi	r5,10
   446a4:	004bb200 	call	4bb20 <__modsi3>
   446a8:	10800c04 	addi	r2,r2,48
   446ac:	a809883a 	mov	r4,r21
   446b0:	80bfffc5 	stb	r2,-1(r16)
   446b4:	01400284 	movi	r5,10
   446b8:	004baa00 	call	4baa0 <__divsi3>
   446bc:	a9001908 	cmpgei	r4,r21,100
   446c0:	8023883a 	mov	r17,r16
   446c4:	102b883a 	mov	r21,r2
   446c8:	843fffc4 	addi	r16,r16,-1
   446cc:	203ff31e 	bne	r4,zero,4469c <___vfprintf_internal_r+0x1910>
   446d0:	800d883a 	mov	r6,r16
   446d4:	11000c04 	addi	r4,r2,48
   446d8:	9021883a 	mov	r16,r18
   446dc:	a025883a 	mov	r18,r20
   446e0:	8829883a 	mov	r20,r17
   446e4:	a0bfff84 	addi	r2,r20,-2
   446e8:	313fffc5 	stb	r4,-1(r6)
   446ec:	d8c019c4 	addi	r3,sp,103
   446f0:	db000f17 	ldw	r12,60(sp)
   446f4:	dc400717 	ldw	r17,28(sp)
   446f8:	10c1d62e 	bgeu	r2,r3,44e54 <___vfprintf_internal_r+0x20c8>
   446fc:	d8c016c4 	addi	r3,sp,91
   44700:	00000106 	br	44708 <___vfprintf_internal_r+0x197c>
   44704:	11000003 	ldbu	r4,0(r2)
   44708:	19000005 	stb	r4,0(r3)
   4470c:	10800044 	addi	r2,r2,1
   44710:	d90019c4 	addi	r4,sp,103
   44714:	18c00044 	addi	r3,r3,1
   44718:	113ffa1e 	bne	r2,r4,44704 <___vfprintf_internal_r+0x1978>
   4471c:	d8801a44 	addi	r2,sp,105
   44720:	d8c016c4 	addi	r3,sp,91
   44724:	1505c83a 	sub	r2,r2,r20
   44728:	1885883a 	add	r2,r3,r2
   4472c:	d8c01644 	addi	r3,sp,89
   44730:	10c5c83a 	sub	r2,r2,r3
   44734:	d8801015 	stw	r2,64(sp)
   44738:	d8c00817 	ldw	r3,32(sp)
   4473c:	d9001017 	ldw	r4,64(sp)
   44740:	18800088 	cmpgei	r2,r3,2
   44744:	192b883a 	add	r21,r3,r4
   44748:	1001aa26 	beq	r2,zero,44df4 <___vfprintf_internal_r+0x2068>
   4474c:	d8800b17 	ldw	r2,44(sp)
   44750:	a8ab883a 	add	r21,r21,r2
   44754:	a829883a 	mov	r20,r21
   44758:	a800010e 	bge	r21,zero,44760 <___vfprintf_internal_r+0x19d4>
   4475c:	0029883a 	mov	r20,zero
   44760:	d8000715 	stw	zero,28(sp)
   44764:	00009d06 	br	449dc <___vfprintf_internal_r+0x1c50>
   44768:	880f883a 	mov	r7,r17
   4476c:	10800044 	addi	r2,r2,1
   44770:	1d47883a 	add	r3,r3,r21
   44774:	b1c00015 	stw	r7,0(r22)
   44778:	003a7c06 	br	4316c <___vfprintf_internal_r+0x3e0>
   4477c:	d9801a04 	addi	r6,sp,104
   44780:	900b883a 	mov	r5,r18
   44784:	9809883a 	mov	r4,r19
   44788:	0048cf80 	call	48cf8 <__sprint_r>
   4478c:	103a8e1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44790:	d8c01c17 	ldw	r3,112(sp)
   44794:	dd802704 	addi	r22,sp,156
   44798:	003c9706 	br	439f8 <___vfprintf_internal_r+0xc6c>
   4479c:	d9801a04 	addi	r6,sp,104
   447a0:	900b883a 	mov	r5,r18
   447a4:	9809883a 	mov	r4,r19
   447a8:	da000e15 	stw	r8,56(sp)
   447ac:	0048cf80 	call	48cf8 <__sprint_r>
   447b0:	103a851e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   447b4:	d8c01c17 	ldw	r3,112(sp)
   447b8:	da000e17 	ldw	r8,56(sp)
   447bc:	dd802704 	addi	r22,sp,156
   447c0:	003a6106 	br	43148 <___vfprintf_internal_r+0x3bc>
   447c4:	8809883a 	mov	r4,r17
   447c8:	db000415 	stw	r12,16(sp)
   447cc:	d8c00615 	stw	r3,24(sp)
   447d0:	0042cf40 	call	42cf4 <strlen>
   447d4:	db000417 	ldw	r12,16(sp)
   447d8:	102b883a 	mov	r21,r2
   447dc:	1029883a 	mov	r20,r2
   447e0:	003a2f06 	br	430a0 <___vfprintf_internal_r+0x314>
   447e4:	d8800d17 	ldw	r2,52(sp)
   447e8:	d9000b17 	ldw	r4,44(sp)
   447ec:	b0800015 	stw	r2,0(r22)
   447f0:	d8801b17 	ldw	r2,108(sp)
   447f4:	20c7883a 	add	r3,r4,r3
   447f8:	b1000115 	stw	r4,4(r22)
   447fc:	10800044 	addi	r2,r2,1
   44800:	d8c01c15 	stw	r3,112(sp)
   44804:	d8801b15 	stw	r2,108(sp)
   44808:	11000208 	cmpgei	r4,r2,8
   4480c:	2000bf1e 	bne	r4,zero,44b0c <___vfprintf_internal_r+0x1d80>
   44810:	b5800204 	addi	r22,r22,8
   44814:	283f470e 	bge	r5,zero,44534 <___vfprintf_internal_r+0x17a8>
   44818:	01c00174 	movhi	r7,5
   4481c:	293ffc08 	cmpgei	r4,r5,-16
   44820:	39c3e704 	addi	r7,r7,3996
   44824:	0179c83a 	sub	fp,zero,r5
   44828:	20013f1e 	bne	r4,zero,44d28 <___vfprintf_internal_r+0x1f9c>
   4482c:	dc000715 	stw	r16,28(sp)
   44830:	05400404 	movi	r21,16
   44834:	9021883a 	mov	r16,r18
   44838:	3825883a 	mov	r18,r7
   4483c:	00000406 	br	44850 <___vfprintf_internal_r+0x1ac4>
   44840:	b5800204 	addi	r22,r22,8
   44844:	e73ffc04 	addi	fp,fp,-16
   44848:	e1800448 	cmpgei	r6,fp,17
   4484c:	30013326 	beq	r6,zero,44d1c <___vfprintf_internal_r+0x1f90>
   44850:	10800044 	addi	r2,r2,1
   44854:	18c00404 	addi	r3,r3,16
   44858:	b4800015 	stw	r18,0(r22)
   4485c:	b5400115 	stw	r21,4(r22)
   44860:	d8c01c15 	stw	r3,112(sp)
   44864:	d8801b15 	stw	r2,108(sp)
   44868:	11800208 	cmpgei	r6,r2,8
   4486c:	303ff426 	beq	r6,zero,44840 <___vfprintf_internal_r+0x1ab4>
   44870:	d9801a04 	addi	r6,sp,104
   44874:	800b883a 	mov	r5,r16
   44878:	9809883a 	mov	r4,r19
   4487c:	0048cf80 	call	48cf8 <__sprint_r>
   44880:	1001721e 	bne	r2,zero,44e4c <___vfprintf_internal_r+0x20c0>
   44884:	d8c01c17 	ldw	r3,112(sp)
   44888:	d8801b17 	ldw	r2,108(sp)
   4488c:	dd802704 	addi	r22,sp,156
   44890:	003fec06 	br	44844 <___vfprintf_internal_r+0x1ab8>
   44894:	800f883a 	mov	r7,r16
   44898:	dc000717 	ldw	r16,28(sp)
   4489c:	8817883a 	mov	r11,r17
   448a0:	aa000044 	addi	r8,r21,1
   448a4:	e0800204 	addi	r2,fp,8
   448a8:	1ac7883a 	add	r3,r3,r11
   448ac:	e1c00015 	stw	r7,0(fp)
   448b0:	e2c00115 	stw	r11,4(fp)
   448b4:	d8c01c15 	stw	r3,112(sp)
   448b8:	da001b15 	stw	r8,108(sp)
   448bc:	41000208 	cmpgei	r4,r8,8
   448c0:	203e701e 	bne	r4,zero,44284 <___vfprintf_internal_r+0x14f8>
   448c4:	42000044 	addi	r8,r8,1
   448c8:	15800204 	addi	r22,r2,8
   448cc:	1039883a 	mov	fp,r2
   448d0:	003d3206 	br	43d9c <___vfprintf_internal_r+0x1010>
   448d4:	d8800617 	ldw	r2,24(sp)
   448d8:	d8c00615 	stw	r3,24(sp)
   448dc:	15000017 	ldw	r20,0(r2)
   448e0:	a02bd7fa 	srai	r21,r20,31
   448e4:	a805883a 	mov	r2,r21
   448e8:	003b2d06 	br	435a0 <___vfprintf_internal_r+0x814>
   448ec:	d8800617 	ldw	r2,24(sp)
   448f0:	002b883a 	mov	r21,zero
   448f4:	d8c00615 	stw	r3,24(sp)
   448f8:	15000017 	ldw	r20,0(r2)
   448fc:	0005883a 	mov	r2,zero
   44900:	003a6e06 	br	432bc <___vfprintf_internal_r+0x530>
   44904:	04400174 	movhi	r17,5
   44908:	8c43d604 	addi	r17,r17,3928
   4490c:	003ac606 	br	43428 <___vfprintf_internal_r+0x69c>
   44910:	d8801804 	addi	r2,sp,96
   44914:	d8800315 	stw	r2,12(sp)
   44918:	d9400917 	ldw	r5,36(sp)
   4491c:	d8801504 	addi	r2,sp,84
   44920:	d8800215 	stw	r2,8(sp)
   44924:	d8801404 	addi	r2,sp,80
   44928:	da000015 	stw	r8,0(sp)
   4492c:	d8800115 	stw	r2,4(sp)
   44930:	01c000c4 	movi	r7,3
   44934:	a00d883a 	mov	r6,r20
   44938:	9809883a 	mov	r4,r19
   4493c:	db000815 	stw	r12,32(sp)
   44940:	da000715 	stw	r8,28(sp)
   44944:	00453ac0 	call	453ac <_dtoa_r>
   44948:	da000717 	ldw	r8,28(sp)
   4494c:	1023883a 	mov	r17,r2
   44950:	db000817 	ldw	r12,32(sp)
   44954:	1207883a 	add	r3,r2,r8
   44958:	88800007 	ldb	r2,0(r17)
   4495c:	10800c20 	cmpeqi	r2,r2,48
   44960:	1000571e 	bne	r2,zero,44ac0 <___vfprintf_internal_r+0x1d34>
   44964:	d8801417 	ldw	r2,80(sp)
   44968:	1893883a 	add	r9,r3,r2
   4496c:	d9000917 	ldw	r4,36(sp)
   44970:	000d883a 	mov	r6,zero
   44974:	000f883a 	mov	r7,zero
   44978:	a00b883a 	mov	r5,r20
   4497c:	da401115 	stw	r9,68(sp)
   44980:	da000815 	stw	r8,32(sp)
   44984:	db000715 	stw	r12,28(sp)
   44988:	004ce9c0 	call	4ce9c <__eqdf2>
   4498c:	db000717 	ldw	r12,28(sp)
   44990:	da000817 	ldw	r8,32(sp)
   44994:	da401117 	ldw	r9,68(sp)
   44998:	1000891e 	bne	r2,zero,44bc0 <___vfprintf_internal_r+0x1e34>
   4499c:	4805883a 	mov	r2,r9
   449a0:	d8c01417 	ldw	r3,80(sp)
   449a4:	1445c83a 	sub	r2,r2,r17
   449a8:	ad4011d8 	cmpnei	r21,r21,71
   449ac:	d8c00715 	stw	r3,28(sp)
   449b0:	d8800815 	stw	r2,32(sp)
   449b4:	a83f2526 	beq	r21,zero,4464c <___vfprintf_internal_r+0x18c0>
   449b8:	d8800f17 	ldw	r2,60(sp)
   449bc:	103f2826 	beq	r2,zero,44660 <___vfprintf_internal_r+0x18d4>
   449c0:	d8c00717 	ldw	r3,28(sp)
   449c4:	6080004c 	andi	r2,r12,1
   449c8:	1204b03a 	or	r2,r2,r8
   449cc:	00c1140e 	bge	zero,r3,44e20 <___vfprintf_internal_r+0x2094>
   449d0:	1001011e 	bne	r2,zero,44dd8 <___vfprintf_internal_r+0x204c>
   449d4:	dd400717 	ldw	r21,28(sp)
   449d8:	a829883a 	mov	r20,r21
   449dc:	d8800607 	ldb	r2,24(sp)
   449e0:	10008026 	beq	r2,zero,44be4 <___vfprintf_internal_r+0x1e58>
   449e4:	00800b44 	movi	r2,45
   449e8:	d8801345 	stb	r2,77(sp)
   449ec:	d8800e17 	ldw	r2,56(sp)
   449f0:	0011883a 	mov	r8,zero
   449f4:	d8800615 	stw	r2,24(sp)
   449f8:	003b0306 	br	43608 <___vfprintf_internal_r+0x87c>
   449fc:	d8800617 	ldw	r2,24(sp)
   44a00:	002b883a 	mov	r21,zero
   44a04:	d8c00615 	stw	r3,24(sp)
   44a08:	15000017 	ldw	r20,0(r2)
   44a0c:	00800044 	movi	r2,1
   44a10:	003a2a06 	br	432bc <___vfprintf_internal_r+0x530>
   44a14:	d8800617 	ldw	r2,24(sp)
   44a18:	002b883a 	mov	r21,zero
   44a1c:	d8c00615 	stw	r3,24(sp)
   44a20:	15000017 	ldw	r20,0(r2)
   44a24:	003b1306 	br	43674 <___vfprintf_internal_r+0x8e8>
   44a28:	800f883a 	mov	r7,r16
   44a2c:	dc000e17 	ldw	r16,56(sp)
   44a30:	10800044 	addi	r2,r2,1
   44a34:	1d47883a 	add	r3,r3,r21
   44a38:	d8801b15 	stw	r2,108(sp)
   44a3c:	b1c00015 	stw	r7,0(r22)
   44a40:	b5400115 	stw	r21,4(r22)
   44a44:	d8c01c15 	stw	r3,112(sp)
   44a48:	10800208 	cmpgei	r2,r2,8
   44a4c:	10003a1e 	bne	r2,zero,44b38 <___vfprintf_internal_r+0x1dac>
   44a50:	b5800204 	addi	r22,r22,8
   44a54:	003d5406 	br	43fa8 <___vfprintf_internal_r+0x121c>
   44a58:	00800b44 	movi	r2,45
   44a5c:	d8801345 	stb	r2,77(sp)
   44a60:	03400b44 	movi	r13,45
   44a64:	003a6c06 	br	43418 <___vfprintf_internal_r+0x68c>
   44a68:	1520003c 	xorhi	r20,r2,32768
   44a6c:	00800b44 	movi	r2,45
   44a70:	d8800605 	stb	r2,24(sp)
   44a74:	003ed106 	br	445bc <___vfprintf_internal_r+0x1830>
   44a78:	d9801a04 	addi	r6,sp,104
   44a7c:	900b883a 	mov	r5,r18
   44a80:	9809883a 	mov	r4,r19
   44a84:	0048cf80 	call	48cf8 <__sprint_r>
   44a88:	1039cf1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44a8c:	d9401417 	ldw	r5,80(sp)
   44a90:	d8c01c17 	ldw	r3,112(sp)
   44a94:	dd802704 	addi	r22,sp,156
   44a98:	003e9406 	br	444ec <___vfprintf_internal_r+0x1760>
   44a9c:	05400184 	movi	r21,6
   44aa0:	003e1706 	br	44300 <___vfprintf_internal_r+0x1574>
   44aa4:	d9401345 	stb	r5,77(sp)
   44aa8:	00397706 	br	43088 <___vfprintf_internal_r+0x2fc>
   44aac:	d9801a04 	addi	r6,sp,104
   44ab0:	900b883a 	mov	r5,r18
   44ab4:	9809883a 	mov	r4,r19
   44ab8:	0048cf80 	call	48cf8 <__sprint_r>
   44abc:	0039c206 	br	431c8 <___vfprintf_internal_r+0x43c>
   44ac0:	d9000917 	ldw	r4,36(sp)
   44ac4:	000d883a 	mov	r6,zero
   44ac8:	000f883a 	mov	r7,zero
   44acc:	a00b883a 	mov	r5,r20
   44ad0:	d8c01115 	stw	r3,68(sp)
   44ad4:	da000815 	stw	r8,32(sp)
   44ad8:	db000715 	stw	r12,28(sp)
   44adc:	004ce9c0 	call	4ce9c <__eqdf2>
   44ae0:	db000717 	ldw	r12,28(sp)
   44ae4:	da000817 	ldw	r8,32(sp)
   44ae8:	d8c01117 	ldw	r3,68(sp)
   44aec:	103f9d26 	beq	r2,zero,44964 <___vfprintf_internal_r+0x1bd8>
   44af0:	00800044 	movi	r2,1
   44af4:	1205c83a 	sub	r2,r2,r8
   44af8:	d8801415 	stw	r2,80(sp)
   44afc:	003f9a06 	br	44968 <___vfprintf_internal_r+0x1bdc>
   44b00:	403ea81e 	bne	r8,zero,445a4 <___vfprintf_internal_r+0x1818>
   44b04:	02000044 	movi	r8,1
   44b08:	003ea606 	br	445a4 <___vfprintf_internal_r+0x1818>
   44b0c:	d9801a04 	addi	r6,sp,104
   44b10:	900b883a 	mov	r5,r18
   44b14:	9809883a 	mov	r4,r19
   44b18:	0048cf80 	call	48cf8 <__sprint_r>
   44b1c:	1039aa1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44b20:	d9401417 	ldw	r5,80(sp)
   44b24:	d8c01c17 	ldw	r3,112(sp)
   44b28:	d8801b17 	ldw	r2,108(sp)
   44b2c:	dd802704 	addi	r22,sp,156
   44b30:	283e800e 	bge	r5,zero,44534 <___vfprintf_internal_r+0x17a8>
   44b34:	003f3806 	br	44818 <___vfprintf_internal_r+0x1a8c>
   44b38:	d9801a04 	addi	r6,sp,104
   44b3c:	900b883a 	mov	r5,r18
   44b40:	9809883a 	mov	r4,r19
   44b44:	0048cf80 	call	48cf8 <__sprint_r>
   44b48:	10399f1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44b4c:	d8c01c17 	ldw	r3,112(sp)
   44b50:	dd802704 	addi	r22,sp,156
   44b54:	003d1406 	br	43fa8 <___vfprintf_internal_r+0x121c>
   44b58:	db000417 	ldw	r12,16(sp)
   44b5c:	003a9d06 	br	435d4 <___vfprintf_internal_r+0x848>
   44b60:	d8801804 	addi	r2,sp,96
   44b64:	d8800315 	stw	r2,12(sp)
   44b68:	d9400917 	ldw	r5,36(sp)
   44b6c:	d8801504 	addi	r2,sp,84
   44b70:	40c00044 	addi	r3,r8,1
   44b74:	d8800215 	stw	r2,8(sp)
   44b78:	d8801404 	addi	r2,sp,80
   44b7c:	d8c00015 	stw	r3,0(sp)
   44b80:	d8800115 	stw	r2,4(sp)
   44b84:	01c00084 	movi	r7,2
   44b88:	a00d883a 	mov	r6,r20
   44b8c:	9809883a 	mov	r4,r19
   44b90:	db001115 	stw	r12,68(sp)
   44b94:	da000815 	stw	r8,32(sp)
   44b98:	d8c00715 	stw	r3,28(sp)
   44b9c:	00453ac0 	call	453ac <_dtoa_r>
   44ba0:	d8c00717 	ldw	r3,28(sp)
   44ba4:	da000817 	ldw	r8,32(sp)
   44ba8:	db001117 	ldw	r12,68(sp)
   44bac:	1023883a 	mov	r17,r2
   44bb0:	e08011d8 	cmpnei	r2,fp,71
   44bb4:	103e9c26 	beq	r2,zero,44628 <___vfprintf_internal_r+0x189c>
   44bb8:	88d3883a 	add	r9,r17,r3
   44bbc:	003f6b06 	br	4496c <___vfprintf_internal_r+0x1be0>
   44bc0:	d8801817 	ldw	r2,96(sp)
   44bc4:	127f762e 	bgeu	r2,r9,449a0 <___vfprintf_internal_r+0x1c14>
   44bc8:	01000c04 	movi	r4,48
   44bcc:	10c00044 	addi	r3,r2,1
   44bd0:	d8c01815 	stw	r3,96(sp)
   44bd4:	11000005 	stb	r4,0(r2)
   44bd8:	d8801817 	ldw	r2,96(sp)
   44bdc:	127ffb36 	bltu	r2,r9,44bcc <___vfprintf_internal_r+0x1e40>
   44be0:	003f6f06 	br	449a0 <___vfprintf_internal_r+0x1c14>
   44be4:	d8800e17 	ldw	r2,56(sp)
   44be8:	db401343 	ldbu	r13,77(sp)
   44bec:	0011883a 	mov	r8,zero
   44bf0:	d8800615 	stw	r2,24(sp)
   44bf4:	003a8006 	br	435f8 <___vfprintf_internal_r+0x86c>
   44bf8:	d8800717 	ldw	r2,28(sp)
   44bfc:	d8c00817 	ldw	r3,32(sp)
   44c00:	10c02b16 	blt	r2,r3,44cb0 <___vfprintf_internal_r+0x1f24>
   44c04:	6300004c 	andi	r12,r12,1
   44c08:	6000581e 	bne	r12,zero,44d6c <___vfprintf_internal_r+0x1fe0>
   44c0c:	1029883a 	mov	r20,r2
   44c10:	1000010e 	bge	r2,zero,44c18 <___vfprintf_internal_r+0x1e8c>
   44c14:	0029883a 	mov	r20,zero
   44c18:	dd400717 	ldw	r21,28(sp)
   44c1c:	070019c4 	movi	fp,103
   44c20:	003f6e06 	br	449dc <___vfprintf_internal_r+0x1c50>
   44c24:	d9801a04 	addi	r6,sp,104
   44c28:	900b883a 	mov	r5,r18
   44c2c:	9809883a 	mov	r4,r19
   44c30:	0048cf80 	call	48cf8 <__sprint_r>
   44c34:	1039641e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44c38:	dd401417 	ldw	r21,80(sp)
   44c3c:	d8c01c17 	ldw	r3,112(sp)
   44c40:	dd802704 	addi	r22,sp,156
   44c44:	003ce706 	br	43fe4 <___vfprintf_internal_r+0x1258>
   44c48:	d9801a04 	addi	r6,sp,104
   44c4c:	900b883a 	mov	r5,r18
   44c50:	9809883a 	mov	r4,r19
   44c54:	0048cf80 	call	48cf8 <__sprint_r>
   44c58:	10395b1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44c5c:	d8c01c17 	ldw	r3,112(sp)
   44c60:	dd802704 	addi	r22,sp,156
   44c64:	a83ccd0e 	bge	r21,zero,43f9c <___vfprintf_internal_r+0x1210>
   44c68:	003d9106 	br	442b0 <___vfprintf_internal_r+0x1524>
   44c6c:	02000184 	movi	r8,6
   44c70:	003e4c06 	br	445a4 <___vfprintf_internal_r+0x1818>
   44c74:	d9801a04 	addi	r6,sp,104
   44c78:	900b883a 	mov	r5,r18
   44c7c:	9809883a 	mov	r4,r19
   44c80:	0048cf80 	call	48cf8 <__sprint_r>
   44c84:	1039501e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44c88:	d8801417 	ldw	r2,80(sp)
   44c8c:	d9000817 	ldw	r4,32(sp)
   44c90:	d8c01c17 	ldw	r3,112(sp)
   44c94:	dd802704 	addi	r22,sp,156
   44c98:	2085c83a 	sub	r2,r4,r2
   44c9c:	003ce506 	br	44034 <___vfprintf_internal_r+0x12a8>
   44ca0:	4029883a 	mov	r20,r8
   44ca4:	d8c00615 	stw	r3,24(sp)
   44ca8:	402b883a 	mov	r21,r8
   44cac:	0038fc06 	br	430a0 <___vfprintf_internal_r+0x314>
   44cb0:	d8800817 	ldw	r2,32(sp)
   44cb4:	d8c00b17 	ldw	r3,44(sp)
   44cb8:	10eb883a 	add	r21,r2,r3
   44cbc:	d8800717 	ldw	r2,28(sp)
   44cc0:	00800316 	blt	zero,r2,44cd0 <___vfprintf_internal_r+0x1f44>
   44cc4:	d8800717 	ldw	r2,28(sp)
   44cc8:	a8abc83a 	sub	r21,r21,r2
   44ccc:	ad400044 	addi	r21,r21,1
   44cd0:	a829883a 	mov	r20,r21
   44cd4:	a8002a16 	blt	r21,zero,44d80 <___vfprintf_internal_r+0x1ff4>
   44cd8:	070019c4 	movi	fp,103
   44cdc:	003f3f06 	br	449dc <___vfprintf_internal_r+0x1c50>
   44ce0:	d9401345 	stb	r5,77(sp)
   44ce4:	003ae006 	br	43868 <___vfprintf_internal_r+0xadc>
   44ce8:	d9401345 	stb	r5,77(sp)
   44cec:	003a5706 	br	4364c <___vfprintf_internal_r+0x8c0>
   44cf0:	d9401345 	stb	r5,77(sp)
   44cf4:	003b1706 	br	43954 <___vfprintf_internal_r+0xbc8>
   44cf8:	d9401345 	stb	r5,77(sp)
   44cfc:	003a2006 	br	43580 <___vfprintf_internal_r+0x7f4>
   44d00:	d9401345 	stb	r5,77(sp)
   44d04:	003a6606 	br	436a0 <___vfprintf_internal_r+0x914>
   44d08:	d9401345 	stb	r5,77(sp)
   44d0c:	00399706 	br	4336c <___vfprintf_internal_r+0x5e0>
   44d10:	00bfffc4 	movi	r2,-1
   44d14:	d8800515 	stw	r2,20(sp)
   44d18:	00392e06 	br	431d4 <___vfprintf_internal_r+0x448>
   44d1c:	900f883a 	mov	r7,r18
   44d20:	8025883a 	mov	r18,r16
   44d24:	dc000717 	ldw	r16,28(sp)
   44d28:	10800044 	addi	r2,r2,1
   44d2c:	1f07883a 	add	r3,r3,fp
   44d30:	b1c00015 	stw	r7,0(r22)
   44d34:	b7000115 	stw	fp,4(r22)
   44d38:	d8c01c15 	stw	r3,112(sp)
   44d3c:	d8801b15 	stw	r2,108(sp)
   44d40:	11000208 	cmpgei	r4,r2,8
   44d44:	203dfa26 	beq	r4,zero,44530 <___vfprintf_internal_r+0x17a4>
   44d48:	d9801a04 	addi	r6,sp,104
   44d4c:	900b883a 	mov	r5,r18
   44d50:	9809883a 	mov	r4,r19
   44d54:	0048cf80 	call	48cf8 <__sprint_r>
   44d58:	10391b1e 	bne	r2,zero,431c8 <___vfprintf_internal_r+0x43c>
   44d5c:	d8c01c17 	ldw	r3,112(sp)
   44d60:	d8801b17 	ldw	r2,108(sp)
   44d64:	dd802704 	addi	r22,sp,156
   44d68:	003df206 	br	44534 <___vfprintf_internal_r+0x17a8>
   44d6c:	d8800717 	ldw	r2,28(sp)
   44d70:	d8c00b17 	ldw	r3,44(sp)
   44d74:	10eb883a 	add	r21,r2,r3
   44d78:	a829883a 	mov	r20,r21
   44d7c:	a83fd60e 	bge	r21,zero,44cd8 <___vfprintf_internal_r+0x1f4c>
   44d80:	0029883a 	mov	r20,zero
   44d84:	003fd406 	br	44cd8 <___vfprintf_internal_r+0x1f4c>
   44d88:	00800c04 	movi	r2,48
   44d8c:	ad400c04 	addi	r21,r21,48
   44d90:	d88016c5 	stb	r2,91(sp)
   44d94:	00800104 	movi	r2,4
   44d98:	dd401705 	stb	r21,92(sp)
   44d9c:	d8801015 	stw	r2,64(sp)
   44da0:	003e6506 	br	44738 <___vfprintf_internal_r+0x19ac>
   44da4:	d8800a17 	ldw	r2,40(sp)
   44da8:	10001916 	blt	r2,zero,44e10 <___vfprintf_internal_r+0x2084>
   44dac:	db401343 	ldbu	r13,77(sp)
   44db0:	e0801210 	cmplti	r2,fp,72
   44db4:	1000131e 	bne	r2,zero,44e04 <___vfprintf_internal_r+0x2078>
   44db8:	04400174 	movhi	r17,5
   44dbc:	8c43d904 	addi	r17,r17,3940
   44dc0:	00399906 	br	43428 <___vfprintf_internal_r+0x69c>
   44dc4:	05400044 	movi	r21,1
   44dc8:	a8abc83a 	sub	r21,r21,r2
   44dcc:	00800b44 	movi	r2,45
   44dd0:	d8801685 	stb	r2,90(sp)
   44dd4:	003e2906 	br	4467c <___vfprintf_internal_r+0x18f0>
   44dd8:	d8800b17 	ldw	r2,44(sp)
   44ddc:	18ab883a 	add	r21,r3,r2
   44de0:	aa2b883a 	add	r21,r21,r8
   44de4:	a829883a 	mov	r20,r21
   44de8:	a83efc0e 	bge	r21,zero,449dc <___vfprintf_internal_r+0x1c50>
   44dec:	0029883a 	mov	r20,zero
   44df0:	003efa06 	br	449dc <___vfprintf_internal_r+0x1c50>
   44df4:	6080004c 	andi	r2,r12,1
   44df8:	d8800715 	stw	r2,28(sp)
   44dfc:	103e531e 	bne	r2,zero,4474c <___vfprintf_internal_r+0x19c0>
   44e00:	003ff806 	br	44de4 <___vfprintf_internal_r+0x2058>
   44e04:	04400174 	movhi	r17,5
   44e08:	8c43d804 	addi	r17,r17,3936
   44e0c:	00398606 	br	43428 <___vfprintf_internal_r+0x69c>
   44e10:	00800b44 	movi	r2,45
   44e14:	d8801345 	stb	r2,77(sp)
   44e18:	03400b44 	movi	r13,45
   44e1c:	003fe406 	br	44db0 <___vfprintf_internal_r+0x2024>
   44e20:	1000031e 	bne	r2,zero,44e30 <___vfprintf_internal_r+0x20a4>
   44e24:	05000044 	movi	r20,1
   44e28:	05400044 	movi	r21,1
   44e2c:	003eeb06 	br	449dc <___vfprintf_internal_r+0x1c50>
   44e30:	d8800b17 	ldw	r2,44(sp)
   44e34:	15400044 	addi	r21,r2,1
   44e38:	aa2b883a 	add	r21,r21,r8
   44e3c:	003fe906 	br	44de4 <___vfprintf_internal_r+0x2058>
   44e40:	b005883a 	mov	r2,r22
   44e44:	39c3e704 	addi	r7,r7,3996
   44e48:	003e9706 	br	448a8 <___vfprintf_internal_r+0x1b1c>
   44e4c:	8025883a 	mov	r18,r16
   44e50:	0038dd06 	br	431c8 <___vfprintf_internal_r+0x43c>
   44e54:	00800084 	movi	r2,2
   44e58:	d8801015 	stw	r2,64(sp)
   44e5c:	003e3606 	br	44738 <___vfprintf_internal_r+0x19ac>
   44e60:	d8c00617 	ldw	r3,24(sp)
   44e64:	1a000017 	ldw	r8,0(r3)
   44e68:	18c00104 	addi	r3,r3,4
   44e6c:	4000010e 	bge	r8,zero,44e74 <___vfprintf_internal_r+0x20e8>
   44e70:	023fffc4 	movi	r8,-1
   44e74:	bf000043 	ldbu	fp,1(r23)
   44e78:	d8c00615 	stw	r3,24(sp)
   44e7c:	102f883a 	mov	r23,r2
   44e80:	e2c03fcc 	andi	r11,fp,255
   44e84:	5ac0201c 	xori	r11,r11,128
   44e88:	5affe004 	addi	r11,r11,-128
   44e8c:	00380b06 	br	42ebc <___vfprintf_internal_r+0x130>

00044e90 <__vfprintf_internal>:
   44e90:	00c00174 	movhi	r3,5
   44e94:	2005883a 	mov	r2,r4
   44e98:	190c6317 	ldw	r4,12684(r3)
   44e9c:	300f883a 	mov	r7,r6
   44ea0:	280d883a 	mov	r6,r5
   44ea4:	100b883a 	mov	r5,r2
   44ea8:	0042d8c1 	jmpi	42d8c <___vfprintf_internal_r>

00044eac <__sbprintf>:
   44eac:	2880030b 	ldhu	r2,12(r5)
   44eb0:	2b001917 	ldw	r12,100(r5)
   44eb4:	2ac0038b 	ldhu	r11,14(r5)
   44eb8:	2a800717 	ldw	r10,28(r5)
   44ebc:	2a400917 	ldw	r9,36(r5)
   44ec0:	defee204 	addi	sp,sp,-1144
   44ec4:	da001a04 	addi	r8,sp,104
   44ec8:	00c10004 	movi	r3,1024
   44ecc:	dc011a15 	stw	r16,1128(sp)
   44ed0:	10bfff4c 	andi	r2,r2,65533
   44ed4:	2821883a 	mov	r16,r5
   44ed8:	d80b883a 	mov	r5,sp
   44edc:	dc811c15 	stw	r18,1136(sp)
   44ee0:	dc411b15 	stw	r17,1132(sp)
   44ee4:	dfc11d15 	stw	ra,1140(sp)
   44ee8:	2025883a 	mov	r18,r4
   44eec:	d880030d 	sth	r2,12(sp)
   44ef0:	db001915 	stw	r12,100(sp)
   44ef4:	dac0038d 	sth	r11,14(sp)
   44ef8:	da800715 	stw	r10,28(sp)
   44efc:	da400915 	stw	r9,36(sp)
   44f00:	da000015 	stw	r8,0(sp)
   44f04:	da000415 	stw	r8,16(sp)
   44f08:	d8c00215 	stw	r3,8(sp)
   44f0c:	d8c00515 	stw	r3,20(sp)
   44f10:	d8000615 	stw	zero,24(sp)
   44f14:	0042d8c0 	call	42d8c <___vfprintf_internal_r>
   44f18:	1023883a 	mov	r17,r2
   44f1c:	10000d0e 	bge	r2,zero,44f54 <__sbprintf+0xa8>
   44f20:	d880030b 	ldhu	r2,12(sp)
   44f24:	1080100c 	andi	r2,r2,64
   44f28:	10000326 	beq	r2,zero,44f38 <__sbprintf+0x8c>
   44f2c:	8080030b 	ldhu	r2,12(r16)
   44f30:	10801014 	ori	r2,r2,64
   44f34:	8080030d 	sth	r2,12(r16)
   44f38:	8805883a 	mov	r2,r17
   44f3c:	dfc11d17 	ldw	ra,1140(sp)
   44f40:	dc811c17 	ldw	r18,1136(sp)
   44f44:	dc411b17 	ldw	r17,1132(sp)
   44f48:	dc011a17 	ldw	r16,1128(sp)
   44f4c:	dec11e04 	addi	sp,sp,1144
   44f50:	f800283a 	ret
   44f54:	d80b883a 	mov	r5,sp
   44f58:	9009883a 	mov	r4,r18
   44f5c:	004087c0 	call	4087c <_fflush_r>
   44f60:	103fef26 	beq	r2,zero,44f20 <__sbprintf+0x74>
   44f64:	047fffc4 	movi	r17,-1
   44f68:	003fed06 	br	44f20 <__sbprintf+0x74>

00044f6c <_write_r>:
   44f6c:	2807883a 	mov	r3,r5
   44f70:	defffe04 	addi	sp,sp,-8
   44f74:	dc000015 	stw	r16,0(sp)
   44f78:	300b883a 	mov	r5,r6
   44f7c:	00800174 	movhi	r2,5
   44f80:	380d883a 	mov	r6,r7
   44f84:	2021883a 	mov	r16,r4
   44f88:	1809883a 	mov	r4,r3
   44f8c:	dfc00115 	stw	ra,4(sp)
   44f90:	10137115 	stw	zero,19908(r2)
   44f94:	004f0900 	call	4f090 <write>
   44f98:	10ffffd8 	cmpnei	r3,r2,-1
   44f9c:	18000426 	beq	r3,zero,44fb0 <_write_r+0x44>
   44fa0:	dfc00117 	ldw	ra,4(sp)
   44fa4:	dc000017 	ldw	r16,0(sp)
   44fa8:	dec00204 	addi	sp,sp,8
   44fac:	f800283a 	ret
   44fb0:	00c00174 	movhi	r3,5
   44fb4:	18d37117 	ldw	r3,19908(r3)
   44fb8:	183ff926 	beq	r3,zero,44fa0 <_write_r+0x34>
   44fbc:	80c00015 	stw	r3,0(r16)
   44fc0:	dfc00117 	ldw	ra,4(sp)
   44fc4:	dc000017 	ldw	r16,0(sp)
   44fc8:	dec00204 	addi	sp,sp,8
   44fcc:	f800283a 	ret

00044fd0 <__swsetup_r>:
   44fd0:	00800174 	movhi	r2,5
   44fd4:	108c6317 	ldw	r2,12684(r2)
   44fd8:	defffd04 	addi	sp,sp,-12
   44fdc:	dc400115 	stw	r17,4(sp)
   44fe0:	dc000015 	stw	r16,0(sp)
   44fe4:	dfc00215 	stw	ra,8(sp)
   44fe8:	2023883a 	mov	r17,r4
   44fec:	2821883a 	mov	r16,r5
   44ff0:	10000226 	beq	r2,zero,44ffc <__swsetup_r+0x2c>
   44ff4:	10c00e17 	ldw	r3,56(r2)
   44ff8:	18001f26 	beq	r3,zero,45078 <__swsetup_r+0xa8>
   44ffc:	8180030b 	ldhu	r6,12(r16)
   45000:	30c0020c 	andi	r3,r6,8
   45004:	3005883a 	mov	r2,r6
   45008:	18002126 	beq	r3,zero,45090 <__swsetup_r+0xc0>
   4500c:	80c00417 	ldw	r3,16(r16)
   45010:	18002826 	beq	r3,zero,450b4 <__swsetup_r+0xe4>
   45014:	1100004c 	andi	r4,r2,1
   45018:	20000b1e 	bne	r4,zero,45048 <__swsetup_r+0x78>
   4501c:	1100008c 	andi	r4,r2,2
   45020:	20002e1e 	bne	r4,zero,450dc <__swsetup_r+0x10c>
   45024:	81000517 	ldw	r4,20(r16)
   45028:	81000215 	stw	r4,8(r16)
   4502c:	18000b26 	beq	r3,zero,4505c <__swsetup_r+0x8c>
   45030:	0005883a 	mov	r2,zero
   45034:	dfc00217 	ldw	ra,8(sp)
   45038:	dc400117 	ldw	r17,4(sp)
   4503c:	dc000017 	ldw	r16,0(sp)
   45040:	dec00304 	addi	sp,sp,12
   45044:	f800283a 	ret
   45048:	81000517 	ldw	r4,20(r16)
   4504c:	80000215 	stw	zero,8(r16)
   45050:	0109c83a 	sub	r4,zero,r4
   45054:	81000615 	stw	r4,24(r16)
   45058:	183ff51e 	bne	r3,zero,45030 <__swsetup_r+0x60>
   4505c:	10c0200c 	andi	r3,r2,128
   45060:	0005883a 	mov	r2,zero
   45064:	183ff326 	beq	r3,zero,45034 <__swsetup_r+0x64>
   45068:	31801014 	ori	r6,r6,64
   4506c:	8180030d 	sth	r6,12(r16)
   45070:	00bfffc4 	movi	r2,-1
   45074:	003fef06 	br	45034 <__swsetup_r+0x64>
   45078:	1009883a 	mov	r4,r2
   4507c:	0040cc40 	call	40cc4 <__sinit>
   45080:	8180030b 	ldhu	r6,12(r16)
   45084:	30c0020c 	andi	r3,r6,8
   45088:	3005883a 	mov	r2,r6
   4508c:	183fdf1e 	bne	r3,zero,4500c <__swsetup_r+0x3c>
   45090:	3080040c 	andi	r2,r6,16
   45094:	10002126 	beq	r2,zero,4511c <__swsetup_r+0x14c>
   45098:	3080010c 	andi	r2,r6,4
   4509c:	1000111e 	bne	r2,zero,450e4 <__swsetup_r+0x114>
   450a0:	80c00417 	ldw	r3,16(r16)
   450a4:	30800214 	ori	r2,r6,8
   450a8:	8080030d 	sth	r2,12(r16)
   450ac:	100d883a 	mov	r6,r2
   450b0:	183fd81e 	bne	r3,zero,45014 <__swsetup_r+0x44>
   450b4:	1100a00c 	andi	r4,r2,640
   450b8:	21008020 	cmpeqi	r4,r4,512
   450bc:	203fd51e 	bne	r4,zero,45014 <__swsetup_r+0x44>
   450c0:	800b883a 	mov	r5,r16
   450c4:	8809883a 	mov	r4,r17
   450c8:	0041c2c0 	call	41c2c <__smakebuf_r>
   450cc:	8180030b 	ldhu	r6,12(r16)
   450d0:	80c00417 	ldw	r3,16(r16)
   450d4:	3005883a 	mov	r2,r6
   450d8:	003fce06 	br	45014 <__swsetup_r+0x44>
   450dc:	0009883a 	mov	r4,zero
   450e0:	003fd106 	br	45028 <__swsetup_r+0x58>
   450e4:	81400c17 	ldw	r5,48(r16)
   450e8:	28000626 	beq	r5,zero,45104 <__swsetup_r+0x134>
   450ec:	80801004 	addi	r2,r16,64
   450f0:	28800326 	beq	r5,r2,45100 <__swsetup_r+0x130>
   450f4:	8809883a 	mov	r4,r17
   450f8:	0040f7c0 	call	40f7c <_free_r>
   450fc:	8180030b 	ldhu	r6,12(r16)
   45100:	80000c15 	stw	zero,48(r16)
   45104:	80c00417 	ldw	r3,16(r16)
   45108:	00bff6c4 	movi	r2,-37
   4510c:	118c703a 	and	r6,r2,r6
   45110:	80000115 	stw	zero,4(r16)
   45114:	80c00015 	stw	r3,0(r16)
   45118:	003fe206 	br	450a4 <__swsetup_r+0xd4>
   4511c:	00800244 	movi	r2,9
   45120:	88800015 	stw	r2,0(r17)
   45124:	31801014 	ori	r6,r6,64
   45128:	8180030d 	sth	r6,12(r16)
   4512c:	00bfffc4 	movi	r2,-1
   45130:	003fc006 	br	45034 <__swsetup_r+0x64>

00045134 <_close_r>:
   45134:	defffe04 	addi	sp,sp,-8
   45138:	dc000015 	stw	r16,0(sp)
   4513c:	00800174 	movhi	r2,5
   45140:	2021883a 	mov	r16,r4
   45144:	2809883a 	mov	r4,r5
   45148:	dfc00115 	stw	ra,4(sp)
   4514c:	10137115 	stw	zero,19908(r2)
   45150:	004e3f80 	call	4e3f8 <close>
   45154:	10ffffd8 	cmpnei	r3,r2,-1
   45158:	18000426 	beq	r3,zero,4516c <_close_r+0x38>
   4515c:	dfc00117 	ldw	ra,4(sp)
   45160:	dc000017 	ldw	r16,0(sp)
   45164:	dec00204 	addi	sp,sp,8
   45168:	f800283a 	ret
   4516c:	00c00174 	movhi	r3,5
   45170:	18d37117 	ldw	r3,19908(r3)
   45174:	183ff926 	beq	r3,zero,4515c <_close_r+0x28>
   45178:	80c00015 	stw	r3,0(r16)
   4517c:	dfc00117 	ldw	ra,4(sp)
   45180:	dc000017 	ldw	r16,0(sp)
   45184:	dec00204 	addi	sp,sp,8
   45188:	f800283a 	ret

0004518c <quorem>:
   4518c:	defff204 	addi	sp,sp,-56
   45190:	dc400515 	stw	r17,20(sp)
   45194:	20800417 	ldw	r2,16(r4)
   45198:	2c400417 	ldw	r17,16(r5)
   4519c:	dfc00d15 	stw	ra,52(sp)
   451a0:	df000c15 	stw	fp,48(sp)
   451a4:	ddc00b15 	stw	r23,44(sp)
   451a8:	dd800a15 	stw	r22,40(sp)
   451ac:	dd400915 	stw	r21,36(sp)
   451b0:	dd000815 	stw	r20,32(sp)
   451b4:	dcc00715 	stw	r19,28(sp)
   451b8:	dc800615 	stw	r18,24(sp)
   451bc:	dc000415 	stw	r16,16(sp)
   451c0:	d9000115 	stw	r4,4(sp)
   451c4:	d9400215 	stw	r5,8(sp)
   451c8:	14407616 	blt	r2,r17,453a4 <quorem+0x218>
   451cc:	8c7fffc4 	addi	r17,r17,-1
   451d0:	882a90ba 	slli	r21,r17,2
   451d4:	2f000504 	addi	fp,r5,20
   451d8:	25800504 	addi	r22,r4,20
   451dc:	e565883a 	add	r18,fp,r21
   451e0:	b545883a 	add	r2,r22,r21
   451e4:	95c00017 	ldw	r23,0(r18)
   451e8:	15000017 	ldw	r20,0(r2)
   451ec:	dd800015 	stw	r22,0(sp)
   451f0:	bdc00044 	addi	r23,r23,1
   451f4:	b80b883a 	mov	r5,r23
   451f8:	a009883a 	mov	r4,r20
   451fc:	d8800315 	stw	r2,12(sp)
   45200:	004bb940 	call	4bb94 <__udivsi3>
   45204:	1021883a 	mov	r16,r2
   45208:	a5c02f36 	bltu	r20,r23,452c8 <quorem+0x13c>
   4520c:	e029883a 	mov	r20,fp
   45210:	002b883a 	mov	r21,zero
   45214:	002f883a 	mov	r23,zero
   45218:	a4c00017 	ldw	r19,0(r20)
   4521c:	800b883a 	mov	r5,r16
   45220:	b5800104 	addi	r22,r22,4
   45224:	993fffcc 	andi	r4,r19,65535
   45228:	004bc540 	call	4bc54 <__mulsi3>
   4522c:	9808d43a 	srli	r4,r19,16
   45230:	800b883a 	mov	r5,r16
   45234:	156b883a 	add	r21,r2,r21
   45238:	004bc540 	call	4bc54 <__mulsi3>
   4523c:	b0ffff17 	ldw	r3,-4(r22)
   45240:	a80ad43a 	srli	r5,r21,16
   45244:	a93fffcc 	andi	r4,r21,65535
   45248:	19bfffcc 	andi	r6,r3,65535
   4524c:	b909c83a 	sub	r4,r23,r4
   45250:	2189883a 	add	r4,r4,r6
   45254:	1806d43a 	srli	r3,r3,16
   45258:	1145883a 	add	r2,r2,r5
   4525c:	200bd43a 	srai	r5,r4,16
   45260:	11bfffcc 	andi	r6,r2,65535
   45264:	1987c83a 	sub	r3,r3,r6
   45268:	1947883a 	add	r3,r3,r5
   4526c:	180a943a 	slli	r5,r3,16
   45270:	213fffcc 	andi	r4,r4,65535
   45274:	a5000104 	addi	r20,r20,4
   45278:	2908b03a 	or	r4,r5,r4
   4527c:	b13fff15 	stw	r4,-4(r22)
   45280:	102ad43a 	srli	r21,r2,16
   45284:	182fd43a 	srai	r23,r3,16
   45288:	953fe32e 	bgeu	r18,r20,45218 <quorem+0x8c>
   4528c:	d8c00317 	ldw	r3,12(sp)
   45290:	18800017 	ldw	r2,0(r3)
   45294:	10000c1e 	bne	r2,zero,452c8 <quorem+0x13c>
   45298:	d8800017 	ldw	r2,0(sp)
   4529c:	1d7fff04 	addi	r21,r3,-4
   452a0:	15400436 	bltu	r2,r21,452b4 <quorem+0x128>
   452a4:	00000606 	br	452c0 <quorem+0x134>
   452a8:	d8800017 	ldw	r2,0(sp)
   452ac:	8c7fffc4 	addi	r17,r17,-1
   452b0:	1540032e 	bgeu	r2,r21,452c0 <quorem+0x134>
   452b4:	a8800017 	ldw	r2,0(r21)
   452b8:	ad7fff04 	addi	r21,r21,-4
   452bc:	103ffa26 	beq	r2,zero,452a8 <quorem+0x11c>
   452c0:	d8800117 	ldw	r2,4(sp)
   452c4:	14400415 	stw	r17,16(r2)
   452c8:	d9400217 	ldw	r5,8(sp)
   452cc:	d9000117 	ldw	r4,4(sp)
   452d0:	0047f000 	call	47f00 <__mcmp>
   452d4:	10002616 	blt	r2,zero,45370 <quorem+0x1e4>
   452d8:	d9400017 	ldw	r5,0(sp)
   452dc:	84000044 	addi	r16,r16,1
   452e0:	0007883a 	mov	r3,zero
   452e4:	e1000017 	ldw	r4,0(fp)
   452e8:	29800017 	ldw	r6,0(r5)
   452ec:	29400104 	addi	r5,r5,4
   452f0:	20bfffcc 	andi	r2,r4,65535
   452f4:	1887c83a 	sub	r3,r3,r2
   452f8:	30bfffcc 	andi	r2,r6,65535
   452fc:	1885883a 	add	r2,r3,r2
   45300:	2008d43a 	srli	r4,r4,16
   45304:	3006d43a 	srli	r3,r6,16
   45308:	100fd43a 	srai	r7,r2,16
   4530c:	11bfffcc 	andi	r6,r2,65535
   45310:	1907c83a 	sub	r3,r3,r4
   45314:	19c7883a 	add	r3,r3,r7
   45318:	1804943a 	slli	r2,r3,16
   4531c:	e7000104 	addi	fp,fp,4
   45320:	1807d43a 	srai	r3,r3,16
   45324:	1184b03a 	or	r2,r2,r6
   45328:	28bfff15 	stw	r2,-4(r5)
   4532c:	973fed2e 	bgeu	r18,fp,452e4 <quorem+0x158>
   45330:	880490ba 	slli	r2,r17,2
   45334:	d9000017 	ldw	r4,0(sp)
   45338:	2085883a 	add	r2,r4,r2
   4533c:	10c00017 	ldw	r3,0(r2)
   45340:	18000b1e 	bne	r3,zero,45370 <quorem+0x1e4>
   45344:	10bfff04 	addi	r2,r2,-4
   45348:	20800436 	bltu	r4,r2,4535c <quorem+0x1d0>
   4534c:	00000606 	br	45368 <quorem+0x1dc>
   45350:	d8c00017 	ldw	r3,0(sp)
   45354:	8c7fffc4 	addi	r17,r17,-1
   45358:	1880032e 	bgeu	r3,r2,45368 <quorem+0x1dc>
   4535c:	10c00017 	ldw	r3,0(r2)
   45360:	10bfff04 	addi	r2,r2,-4
   45364:	183ffa26 	beq	r3,zero,45350 <quorem+0x1c4>
   45368:	d8800117 	ldw	r2,4(sp)
   4536c:	14400415 	stw	r17,16(r2)
   45370:	8005883a 	mov	r2,r16
   45374:	dfc00d17 	ldw	ra,52(sp)
   45378:	df000c17 	ldw	fp,48(sp)
   4537c:	ddc00b17 	ldw	r23,44(sp)
   45380:	dd800a17 	ldw	r22,40(sp)
   45384:	dd400917 	ldw	r21,36(sp)
   45388:	dd000817 	ldw	r20,32(sp)
   4538c:	dcc00717 	ldw	r19,28(sp)
   45390:	dc800617 	ldw	r18,24(sp)
   45394:	dc400517 	ldw	r17,20(sp)
   45398:	dc000417 	ldw	r16,16(sp)
   4539c:	dec00e04 	addi	sp,sp,56
   453a0:	f800283a 	ret
   453a4:	0005883a 	mov	r2,zero
   453a8:	003ff206 	br	45374 <quorem+0x1e8>

000453ac <_dtoa_r>:
   453ac:	20801017 	ldw	r2,64(r4)
   453b0:	deffe204 	addi	sp,sp,-120
   453b4:	ddc01b15 	stw	r23,108(sp)
   453b8:	dcc01715 	stw	r19,92(sp)
   453bc:	dc801615 	stw	r18,88(sp)
   453c0:	dc401515 	stw	r17,84(sp)
   453c4:	dc001415 	stw	r16,80(sp)
   453c8:	dfc01d15 	stw	ra,116(sp)
   453cc:	df001c15 	stw	fp,112(sp)
   453d0:	dd801a15 	stw	r22,104(sp)
   453d4:	dd401915 	stw	r21,100(sp)
   453d8:	dd001815 	stw	r20,96(sp)
   453dc:	d9c00215 	stw	r7,8(sp)
   453e0:	dc002017 	ldw	r16,128(sp)
   453e4:	202f883a 	mov	r23,r4
   453e8:	3025883a 	mov	r18,r6
   453ec:	2827883a 	mov	r19,r5
   453f0:	3023883a 	mov	r17,r6
   453f4:	10000826 	beq	r2,zero,45418 <_dtoa_r+0x6c>
   453f8:	21801117 	ldw	r6,68(r4)
   453fc:	00c00044 	movi	r3,1
   45400:	100b883a 	mov	r5,r2
   45404:	1986983a 	sll	r3,r3,r6
   45408:	11800115 	stw	r6,4(r2)
   4540c:	10c00215 	stw	r3,8(r2)
   45410:	00474f00 	call	474f0 <_Bfree>
   45414:	b8001015 	stw	zero,64(r23)
   45418:	90018816 	blt	r18,zero,45a3c <_dtoa_r+0x690>
   4541c:	80000015 	stw	zero,0(r16)
   45420:	909ffc2c 	andhi	r2,r18,32752
   45424:	00dffc34 	movhi	r3,32752
   45428:	10c18d26 	beq	r2,r3,45a60 <_dtoa_r+0x6b4>
   4542c:	000d883a 	mov	r6,zero
   45430:	000f883a 	mov	r7,zero
   45434:	9809883a 	mov	r4,r19
   45438:	880b883a 	mov	r5,r17
   4543c:	004ce9c0 	call	4ce9c <__eqdf2>
   45440:	1000191e 	bne	r2,zero,454a8 <_dtoa_r+0xfc>
   45444:	d8c01f17 	ldw	r3,124(sp)
   45448:	00800044 	movi	r2,1
   4544c:	18800015 	stw	r2,0(r3)
   45450:	d8802117 	ldw	r2,132(sp)
   45454:	1002f926 	beq	r2,zero,4603c <_dtoa_r+0xc90>
   45458:	d9002117 	ldw	r4,132(sp)
   4545c:	00800174 	movhi	r2,5
   45460:	1083e644 	addi	r2,r2,3993
   45464:	00c00174 	movhi	r3,5
   45468:	20800015 	stw	r2,0(r4)
   4546c:	1883e604 	addi	r2,r3,3992
   45470:	d8800115 	stw	r2,4(sp)
   45474:	d8800117 	ldw	r2,4(sp)
   45478:	dfc01d17 	ldw	ra,116(sp)
   4547c:	df001c17 	ldw	fp,112(sp)
   45480:	ddc01b17 	ldw	r23,108(sp)
   45484:	dd801a17 	ldw	r22,104(sp)
   45488:	dd401917 	ldw	r21,100(sp)
   4548c:	dd001817 	ldw	r20,96(sp)
   45490:	dcc01717 	ldw	r19,92(sp)
   45494:	dc801617 	ldw	r18,88(sp)
   45498:	dc401517 	ldw	r17,84(sp)
   4549c:	dc001417 	ldw	r16,80(sp)
   454a0:	dec01e04 	addi	sp,sp,120
   454a4:	f800283a 	ret
   454a8:	d8801204 	addi	r2,sp,72
   454ac:	9020d53a 	srli	r16,r18,20
   454b0:	d8800015 	stw	r2,0(sp)
   454b4:	d9c01304 	addi	r7,sp,76
   454b8:	980b883a 	mov	r5,r19
   454bc:	880d883a 	mov	r6,r17
   454c0:	b809883a 	mov	r4,r23
   454c4:	00482e80 	call	482e8 <__d2b>
   454c8:	1039883a 	mov	fp,r2
   454cc:	8001771e 	bne	r16,zero,45aac <_dtoa_r+0x700>
   454d0:	dd001217 	ldw	r20,72(sp)
   454d4:	dc001317 	ldw	r16,76(sp)
   454d8:	a421883a 	add	r16,r20,r16
   454dc:	80810c84 	addi	r2,r16,1074
   454e0:	10c00850 	cmplti	r3,r2,33
   454e4:	1802e51e 	bne	r3,zero,4607c <_dtoa_r+0xcd0>
   454e8:	01001004 	movi	r4,64
   454ec:	2085c83a 	sub	r2,r4,r2
   454f0:	81010484 	addi	r4,r16,1042
   454f4:	90a4983a 	sll	r18,r18,r2
   454f8:	9908d83a 	srl	r4,r19,r4
   454fc:	9108b03a 	or	r4,r18,r4
   45500:	004e2d80 	call	4e2d8 <__floatunsidf>
   45504:	1009883a 	mov	r4,r2
   45508:	017f8434 	movhi	r5,65040
   4550c:	00800044 	movi	r2,1
   45510:	194b883a 	add	r5,r3,r5
   45514:	843fffc4 	addi	r16,r16,-1
   45518:	d8800a15 	stw	r2,40(sp)
   4551c:	000d883a 	mov	r6,zero
   45520:	01cffe34 	movhi	r7,16376
   45524:	004d8980 	call	4d898 <__subdf3>
   45528:	0198dbf4 	movhi	r6,25455
   4552c:	01cff4f4 	movhi	r7,16339
   45530:	3190d844 	addi	r6,r6,17249
   45534:	39e1e9c4 	addi	r7,r7,-30809
   45538:	1009883a 	mov	r4,r2
   4553c:	180b883a 	mov	r5,r3
   45540:	004d0ec0 	call	4d0ec <__muldf3>
   45544:	01a2d874 	movhi	r6,35681
   45548:	01cff1f4 	movhi	r7,16327
   4554c:	31b22cc4 	addi	r6,r6,-14157
   45550:	39e28a04 	addi	r7,r7,-30168
   45554:	180b883a 	mov	r5,r3
   45558:	1009883a 	mov	r4,r2
   4555c:	004bc7c0 	call	4bc7c <__adddf3>
   45560:	8009883a 	mov	r4,r16
   45564:	102b883a 	mov	r21,r2
   45568:	1825883a 	mov	r18,r3
   4556c:	004e2200 	call	4e220 <__floatsidf>
   45570:	019427f4 	movhi	r6,20639
   45574:	01cff4f4 	movhi	r7,16339
   45578:	319e7ec4 	addi	r6,r6,31227
   4557c:	39d104c4 	addi	r7,r7,17427
   45580:	1009883a 	mov	r4,r2
   45584:	180b883a 	mov	r5,r3
   45588:	004d0ec0 	call	4d0ec <__muldf3>
   4558c:	100d883a 	mov	r6,r2
   45590:	180f883a 	mov	r7,r3
   45594:	a809883a 	mov	r4,r21
   45598:	900b883a 	mov	r5,r18
   4559c:	004bc7c0 	call	4bc7c <__adddf3>
   455a0:	1009883a 	mov	r4,r2
   455a4:	180b883a 	mov	r5,r3
   455a8:	1025883a 	mov	r18,r2
   455ac:	182d883a 	mov	r22,r3
   455b0:	004e1a00 	call	4e1a0 <__fixdfsi>
   455b4:	000d883a 	mov	r6,zero
   455b8:	000f883a 	mov	r7,zero
   455bc:	9009883a 	mov	r4,r18
   455c0:	b00b883a 	mov	r5,r22
   455c4:	102b883a 	mov	r21,r2
   455c8:	d8800315 	stw	r2,12(sp)
   455cc:	004d0040 	call	4d004 <__ledf2>
   455d0:	10028f16 	blt	r2,zero,46010 <_dtoa_r+0xc64>
   455d4:	dc800317 	ldw	r18,12(sp)
   455d8:	a421c83a 	sub	r16,r20,r16
   455dc:	85bfffc4 	addi	r22,r16,-1
   455e0:	908005e8 	cmpgeui	r2,r18,23
   455e4:	1002821e 	bne	r2,zero,45ff0 <_dtoa_r+0xc44>
   455e8:	900690fa 	slli	r3,r18,3
   455ec:	00800174 	movhi	r2,5
   455f0:	10842f04 	addi	r2,r2,4284
   455f4:	10c5883a 	add	r2,r2,r3
   455f8:	11800017 	ldw	r6,0(r2)
   455fc:	11c00117 	ldw	r7,4(r2)
   45600:	9809883a 	mov	r4,r19
   45604:	880b883a 	mov	r5,r17
   45608:	004d0040 	call	4d004 <__ledf2>
   4560c:	1002550e 	bge	r2,zero,45f64 <_dtoa_r+0xbb8>
   45610:	90bfffc4 	addi	r2,r18,-1
   45614:	d8800315 	stw	r2,12(sp)
   45618:	d8000915 	stw	zero,36(sp)
   4561c:	b0027716 	blt	r22,zero,45ffc <_dtoa_r+0xc50>
   45620:	d8000615 	stw	zero,24(sp)
   45624:	d8800317 	ldw	r2,12(sp)
   45628:	1002510e 	bge	r2,zero,45f70 <_dtoa_r+0xbc4>
   4562c:	d8800317 	ldw	r2,12(sp)
   45630:	d8c00617 	ldw	r3,24(sp)
   45634:	d8000315 	stw	zero,12(sp)
   45638:	d8800415 	stw	r2,16(sp)
   4563c:	1887c83a 	sub	r3,r3,r2
   45640:	d8c00615 	stw	r3,24(sp)
   45644:	0087c83a 	sub	r3,zero,r2
   45648:	d8c00815 	stw	r3,32(sp)
   4564c:	d8c00217 	ldw	r3,8(sp)
   45650:	188002a8 	cmpgeui	r2,r3,10
   45654:	10024d1e 	bne	r2,zero,45f8c <_dtoa_r+0xbe0>
   45658:	18800190 	cmplti	r2,r3,6
   4565c:	10028b1e 	bne	r2,zero,4608c <_dtoa_r+0xce0>
   45660:	18bfff04 	addi	r2,r3,-4
   45664:	d8800215 	stw	r2,8(sp)
   45668:	0021883a 	mov	r16,zero
   4566c:	d8c00217 	ldw	r3,8(sp)
   45670:	18800120 	cmpeqi	r2,r3,4
   45674:	10035d1e 	bne	r2,zero,463ec <_dtoa_r+0x1040>
   45678:	18800160 	cmpeqi	r2,r3,5
   4567c:	10031b1e 	bne	r2,zero,462ec <_dtoa_r+0xf40>
   45680:	188000a0 	cmpeqi	r2,r3,2
   45684:	10024d26 	beq	r2,zero,45fbc <_dtoa_r+0xc10>
   45688:	d8000715 	stw	zero,28(sp)
   4568c:	d8801e17 	ldw	r2,120(sp)
   45690:	0083260e 	bge	zero,r2,4632c <_dtoa_r+0xf80>
   45694:	d8800b15 	stw	r2,44(sp)
   45698:	d8800515 	stw	r2,20(sp)
   4569c:	100d883a 	mov	r6,r2
   456a0:	b8001115 	stw	zero,68(r23)
   456a4:	30800610 	cmplti	r2,r6,24
   456a8:	1004f11e 	bne	r2,zero,46a70 <_dtoa_r+0x16c4>
   456ac:	00c00044 	movi	r3,1
   456b0:	00800104 	movi	r2,4
   456b4:	1085883a 	add	r2,r2,r2
   456b8:	11000504 	addi	r4,r2,20
   456bc:	180b883a 	mov	r5,r3
   456c0:	18c00044 	addi	r3,r3,1
   456c4:	313ffb2e 	bgeu	r6,r4,456b4 <_dtoa_r+0x308>
   456c8:	b9401115 	stw	r5,68(r23)
   456cc:	b809883a 	mov	r4,r23
   456d0:	004744c0 	call	4744c <_Balloc>
   456d4:	d8800115 	stw	r2,4(sp)
   456d8:	1004de26 	beq	r2,zero,46a54 <_dtoa_r+0x16a8>
   456dc:	d8800117 	ldw	r2,4(sp)
   456e0:	b8801015 	stw	r2,64(r23)
   456e4:	d8800517 	ldw	r2,20(sp)
   456e8:	108003e8 	cmpgeui	r2,r2,15
   456ec:	1001021e 	bne	r2,zero,45af8 <_dtoa_r+0x74c>
   456f0:	80010126 	beq	r16,zero,45af8 <_dtoa_r+0x74c>
   456f4:	d9000417 	ldw	r4,16(sp)
   456f8:	01038b0e 	bge	zero,r4,46528 <_dtoa_r+0x117c>
   456fc:	208003cc 	andi	r2,r4,15
   45700:	100690fa 	slli	r3,r2,3
   45704:	2029d13a 	srai	r20,r4,4
   45708:	00800174 	movhi	r2,5
   4570c:	10842f04 	addi	r2,r2,4284
   45710:	10c5883a 	add	r2,r2,r3
   45714:	a0c0040c 	andi	r3,r20,16
   45718:	12800017 	ldw	r10,0(r2)
   4571c:	12400117 	ldw	r9,4(r2)
   45720:	18032c26 	beq	r3,zero,463d4 <_dtoa_r+0x1028>
   45724:	00800174 	movhi	r2,5
   45728:	10842504 	addi	r2,r2,4244
   4572c:	11800817 	ldw	r6,32(r2)
   45730:	11c00917 	ldw	r7,36(r2)
   45734:	9809883a 	mov	r4,r19
   45738:	880b883a 	mov	r5,r17
   4573c:	da400e15 	stw	r9,56(sp)
   45740:	da800d15 	stw	r10,52(sp)
   45744:	004c56c0 	call	4c56c <__divdf3>
   45748:	da800d17 	ldw	r10,52(sp)
   4574c:	da400e17 	ldw	r9,56(sp)
   45750:	a50003cc 	andi	r20,r20,15
   45754:	d8800c15 	stw	r2,48(sp)
   45758:	1825883a 	mov	r18,r3
   4575c:	054000c4 	movi	r21,3
   45760:	a0001126 	beq	r20,zero,457a8 <_dtoa_r+0x3fc>
   45764:	04000174 	movhi	r16,5
   45768:	84042504 	addi	r16,r16,4244
   4576c:	5009883a 	mov	r4,r10
   45770:	480b883a 	mov	r5,r9
   45774:	a180004c 	andi	r6,r20,1
   45778:	30000626 	beq	r6,zero,45794 <_dtoa_r+0x3e8>
   4577c:	81800017 	ldw	r6,0(r16)
   45780:	81c00117 	ldw	r7,4(r16)
   45784:	ad400044 	addi	r21,r21,1
   45788:	004d0ec0 	call	4d0ec <__muldf3>
   4578c:	1009883a 	mov	r4,r2
   45790:	180b883a 	mov	r5,r3
   45794:	a029d07a 	srai	r20,r20,1
   45798:	84000204 	addi	r16,r16,8
   4579c:	a03ff51e 	bne	r20,zero,45774 <_dtoa_r+0x3c8>
   457a0:	2015883a 	mov	r10,r4
   457a4:	2813883a 	mov	r9,r5
   457a8:	d9000c17 	ldw	r4,48(sp)
   457ac:	900b883a 	mov	r5,r18
   457b0:	500d883a 	mov	r6,r10
   457b4:	480f883a 	mov	r7,r9
   457b8:	004c56c0 	call	4c56c <__divdf3>
   457bc:	1021883a 	mov	r16,r2
   457c0:	1825883a 	mov	r18,r3
   457c4:	d8800917 	ldw	r2,36(sp)
   457c8:	10000626 	beq	r2,zero,457e4 <_dtoa_r+0x438>
   457cc:	000d883a 	mov	r6,zero
   457d0:	01cffc34 	movhi	r7,16368
   457d4:	8009883a 	mov	r4,r16
   457d8:	900b883a 	mov	r5,r18
   457dc:	004d0040 	call	4d004 <__ledf2>
   457e0:	10044416 	blt	r2,zero,468f4 <_dtoa_r+0x1548>
   457e4:	a809883a 	mov	r4,r21
   457e8:	004e2200 	call	4e220 <__floatsidf>
   457ec:	800d883a 	mov	r6,r16
   457f0:	900f883a 	mov	r7,r18
   457f4:	1009883a 	mov	r4,r2
   457f8:	180b883a 	mov	r5,r3
   457fc:	004d0ec0 	call	4d0ec <__muldf3>
   45800:	000d883a 	mov	r6,zero
   45804:	01d00734 	movhi	r7,16412
   45808:	1009883a 	mov	r4,r2
   4580c:	180b883a 	mov	r5,r3
   45810:	004bc7c0 	call	4bc7c <__adddf3>
   45814:	1029883a 	mov	r20,r2
   45818:	00bf3034 	movhi	r2,64704
   4581c:	1885883a 	add	r2,r3,r2
   45820:	d8800c15 	stw	r2,48(sp)
   45824:	d8800517 	ldw	r2,20(sp)
   45828:	10032226 	beq	r2,zero,464b4 <_dtoa_r+0x1108>
   4582c:	d8800417 	ldw	r2,16(sp)
   45830:	d8801115 	stw	r2,68(sp)
   45834:	d8800517 	ldw	r2,20(sp)
   45838:	d8800d15 	stw	r2,52(sp)
   4583c:	d8800d17 	ldw	r2,52(sp)
   45840:	900b883a 	mov	r5,r18
   45844:	8009883a 	mov	r4,r16
   45848:	10bfffc4 	addi	r2,r2,-1
   4584c:	100690fa 	slli	r3,r2,3
   45850:	00800174 	movhi	r2,5
   45854:	10842f04 	addi	r2,r2,4284
   45858:	10c5883a 	add	r2,r2,r3
   4585c:	12800017 	ldw	r10,0(r2)
   45860:	12c00117 	ldw	r11,4(r2)
   45864:	da800f15 	stw	r10,60(sp)
   45868:	dac00e15 	stw	r11,56(sp)
   4586c:	004e1a00 	call	4e1a0 <__fixdfsi>
   45870:	1009883a 	mov	r4,r2
   45874:	10800c04 	addi	r2,r2,48
   45878:	d8801015 	stw	r2,64(sp)
   4587c:	004e2200 	call	4e220 <__floatsidf>
   45880:	8009883a 	mov	r4,r16
   45884:	100d883a 	mov	r6,r2
   45888:	180f883a 	mov	r7,r3
   4588c:	900b883a 	mov	r5,r18
   45890:	004d8980 	call	4d898 <__subdf3>
   45894:	d9000117 	ldw	r4,4(sp)
   45898:	dac00e17 	ldw	r11,56(sp)
   4589c:	da800f17 	ldw	r10,60(sp)
   458a0:	1825883a 	mov	r18,r3
   458a4:	d8c00717 	ldw	r3,28(sp)
   458a8:	25400044 	addi	r21,r4,1
   458ac:	1021883a 	mov	r16,r2
   458b0:	500d883a 	mov	r6,r10
   458b4:	580f883a 	mov	r7,r11
   458b8:	1803b626 	beq	r3,zero,46794 <_dtoa_r+0x13e8>
   458bc:	0009883a 	mov	r4,zero
   458c0:	014ff834 	movhi	r5,16352
   458c4:	004c56c0 	call	4c56c <__divdf3>
   458c8:	d9c00c17 	ldw	r7,48(sp)
   458cc:	a00d883a 	mov	r6,r20
   458d0:	1009883a 	mov	r4,r2
   458d4:	180b883a 	mov	r5,r3
   458d8:	004d8980 	call	4d898 <__subdf3>
   458dc:	d9000117 	ldw	r4,4(sp)
   458e0:	1029883a 	mov	r20,r2
   458e4:	d8801017 	ldw	r2,64(sp)
   458e8:	800d883a 	mov	r6,r16
   458ec:	900f883a 	mov	r7,r18
   458f0:	20800005 	stb	r2,0(r4)
   458f4:	180b883a 	mov	r5,r3
   458f8:	a009883a 	mov	r4,r20
   458fc:	d8c00c15 	stw	r3,48(sp)
   45900:	004cf1c0 	call	4cf1c <__gedf2>
   45904:	0083e716 	blt	zero,r2,468a4 <_dtoa_r+0x14f8>
   45908:	0005883a 	mov	r2,zero
   4590c:	dd800e15 	stw	r22,56(sp)
   45910:	dc400f15 	stw	r17,60(sp)
   45914:	dd800d17 	ldw	r22,52(sp)
   45918:	dc400c17 	ldw	r17,48(sp)
   4591c:	ddc00d15 	stw	r23,52(sp)
   45920:	dcc00c15 	stw	r19,48(sp)
   45924:	1027883a 	mov	r19,r2
   45928:	00002606 	br	459c4 <_dtoa_r+0x618>
   4592c:	9cc00044 	addi	r19,r19,1
   45930:	9d806d0e 	bge	r19,r22,45ae8 <_dtoa_r+0x73c>
   45934:	a009883a 	mov	r4,r20
   45938:	880b883a 	mov	r5,r17
   4593c:	000d883a 	mov	r6,zero
   45940:	01d00934 	movhi	r7,16420
   45944:	004d0ec0 	call	4d0ec <__muldf3>
   45948:	000d883a 	mov	r6,zero
   4594c:	01d00934 	movhi	r7,16420
   45950:	8009883a 	mov	r4,r16
   45954:	900b883a 	mov	r5,r18
   45958:	1029883a 	mov	r20,r2
   4595c:	1823883a 	mov	r17,r3
   45960:	004d0ec0 	call	4d0ec <__muldf3>
   45964:	180b883a 	mov	r5,r3
   45968:	1009883a 	mov	r4,r2
   4596c:	1821883a 	mov	r16,r3
   45970:	1025883a 	mov	r18,r2
   45974:	004e1a00 	call	4e1a0 <__fixdfsi>
   45978:	1009883a 	mov	r4,r2
   4597c:	102f883a 	mov	r23,r2
   45980:	004e2200 	call	4e220 <__floatsidf>
   45984:	9009883a 	mov	r4,r18
   45988:	800b883a 	mov	r5,r16
   4598c:	100d883a 	mov	r6,r2
   45990:	180f883a 	mov	r7,r3
   45994:	004d8980 	call	4d898 <__subdf3>
   45998:	ad400044 	addi	r21,r21,1
   4599c:	ba000c04 	addi	r8,r23,48
   459a0:	aa3fffc5 	stb	r8,-1(r21)
   459a4:	a00d883a 	mov	r6,r20
   459a8:	880f883a 	mov	r7,r17
   459ac:	1009883a 	mov	r4,r2
   459b0:	180b883a 	mov	r5,r3
   459b4:	1021883a 	mov	r16,r2
   459b8:	1825883a 	mov	r18,r3
   459bc:	004d0040 	call	4d004 <__ledf2>
   459c0:	10040516 	blt	r2,zero,469d8 <_dtoa_r+0x162c>
   459c4:	800d883a 	mov	r6,r16
   459c8:	900f883a 	mov	r7,r18
   459cc:	0009883a 	mov	r4,zero
   459d0:	014ffc34 	movhi	r5,16368
   459d4:	004d8980 	call	4d898 <__subdf3>
   459d8:	a00d883a 	mov	r6,r20
   459dc:	880f883a 	mov	r7,r17
   459e0:	1009883a 	mov	r4,r2
   459e4:	180b883a 	mov	r5,r3
   459e8:	004d0040 	call	4d004 <__ledf2>
   459ec:	103fcf0e 	bge	r2,zero,4592c <_dtoa_r+0x580>
   459f0:	d8801117 	ldw	r2,68(sp)
   459f4:	ddc00d17 	ldw	r23,52(sp)
   459f8:	d9000117 	ldw	r4,4(sp)
   459fc:	10800044 	addi	r2,r2,1
   45a00:	d8800415 	stw	r2,16(sp)
   45a04:	a829883a 	mov	r20,r21
   45a08:	00000106 	br	45a10 <_dtoa_r+0x664>
   45a0c:	a103da26 	beq	r20,r4,46978 <_dtoa_r+0x15cc>
   45a10:	a0ffffc3 	ldbu	r3,-1(r20)
   45a14:	a02b883a 	mov	r21,r20
   45a18:	a53fffc4 	addi	r20,r20,-1
   45a1c:	18803fcc 	andi	r2,r3,255
   45a20:	1080201c 	xori	r2,r2,128
   45a24:	10bfe004 	addi	r2,r2,-128
   45a28:	10800e60 	cmpeqi	r2,r2,57
   45a2c:	103ff71e 	bne	r2,zero,45a0c <_dtoa_r+0x660>
   45a30:	18c00044 	addi	r3,r3,1
   45a34:	a0c00005 	stb	r3,0(r20)
   45a38:	00013f06 	br	45f38 <_dtoa_r+0xb8c>
   45a3c:	04600034 	movhi	r17,32768
   45a40:	8c7fffc4 	addi	r17,r17,-1
   45a44:	9462703a 	and	r17,r18,r17
   45a48:	00800044 	movi	r2,1
   45a4c:	8825883a 	mov	r18,r17
   45a50:	80800015 	stw	r2,0(r16)
   45a54:	00dffc34 	movhi	r3,32752
   45a58:	909ffc2c 	andhi	r2,r18,32752
   45a5c:	10fe731e 	bne	r2,r3,4542c <_dtoa_r+0x80>
   45a60:	d9001f17 	ldw	r4,124(sp)
   45a64:	00800434 	movhi	r2,16
   45a68:	10bfffc4 	addi	r2,r2,-1
   45a6c:	9084703a 	and	r2,r18,r2
   45a70:	00c9c3c4 	movi	r3,9999
   45a74:	20c00015 	stw	r3,0(r4)
   45a78:	14e6b03a 	or	r19,r2,r19
   45a7c:	9800141e 	bne	r19,zero,45ad0 <_dtoa_r+0x724>
   45a80:	d8802117 	ldw	r2,132(sp)
   45a84:	10041226 	beq	r2,zero,46ad0 <_dtoa_r+0x1724>
   45a88:	00800174 	movhi	r2,5
   45a8c:	1007883a 	mov	r3,r2
   45a90:	18c3f004 	addi	r3,r3,4032
   45a94:	00800174 	movhi	r2,5
   45a98:	d8c00115 	stw	r3,4(sp)
   45a9c:	1083f204 	addi	r2,r2,4040
   45aa0:	d8c02117 	ldw	r3,132(sp)
   45aa4:	18800015 	stw	r2,0(r3)
   45aa8:	003e7206 	br	45474 <_dtoa_r+0xc8>
   45aac:	01400434 	movhi	r5,16
   45ab0:	297fffc4 	addi	r5,r5,-1
   45ab4:	894a703a 	and	r5,r17,r5
   45ab8:	dd001217 	ldw	r20,72(sp)
   45abc:	9809883a 	mov	r4,r19
   45ac0:	294ffc34 	orhi	r5,r5,16368
   45ac4:	843f0044 	addi	r16,r16,-1023
   45ac8:	d8000a15 	stw	zero,40(sp)
   45acc:	003e9306 	br	4551c <_dtoa_r+0x170>
   45ad0:	d8802117 	ldw	r2,132(sp)
   45ad4:	1001fe1e 	bne	r2,zero,462d0 <_dtoa_r+0xf24>
   45ad8:	00800174 	movhi	r2,5
   45adc:	1083ef04 	addi	r2,r2,4028
   45ae0:	d8800115 	stw	r2,4(sp)
   45ae4:	003e6306 	br	45474 <_dtoa_r+0xc8>
   45ae8:	dd800e17 	ldw	r22,56(sp)
   45aec:	ddc00d17 	ldw	r23,52(sp)
   45af0:	dc400f17 	ldw	r17,60(sp)
   45af4:	dcc00c17 	ldw	r19,48(sp)
   45af8:	d8801317 	ldw	r2,76(sp)
   45afc:	10006e16 	blt	r2,zero,45cb8 <_dtoa_r+0x90c>
   45b00:	d9000417 	ldw	r4,16(sp)
   45b04:	20c003c8 	cmpgei	r3,r4,15
   45b08:	18006b1e 	bne	r3,zero,45cb8 <_dtoa_r+0x90c>
   45b0c:	200690fa 	slli	r3,r4,3
   45b10:	00800174 	movhi	r2,5
   45b14:	10842f04 	addi	r2,r2,4284
   45b18:	10c5883a 	add	r2,r2,r3
   45b1c:	14000017 	ldw	r16,0(r2)
   45b20:	14800117 	ldw	r18,4(r2)
   45b24:	d8801e17 	ldw	r2,120(sp)
   45b28:	1000150e 	bge	r2,zero,45b80 <_dtoa_r+0x7d4>
   45b2c:	d8800517 	ldw	r2,20(sp)
   45b30:	00801316 	blt	zero,r2,45b80 <_dtoa_r+0x7d4>
   45b34:	d8800517 	ldw	r2,20(sp)
   45b38:	1002721e 	bne	r2,zero,46504 <_dtoa_r+0x1158>
   45b3c:	8009883a 	mov	r4,r16
   45b40:	000d883a 	mov	r6,zero
   45b44:	01d00534 	movhi	r7,16404
   45b48:	900b883a 	mov	r5,r18
   45b4c:	004d0ec0 	call	4d0ec <__muldf3>
   45b50:	100d883a 	mov	r6,r2
   45b54:	180f883a 	mov	r7,r3
   45b58:	9809883a 	mov	r4,r19
   45b5c:	880b883a 	mov	r5,r17
   45b60:	004d0040 	call	4d004 <__ledf2>
   45b64:	0029883a 	mov	r20,zero
   45b68:	0021883a 	mov	r16,zero
   45b6c:	00820216 	blt	zero,r2,46378 <_dtoa_r+0xfcc>
   45b70:	d8801e17 	ldw	r2,120(sp)
   45b74:	dd400117 	ldw	r21,4(sp)
   45b78:	00a2303a 	nor	r17,zero,r2
   45b7c:	00020406 	br	46390 <_dtoa_r+0xfe4>
   45b80:	800d883a 	mov	r6,r16
   45b84:	900f883a 	mov	r7,r18
   45b88:	9809883a 	mov	r4,r19
   45b8c:	880b883a 	mov	r5,r17
   45b90:	004c56c0 	call	4c56c <__divdf3>
   45b94:	180b883a 	mov	r5,r3
   45b98:	1009883a 	mov	r4,r2
   45b9c:	004e1a00 	call	4e1a0 <__fixdfsi>
   45ba0:	1009883a 	mov	r4,r2
   45ba4:	102b883a 	mov	r21,r2
   45ba8:	004e2200 	call	4e220 <__floatsidf>
   45bac:	800d883a 	mov	r6,r16
   45bb0:	900f883a 	mov	r7,r18
   45bb4:	1009883a 	mov	r4,r2
   45bb8:	180b883a 	mov	r5,r3
   45bbc:	004d0ec0 	call	4d0ec <__muldf3>
   45bc0:	100d883a 	mov	r6,r2
   45bc4:	9809883a 	mov	r4,r19
   45bc8:	880b883a 	mov	r5,r17
   45bcc:	180f883a 	mov	r7,r3
   45bd0:	004d8980 	call	4d898 <__subdf3>
   45bd4:	d9800117 	ldw	r6,4(sp)
   45bd8:	dd800517 	ldw	r22,20(sp)
   45bdc:	1009883a 	mov	r4,r2
   45be0:	a8800c04 	addi	r2,r21,48
   45be4:	30800005 	stb	r2,0(r6)
   45be8:	b0800060 	cmpeqi	r2,r22,1
   45bec:	180b883a 	mov	r5,r3
   45bf0:	35000044 	addi	r20,r6,1
   45bf4:	10029f1e 	bne	r2,zero,46674 <_dtoa_r+0x12c8>
   45bf8:	04400044 	movi	r17,1
   45bfc:	ddc00215 	stw	r23,8(sp)
   45c00:	00001c06 	br	45c74 <_dtoa_r+0x8c8>
   45c04:	800d883a 	mov	r6,r16
   45c08:	900f883a 	mov	r7,r18
   45c0c:	a809883a 	mov	r4,r21
   45c10:	980b883a 	mov	r5,r19
   45c14:	004c56c0 	call	4c56c <__divdf3>
   45c18:	180b883a 	mov	r5,r3
   45c1c:	1009883a 	mov	r4,r2
   45c20:	004e1a00 	call	4e1a0 <__fixdfsi>
   45c24:	1009883a 	mov	r4,r2
   45c28:	102f883a 	mov	r23,r2
   45c2c:	004e2200 	call	4e220 <__floatsidf>
   45c30:	800d883a 	mov	r6,r16
   45c34:	900f883a 	mov	r7,r18
   45c38:	1009883a 	mov	r4,r2
   45c3c:	180b883a 	mov	r5,r3
   45c40:	004d0ec0 	call	4d0ec <__muldf3>
   45c44:	a809883a 	mov	r4,r21
   45c48:	980b883a 	mov	r5,r19
   45c4c:	100d883a 	mov	r6,r2
   45c50:	180f883a 	mov	r7,r3
   45c54:	004d8980 	call	4d898 <__subdf3>
   45c58:	b9000c04 	addi	r4,r23,48
   45c5c:	a1000005 	stb	r4,0(r20)
   45c60:	8c400044 	addi	r17,r17,1
   45c64:	a5000044 	addi	r20,r20,1
   45c68:	1009883a 	mov	r4,r2
   45c6c:	180b883a 	mov	r5,r3
   45c70:	8d827e26 	beq	r17,r22,4666c <_dtoa_r+0x12c0>
   45c74:	000d883a 	mov	r6,zero
   45c78:	01d00934 	movhi	r7,16420
   45c7c:	004d0ec0 	call	4d0ec <__muldf3>
   45c80:	000d883a 	mov	r6,zero
   45c84:	000f883a 	mov	r7,zero
   45c88:	1009883a 	mov	r4,r2
   45c8c:	180b883a 	mov	r5,r3
   45c90:	102b883a 	mov	r21,r2
   45c94:	1827883a 	mov	r19,r3
   45c98:	004ce9c0 	call	4ce9c <__eqdf2>
   45c9c:	103fd91e 	bne	r2,zero,45c04 <_dtoa_r+0x858>
   45ca0:	d8800417 	ldw	r2,16(sp)
   45ca4:	ddc00217 	ldw	r23,8(sp)
   45ca8:	a02b883a 	mov	r21,r20
   45cac:	10800044 	addi	r2,r2,1
   45cb0:	d8800415 	stw	r2,16(sp)
   45cb4:	0000a006 	br	45f38 <_dtoa_r+0xb8c>
   45cb8:	d8c00717 	ldw	r3,28(sp)
   45cbc:	1800e326 	beq	r3,zero,4604c <_dtoa_r+0xca0>
   45cc0:	d8c00217 	ldw	r3,8(sp)
   45cc4:	18c00088 	cmpgei	r3,r3,2
   45cc8:	1801e026 	beq	r3,zero,4644c <_dtoa_r+0x10a0>
   45ccc:	d8800517 	ldw	r2,20(sp)
   45cd0:	153fffc4 	addi	r20,r2,-1
   45cd4:	d8800817 	ldw	r2,32(sp)
   45cd8:	1501bc0e 	bge	r2,r20,463cc <_dtoa_r+0x1020>
   45cdc:	d8800817 	ldw	r2,32(sp)
   45ce0:	d8c00317 	ldw	r3,12(sp)
   45ce4:	dd000815 	stw	r20,32(sp)
   45ce8:	a085c83a 	sub	r2,r20,r2
   45cec:	1885883a 	add	r2,r3,r2
   45cf0:	d8800315 	stw	r2,12(sp)
   45cf4:	0029883a 	mov	r20,zero
   45cf8:	d8800517 	ldw	r2,20(sp)
   45cfc:	10028b16 	blt	r2,zero,4672c <_dtoa_r+0x1380>
   45d00:	d8c00617 	ldw	r3,24(sp)
   45d04:	b0ad883a 	add	r22,r22,r2
   45d08:	1885883a 	add	r2,r3,r2
   45d0c:	1825883a 	mov	r18,r3
   45d10:	d8800615 	stw	r2,24(sp)
   45d14:	01400044 	movi	r5,1
   45d18:	b809883a 	mov	r4,r23
   45d1c:	00478bc0 	call	478bc <__i2b>
   45d20:	1021883a 	mov	r16,r2
   45d24:	0480080e 	bge	zero,r18,45d48 <_dtoa_r+0x99c>
   45d28:	0580070e 	bge	zero,r22,45d48 <_dtoa_r+0x99c>
   45d2c:	9005883a 	mov	r2,r18
   45d30:	b4819e16 	blt	r22,r18,463ac <_dtoa_r+0x1000>
   45d34:	d8c00617 	ldw	r3,24(sp)
   45d38:	90a5c83a 	sub	r18,r18,r2
   45d3c:	b0adc83a 	sub	r22,r22,r2
   45d40:	1887c83a 	sub	r3,r3,r2
   45d44:	d8c00615 	stw	r3,24(sp)
   45d48:	d8800817 	ldw	r2,32(sp)
   45d4c:	10001426 	beq	r2,zero,45da0 <_dtoa_r+0x9f4>
   45d50:	d8800717 	ldw	r2,28(sp)
   45d54:	1001ee26 	beq	r2,zero,46510 <_dtoa_r+0x1164>
   45d58:	05000e0e 	bge	zero,r20,45d94 <_dtoa_r+0x9e8>
   45d5c:	800b883a 	mov	r5,r16
   45d60:	a00d883a 	mov	r6,r20
   45d64:	b809883a 	mov	r4,r23
   45d68:	0047c300 	call	47c30 <__pow5mult>
   45d6c:	e00d883a 	mov	r6,fp
   45d70:	100b883a 	mov	r5,r2
   45d74:	b809883a 	mov	r4,r23
   45d78:	1021883a 	mov	r16,r2
   45d7c:	004796c0 	call	4796c <__multiply>
   45d80:	102b883a 	mov	r21,r2
   45d84:	e00b883a 	mov	r5,fp
   45d88:	b809883a 	mov	r4,r23
   45d8c:	00474f00 	call	474f0 <_Bfree>
   45d90:	a839883a 	mov	fp,r21
   45d94:	d8800817 	ldw	r2,32(sp)
   45d98:	150dc83a 	sub	r6,r2,r20
   45d9c:	15025e1e 	bne	r2,r20,46718 <_dtoa_r+0x136c>
   45da0:	01400044 	movi	r5,1
   45da4:	b809883a 	mov	r4,r23
   45da8:	00478bc0 	call	478bc <__i2b>
   45dac:	d9800317 	ldw	r6,12(sp)
   45db0:	1029883a 	mov	r20,r2
   45db4:	0180b716 	blt	zero,r6,46094 <_dtoa_r+0xce8>
   45db8:	d8800217 	ldw	r2,8(sp)
   45dbc:	10800088 	cmpgei	r2,r2,2
   45dc0:	10014d26 	beq	r2,zero,462f8 <_dtoa_r+0xf4c>
   45dc4:	0023883a 	mov	r17,zero
   45dc8:	d8c00317 	ldw	r3,12(sp)
   45dcc:	00800044 	movi	r2,1
   45dd0:	1800b81e 	bne	r3,zero,460b4 <_dtoa_r+0xd08>
   45dd4:	1585883a 	add	r2,r2,r22
   45dd8:	108007cc 	andi	r2,r2,31
   45ddc:	1000a526 	beq	r2,zero,46074 <_dtoa_r+0xcc8>
   45de0:	00c00804 	movi	r3,32
   45de4:	1887c83a 	sub	r3,r3,r2
   45de8:	19000150 	cmplti	r4,r3,5
   45dec:	20033c1e 	bne	r4,zero,46ae0 <_dtoa_r+0x1734>
   45df0:	00c00704 	movi	r3,28
   45df4:	1885c83a 	sub	r2,r3,r2
   45df8:	d8c00617 	ldw	r3,24(sp)
   45dfc:	90a5883a 	add	r18,r18,r2
   45e00:	b0ad883a 	add	r22,r22,r2
   45e04:	1887883a 	add	r3,r3,r2
   45e08:	d8c00615 	stw	r3,24(sp)
   45e0c:	d8800617 	ldw	r2,24(sp)
   45e10:	00809216 	blt	zero,r2,4605c <_dtoa_r+0xcb0>
   45e14:	0580050e 	bge	zero,r22,45e2c <_dtoa_r+0xa80>
   45e18:	a00b883a 	mov	r5,r20
   45e1c:	b00d883a 	mov	r6,r22
   45e20:	b809883a 	mov	r4,r23
   45e24:	0047d780 	call	47d78 <__lshift>
   45e28:	1029883a 	mov	r20,r2
   45e2c:	d8800917 	ldw	r2,36(sp)
   45e30:	1001151e 	bne	r2,zero,46288 <_dtoa_r+0xedc>
   45e34:	d8800517 	ldw	r2,20(sp)
   45e38:	0081020e 	bge	zero,r2,46244 <_dtoa_r+0xe98>
   45e3c:	d8800717 	ldw	r2,28(sp)
   45e40:	1000af1e 	bne	r2,zero,46100 <_dtoa_r+0xd54>
   45e44:	d8800417 	ldw	r2,16(sp)
   45e48:	10800044 	addi	r2,r2,1
   45e4c:	d8800415 	stw	r2,16(sp)
   45e50:	dc800517 	ldw	r18,20(sp)
   45e54:	dd400117 	ldw	r21,4(sp)
   45e58:	04400044 	movi	r17,1
   45e5c:	00000706 	br	45e7c <_dtoa_r+0xad0>
   45e60:	e00b883a 	mov	r5,fp
   45e64:	000f883a 	mov	r7,zero
   45e68:	01800284 	movi	r6,10
   45e6c:	b809883a 	mov	r4,r23
   45e70:	00475140 	call	47514 <__multadd>
   45e74:	1039883a 	mov	fp,r2
   45e78:	8c400044 	addi	r17,r17,1
   45e7c:	a00b883a 	mov	r5,r20
   45e80:	e009883a 	mov	r4,fp
   45e84:	004518c0 	call	4518c <quorem>
   45e88:	14c00c04 	addi	r19,r2,48
   45e8c:	ac45883a 	add	r2,r21,r17
   45e90:	14ffffc5 	stb	r19,-1(r2)
   45e94:	8cbff216 	blt	r17,r18,45e60 <_dtoa_r+0xab4>
   45e98:	d8800517 	ldw	r2,20(sp)
   45e9c:	0081510e 	bge	zero,r2,463e4 <_dtoa_r+0x1038>
   45ea0:	d8c00117 	ldw	r3,4(sp)
   45ea4:	0023883a 	mov	r17,zero
   45ea8:	18ab883a 	add	r21,r3,r2
   45eac:	e00b883a 	mov	r5,fp
   45eb0:	01800044 	movi	r6,1
   45eb4:	b809883a 	mov	r4,r23
   45eb8:	0047d780 	call	47d78 <__lshift>
   45ebc:	1009883a 	mov	r4,r2
   45ec0:	a00b883a 	mov	r5,r20
   45ec4:	1039883a 	mov	fp,r2
   45ec8:	0047f000 	call	47f00 <__mcmp>
   45ecc:	a93fffc3 	ldbu	r4,-1(r21)
   45ed0:	0081490e 	bge	zero,r2,463f8 <_dtoa_r+0x104c>
   45ed4:	d9400117 	ldw	r5,4(sp)
   45ed8:	00000306 	br	45ee8 <_dtoa_r+0xb3c>
   45edc:	19415426 	beq	r3,r5,46430 <_dtoa_r+0x1084>
   45ee0:	193fffc3 	ldbu	r4,-1(r3)
   45ee4:	182b883a 	mov	r21,r3
   45ee8:	20803fcc 	andi	r2,r4,255
   45eec:	1080201c 	xori	r2,r2,128
   45ef0:	10bfe004 	addi	r2,r2,-128
   45ef4:	10800e60 	cmpeqi	r2,r2,57
   45ef8:	a8ffffc4 	addi	r3,r21,-1
   45efc:	103ff71e 	bne	r2,zero,45edc <_dtoa_r+0xb30>
   45f00:	21000044 	addi	r4,r4,1
   45f04:	19000005 	stb	r4,0(r3)
   45f08:	a00b883a 	mov	r5,r20
   45f0c:	b809883a 	mov	r4,r23
   45f10:	00474f00 	call	474f0 <_Bfree>
   45f14:	80000826 	beq	r16,zero,45f38 <_dtoa_r+0xb8c>
   45f18:	88000426 	beq	r17,zero,45f2c <_dtoa_r+0xb80>
   45f1c:	8c000326 	beq	r17,r16,45f2c <_dtoa_r+0xb80>
   45f20:	880b883a 	mov	r5,r17
   45f24:	b809883a 	mov	r4,r23
   45f28:	00474f00 	call	474f0 <_Bfree>
   45f2c:	800b883a 	mov	r5,r16
   45f30:	b809883a 	mov	r4,r23
   45f34:	00474f00 	call	474f0 <_Bfree>
   45f38:	e00b883a 	mov	r5,fp
   45f3c:	b809883a 	mov	r4,r23
   45f40:	00474f00 	call	474f0 <_Bfree>
   45f44:	d8801f17 	ldw	r2,124(sp)
   45f48:	d8c00417 	ldw	r3,16(sp)
   45f4c:	a8000005 	stb	zero,0(r21)
   45f50:	10c00015 	stw	r3,0(r2)
   45f54:	d8802117 	ldw	r2,132(sp)
   45f58:	103d4626 	beq	r2,zero,45474 <_dtoa_r+0xc8>
   45f5c:	15400015 	stw	r21,0(r2)
   45f60:	003d4406 	br	45474 <_dtoa_r+0xc8>
   45f64:	d8000915 	stw	zero,36(sp)
   45f68:	b0002416 	blt	r22,zero,45ffc <_dtoa_r+0xc50>
   45f6c:	d8000615 	stw	zero,24(sp)
   45f70:	d8800317 	ldw	r2,12(sp)
   45f74:	d8c00217 	ldw	r3,8(sp)
   45f78:	d8000815 	stw	zero,32(sp)
   45f7c:	b0ad883a 	add	r22,r22,r2
   45f80:	d8800415 	stw	r2,16(sp)
   45f84:	188002a8 	cmpgeui	r2,r3,10
   45f88:	103db326 	beq	r2,zero,45658 <_dtoa_r+0x2ac>
   45f8c:	00800044 	movi	r2,1
   45f90:	d8800715 	stw	r2,28(sp)
   45f94:	00bfffc4 	movi	r2,-1
   45f98:	04000044 	movi	r16,1
   45f9c:	d8000215 	stw	zero,8(sp)
   45fa0:	d8800515 	stw	r2,20(sp)
   45fa4:	d8001e15 	stw	zero,120(sp)
   45fa8:	d8800517 	ldw	r2,20(sp)
   45fac:	b8001115 	stw	zero,68(r23)
   45fb0:	000b883a 	mov	r5,zero
   45fb4:	d8800b15 	stw	r2,44(sp)
   45fb8:	003dc406 	br	456cc <_dtoa_r+0x320>
   45fbc:	188000e0 	cmpeqi	r2,r3,3
   45fc0:	d8000715 	stw	zero,28(sp)
   45fc4:	1002ac26 	beq	r2,zero,46a78 <_dtoa_r+0x16cc>
   45fc8:	d8801e17 	ldw	r2,120(sp)
   45fcc:	d8c00417 	ldw	r3,16(sp)
   45fd0:	10c5883a 	add	r2,r2,r3
   45fd4:	d8800b15 	stw	r2,44(sp)
   45fd8:	10800044 	addi	r2,r2,1
   45fdc:	d8800515 	stw	r2,20(sp)
   45fe0:	100d883a 	mov	r6,r2
   45fe4:	00bdae16 	blt	zero,r2,456a0 <_dtoa_r+0x2f4>
   45fe8:	01800044 	movi	r6,1
   45fec:	003dac06 	br	456a0 <_dtoa_r+0x2f4>
   45ff0:	00800044 	movi	r2,1
   45ff4:	d8800915 	stw	r2,36(sp)
   45ff8:	b03d890e 	bge	r22,zero,45620 <_dtoa_r+0x274>
   45ffc:	00800044 	movi	r2,1
   46000:	1405c83a 	sub	r2,r2,r16
   46004:	d8800615 	stw	r2,24(sp)
   46008:	002d883a 	mov	r22,zero
   4600c:	003d8506 	br	45624 <_dtoa_r+0x278>
   46010:	a809883a 	mov	r4,r21
   46014:	004e2200 	call	4e220 <__floatsidf>
   46018:	900d883a 	mov	r6,r18
   4601c:	b00f883a 	mov	r7,r22
   46020:	1009883a 	mov	r4,r2
   46024:	180b883a 	mov	r5,r3
   46028:	004ce9c0 	call	4ce9c <__eqdf2>
   4602c:	103d6926 	beq	r2,zero,455d4 <_dtoa_r+0x228>
   46030:	a8bfffc4 	addi	r2,r21,-1
   46034:	d8800315 	stw	r2,12(sp)
   46038:	003d6606 	br	455d4 <_dtoa_r+0x228>
   4603c:	00800174 	movhi	r2,5
   46040:	1083e604 	addi	r2,r2,3992
   46044:	d8800115 	stw	r2,4(sp)
   46048:	003d0a06 	br	45474 <_dtoa_r+0xc8>
   4604c:	dd000817 	ldw	r20,32(sp)
   46050:	dc800617 	ldw	r18,24(sp)
   46054:	0021883a 	mov	r16,zero
   46058:	003f3206 	br	45d24 <_dtoa_r+0x978>
   4605c:	e00b883a 	mov	r5,fp
   46060:	100d883a 	mov	r6,r2
   46064:	b809883a 	mov	r4,r23
   46068:	0047d780 	call	47d78 <__lshift>
   4606c:	1039883a 	mov	fp,r2
   46070:	003f6806 	br	45e14 <_dtoa_r+0xa68>
   46074:	00800704 	movi	r2,28
   46078:	003f5f06 	br	45df8 <_dtoa_r+0xa4c>
   4607c:	01000804 	movi	r4,32
   46080:	2089c83a 	sub	r4,r4,r2
   46084:	9908983a 	sll	r4,r19,r4
   46088:	003d1d06 	br	45500 <_dtoa_r+0x154>
   4608c:	04000044 	movi	r16,1
   46090:	003d7606 	br	4566c <_dtoa_r+0x2c0>
   46094:	100b883a 	mov	r5,r2
   46098:	b809883a 	mov	r4,r23
   4609c:	0047c300 	call	47c30 <__pow5mult>
   460a0:	d8c00217 	ldw	r3,8(sp)
   460a4:	1029883a 	mov	r20,r2
   460a8:	18c00090 	cmplti	r3,r3,2
   460ac:	1801511e 	bne	r3,zero,465f4 <_dtoa_r+0x1248>
   460b0:	0023883a 	mov	r17,zero
   460b4:	a0800417 	ldw	r2,16(r20)
   460b8:	10800104 	addi	r2,r2,4
   460bc:	100490ba 	slli	r2,r2,2
   460c0:	a085883a 	add	r2,r20,r2
   460c4:	11000017 	ldw	r4,0(r2)
   460c8:	00477a80 	call	477a8 <__hi0bits>
   460cc:	00c00804 	movi	r3,32
   460d0:	1885c83a 	sub	r2,r3,r2
   460d4:	003f3f06 	br	45dd4 <_dtoa_r+0xa28>
   460d8:	800b883a 	mov	r5,r16
   460dc:	000f883a 	mov	r7,zero
   460e0:	01800284 	movi	r6,10
   460e4:	b809883a 	mov	r4,r23
   460e8:	00475140 	call	47514 <__multadd>
   460ec:	1021883a 	mov	r16,r2
   460f0:	d8800b17 	ldw	r2,44(sp)
   460f4:	00824b0e 	bge	zero,r2,46a24 <_dtoa_r+0x1678>
   460f8:	dd400415 	stw	r21,16(sp)
   460fc:	d8800515 	stw	r2,20(sp)
   46100:	0480ac16 	blt	zero,r18,463b4 <_dtoa_r+0x1008>
   46104:	8801731e 	bne	r17,zero,466d4 <_dtoa_r+0x1328>
   46108:	8025883a 	mov	r18,r16
   4610c:	dd800117 	ldw	r22,4(sp)
   46110:	d9000517 	ldw	r4,20(sp)
   46114:	98c0004c 	andi	r3,r19,1
   46118:	b0bfffc4 	addi	r2,r22,-1
   4611c:	1105883a 	add	r2,r2,r4
   46120:	d8800515 	stw	r2,20(sp)
   46124:	d8800217 	ldw	r2,8(sp)
   46128:	d8c00815 	stw	r3,32(sp)
   4612c:	1884b03a 	or	r2,r3,r2
   46130:	d8800715 	stw	r2,28(sp)
   46134:	00002906 	br	461dc <_dtoa_r+0xe30>
   46138:	e009883a 	mov	r4,fp
   4613c:	0047f000 	call	47f00 <__mcmp>
   46140:	980b883a 	mov	r5,r19
   46144:	b809883a 	mov	r4,r23
   46148:	d8800315 	stw	r2,12(sp)
   4614c:	00474f00 	call	474f0 <_Bfree>
   46150:	d8800317 	ldw	r2,12(sp)
   46154:	1000021e 	bne	r2,zero,46160 <_dtoa_r+0xdb4>
   46158:	d8c00717 	ldw	r3,28(sp)
   4615c:	18022326 	beq	r3,zero,469ec <_dtoa_r+0x1640>
   46160:	b4c00044 	addi	r19,r22,1
   46164:	88012916 	blt	r17,zero,4660c <_dtoa_r+0x1260>
   46168:	d8c00217 	ldw	r3,8(sp)
   4616c:	88e2b03a 	or	r17,r17,r3
   46170:	d8c00817 	ldw	r3,32(sp)
   46174:	1c62b03a 	or	r17,r3,r17
   46178:	88012426 	beq	r17,zero,4660c <_dtoa_r+0x1260>
   4617c:	00816f16 	blt	zero,r2,4673c <_dtoa_r+0x1390>
   46180:	d8800517 	ldw	r2,20(sp)
   46184:	b5400005 	stb	r21,0(r22)
   46188:	15817926 	beq	r2,r22,46770 <_dtoa_r+0x13c4>
   4618c:	e00b883a 	mov	r5,fp
   46190:	000f883a 	mov	r7,zero
   46194:	01800284 	movi	r6,10
   46198:	b809883a 	mov	r4,r23
   4619c:	00475140 	call	47514 <__multadd>
   461a0:	1039883a 	mov	fp,r2
   461a4:	800b883a 	mov	r5,r16
   461a8:	000f883a 	mov	r7,zero
   461ac:	01800284 	movi	r6,10
   461b0:	b809883a 	mov	r4,r23
   461b4:	84801f26 	beq	r16,r18,46234 <_dtoa_r+0xe88>
   461b8:	00475140 	call	47514 <__multadd>
   461bc:	900b883a 	mov	r5,r18
   461c0:	000f883a 	mov	r7,zero
   461c4:	01800284 	movi	r6,10
   461c8:	b809883a 	mov	r4,r23
   461cc:	1021883a 	mov	r16,r2
   461d0:	00475140 	call	47514 <__multadd>
   461d4:	1025883a 	mov	r18,r2
   461d8:	982d883a 	mov	r22,r19
   461dc:	a00b883a 	mov	r5,r20
   461e0:	e009883a 	mov	r4,fp
   461e4:	004518c0 	call	4518c <quorem>
   461e8:	800b883a 	mov	r5,r16
   461ec:	e009883a 	mov	r4,fp
   461f0:	102b883a 	mov	r21,r2
   461f4:	d8800615 	stw	r2,24(sp)
   461f8:	0047f000 	call	47f00 <__mcmp>
   461fc:	a00b883a 	mov	r5,r20
   46200:	900d883a 	mov	r6,r18
   46204:	b809883a 	mov	r4,r23
   46208:	1023883a 	mov	r17,r2
   4620c:	0047f580 	call	47f58 <__mdiff>
   46210:	1027883a 	mov	r19,r2
   46214:	10800317 	ldw	r2,12(r2)
   46218:	ad400c04 	addi	r21,r21,48
   4621c:	980b883a 	mov	r5,r19
   46220:	103fc526 	beq	r2,zero,46138 <_dtoa_r+0xd8c>
   46224:	b809883a 	mov	r4,r23
   46228:	00474f00 	call	474f0 <_Bfree>
   4622c:	00800044 	movi	r2,1
   46230:	003fcb06 	br	46160 <_dtoa_r+0xdb4>
   46234:	00475140 	call	47514 <__multadd>
   46238:	1021883a 	mov	r16,r2
   4623c:	1025883a 	mov	r18,r2
   46240:	003fe506 	br	461d8 <_dtoa_r+0xe2c>
   46244:	d8800217 	ldw	r2,8(sp)
   46248:	108000d0 	cmplti	r2,r2,3
   4624c:	10003e26 	beq	r2,zero,46348 <_dtoa_r+0xf9c>
   46250:	d8800717 	ldw	r2,28(sp)
   46254:	103faa1e 	bne	r2,zero,46100 <_dtoa_r+0xd54>
   46258:	a00b883a 	mov	r5,r20
   4625c:	e009883a 	mov	r4,fp
   46260:	004518c0 	call	4518c <quorem>
   46264:	14c00c04 	addi	r19,r2,48
   46268:	d8800117 	ldw	r2,4(sp)
   4626c:	0023883a 	mov	r17,zero
   46270:	15400044 	addi	r21,r2,1
   46274:	14c00005 	stb	r19,0(r2)
   46278:	d8800417 	ldw	r2,16(sp)
   4627c:	10800044 	addi	r2,r2,1
   46280:	d8800415 	stw	r2,16(sp)
   46284:	003f0906 	br	45eac <_dtoa_r+0xb00>
   46288:	a00b883a 	mov	r5,r20
   4628c:	e009883a 	mov	r4,fp
   46290:	0047f000 	call	47f00 <__mcmp>
   46294:	103ee70e 	bge	r2,zero,45e34 <_dtoa_r+0xa88>
   46298:	e00b883a 	mov	r5,fp
   4629c:	000f883a 	mov	r7,zero
   462a0:	01800284 	movi	r6,10
   462a4:	b809883a 	mov	r4,r23
   462a8:	00475140 	call	47514 <__multadd>
   462ac:	d8c00417 	ldw	r3,16(sp)
   462b0:	1039883a 	mov	fp,r2
   462b4:	d8800717 	ldw	r2,28(sp)
   462b8:	1d7fffc4 	addi	r21,r3,-1
   462bc:	103f861e 	bne	r2,zero,460d8 <_dtoa_r+0xd2c>
   462c0:	d8800b17 	ldw	r2,44(sp)
   462c4:	0081d20e 	bge	zero,r2,46a10 <_dtoa_r+0x1664>
   462c8:	d8800515 	stw	r2,20(sp)
   462cc:	003ee006 	br	45e50 <_dtoa_r+0xaa4>
   462d0:	00800174 	movhi	r2,5
   462d4:	1007883a 	mov	r3,r2
   462d8:	18c3ef04 	addi	r3,r3,4028
   462dc:	00800174 	movhi	r2,5
   462e0:	d8c00115 	stw	r3,4(sp)
   462e4:	1083efc4 	addi	r2,r2,4031
   462e8:	003ded06 	br	45aa0 <_dtoa_r+0x6f4>
   462ec:	00800044 	movi	r2,1
   462f0:	d8800715 	stw	r2,28(sp)
   462f4:	003f3406 	br	45fc8 <_dtoa_r+0xc1c>
   462f8:	983eb21e 	bne	r19,zero,45dc4 <_dtoa_r+0xa18>
   462fc:	00800434 	movhi	r2,16
   46300:	10bfffc4 	addi	r2,r2,-1
   46304:	8884703a 	and	r2,r17,r2
   46308:	103eae1e 	bne	r2,zero,45dc4 <_dtoa_r+0xa18>
   4630c:	8c5ffc2c 	andhi	r17,r17,32752
   46310:	883eac26 	beq	r17,zero,45dc4 <_dtoa_r+0xa18>
   46314:	d8800617 	ldw	r2,24(sp)
   46318:	b5800044 	addi	r22,r22,1
   4631c:	04400044 	movi	r17,1
   46320:	10800044 	addi	r2,r2,1
   46324:	d8800615 	stw	r2,24(sp)
   46328:	003ea706 	br	45dc8 <_dtoa_r+0xa1c>
   4632c:	00800044 	movi	r2,1
   46330:	d8800515 	stw	r2,20(sp)
   46334:	d8801e15 	stw	r2,120(sp)
   46338:	003f1b06 	br	45fa8 <_dtoa_r+0xbfc>
   4633c:	d8800b17 	ldw	r2,44(sp)
   46340:	dd400415 	stw	r21,16(sp)
   46344:	d8800515 	stw	r2,20(sp)
   46348:	d8800517 	ldw	r2,20(sp)
   4634c:	103e081e 	bne	r2,zero,45b70 <_dtoa_r+0x7c4>
   46350:	a00b883a 	mov	r5,r20
   46354:	b809883a 	mov	r4,r23
   46358:	000f883a 	mov	r7,zero
   4635c:	01800144 	movi	r6,5
   46360:	00475140 	call	47514 <__multadd>
   46364:	100b883a 	mov	r5,r2
   46368:	e009883a 	mov	r4,fp
   4636c:	1029883a 	mov	r20,r2
   46370:	0047f000 	call	47f00 <__mcmp>
   46374:	00bdfe0e 	bge	zero,r2,45b70 <_dtoa_r+0x7c4>
   46378:	d8c00117 	ldw	r3,4(sp)
   4637c:	00800c44 	movi	r2,49
   46380:	18800005 	stb	r2,0(r3)
   46384:	d8800417 	ldw	r2,16(sp)
   46388:	1d400044 	addi	r21,r3,1
   4638c:	14400044 	addi	r17,r2,1
   46390:	a00b883a 	mov	r5,r20
   46394:	b809883a 	mov	r4,r23
   46398:	00474f00 	call	474f0 <_Bfree>
   4639c:	88800044 	addi	r2,r17,1
   463a0:	d8800415 	stw	r2,16(sp)
   463a4:	803ee11e 	bne	r16,zero,45f2c <_dtoa_r+0xb80>
   463a8:	003ee306 	br	45f38 <_dtoa_r+0xb8c>
   463ac:	b005883a 	mov	r2,r22
   463b0:	003e6006 	br	45d34 <_dtoa_r+0x988>
   463b4:	800b883a 	mov	r5,r16
   463b8:	900d883a 	mov	r6,r18
   463bc:	b809883a 	mov	r4,r23
   463c0:	0047d780 	call	47d78 <__lshift>
   463c4:	1021883a 	mov	r16,r2
   463c8:	003f4e06 	br	46104 <_dtoa_r+0xd58>
   463cc:	1529c83a 	sub	r20,r2,r20
   463d0:	003e4906 	br	45cf8 <_dtoa_r+0x94c>
   463d4:	dcc00c15 	stw	r19,48(sp)
   463d8:	8825883a 	mov	r18,r17
   463dc:	05400084 	movi	r21,2
   463e0:	003cdf06 	br	45760 <_dtoa_r+0x3b4>
   463e4:	00800044 	movi	r2,1
   463e8:	003ead06 	br	45ea0 <_dtoa_r+0xaf4>
   463ec:	00800044 	movi	r2,1
   463f0:	d8800715 	stw	r2,28(sp)
   463f4:	003ca506 	br	4568c <_dtoa_r+0x2e0>
   463f8:	1000021e 	bne	r2,zero,46404 <_dtoa_r+0x1058>
   463fc:	98c0004c 	andi	r3,r19,1
   46400:	183eb41e 	bne	r3,zero,45ed4 <_dtoa_r+0xb28>
   46404:	2005883a 	mov	r2,r4
   46408:	00000206 	br	46414 <_dtoa_r+0x1068>
   4640c:	a8bfff83 	ldbu	r2,-2(r21)
   46410:	182b883a 	mov	r21,r3
   46414:	10803fcc 	andi	r2,r2,255
   46418:	1080201c 	xori	r2,r2,128
   4641c:	10bfe004 	addi	r2,r2,-128
   46420:	10800c18 	cmpnei	r2,r2,48
   46424:	a8ffffc4 	addi	r3,r21,-1
   46428:	103ff826 	beq	r2,zero,4640c <_dtoa_r+0x1060>
   4642c:	003eb606 	br	45f08 <_dtoa_r+0xb5c>
   46430:	d8c00117 	ldw	r3,4(sp)
   46434:	00800c44 	movi	r2,49
   46438:	18800005 	stb	r2,0(r3)
   4643c:	d8800417 	ldw	r2,16(sp)
   46440:	10800044 	addi	r2,r2,1
   46444:	d8800415 	stw	r2,16(sp)
   46448:	003eaf06 	br	45f08 <_dtoa_r+0xb5c>
   4644c:	d8c00a17 	ldw	r3,40(sp)
   46450:	18011826 	beq	r3,zero,468b4 <_dtoa_r+0x1508>
   46454:	d8c00617 	ldw	r3,24(sp)
   46458:	10810cc4 	addi	r2,r2,1075
   4645c:	b0ad883a 	add	r22,r22,r2
   46460:	1885883a 	add	r2,r3,r2
   46464:	dd000817 	ldw	r20,32(sp)
   46468:	1825883a 	mov	r18,r3
   4646c:	d8800615 	stw	r2,24(sp)
   46470:	003e2806 	br	45d14 <_dtoa_r+0x968>
   46474:	a809883a 	mov	r4,r21
   46478:	004e2200 	call	4e220 <__floatsidf>
   4647c:	800d883a 	mov	r6,r16
   46480:	900f883a 	mov	r7,r18
   46484:	1009883a 	mov	r4,r2
   46488:	180b883a 	mov	r5,r3
   4648c:	004d0ec0 	call	4d0ec <__muldf3>
   46490:	000d883a 	mov	r6,zero
   46494:	01d00734 	movhi	r7,16412
   46498:	1009883a 	mov	r4,r2
   4649c:	180b883a 	mov	r5,r3
   464a0:	004bc7c0 	call	4bc7c <__adddf3>
   464a4:	1029883a 	mov	r20,r2
   464a8:	00bf3034 	movhi	r2,64704
   464ac:	1885883a 	add	r2,r3,r2
   464b0:	d8800c15 	stw	r2,48(sp)
   464b4:	8009883a 	mov	r4,r16
   464b8:	900b883a 	mov	r5,r18
   464bc:	000d883a 	mov	r6,zero
   464c0:	01d00534 	movhi	r7,16404
   464c4:	004d8980 	call	4d898 <__subdf3>
   464c8:	dd400c17 	ldw	r21,48(sp)
   464cc:	a00d883a 	mov	r6,r20
   464d0:	1009883a 	mov	r4,r2
   464d4:	a80f883a 	mov	r7,r21
   464d8:	180b883a 	mov	r5,r3
   464dc:	1025883a 	mov	r18,r2
   464e0:	1821883a 	mov	r16,r3
   464e4:	004cf1c0 	call	4cf1c <__gedf2>
   464e8:	00812f16 	blt	zero,r2,469a8 <_dtoa_r+0x15fc>
   464ec:	a9e0003c 	xorhi	r7,r21,32768
   464f0:	a00d883a 	mov	r6,r20
   464f4:	9009883a 	mov	r4,r18
   464f8:	800b883a 	mov	r5,r16
   464fc:	004d0040 	call	4d004 <__ledf2>
   46500:	103d7d0e 	bge	r2,zero,45af8 <_dtoa_r+0x74c>
   46504:	0029883a 	mov	r20,zero
   46508:	0021883a 	mov	r16,zero
   4650c:	003d9806 	br	45b70 <_dtoa_r+0x7c4>
   46510:	d9800817 	ldw	r6,32(sp)
   46514:	e00b883a 	mov	r5,fp
   46518:	b809883a 	mov	r4,r23
   4651c:	0047c300 	call	47c30 <__pow5mult>
   46520:	1039883a 	mov	fp,r2
   46524:	003e1e06 	br	45da0 <_dtoa_r+0x9f4>
   46528:	d8800417 	ldw	r2,16(sp)
   4652c:	1000ed26 	beq	r2,zero,468e4 <_dtoa_r+0x1538>
   46530:	00a9c83a 	sub	r20,zero,r2
   46534:	a08003cc 	andi	r2,r20,15
   46538:	100690fa 	slli	r3,r2,3
   4653c:	00800174 	movhi	r2,5
   46540:	10842f04 	addi	r2,r2,4284
   46544:	10c5883a 	add	r2,r2,r3
   46548:	11800017 	ldw	r6,0(r2)
   4654c:	11c00117 	ldw	r7,4(r2)
   46550:	a029d13a 	srai	r20,r20,4
   46554:	9809883a 	mov	r4,r19
   46558:	880b883a 	mov	r5,r17
   4655c:	004d0ec0 	call	4d0ec <__muldf3>
   46560:	1021883a 	mov	r16,r2
   46564:	1825883a 	mov	r18,r3
   46568:	a0013826 	beq	r20,zero,46a4c <_dtoa_r+0x16a0>
   4656c:	02000174 	movhi	r8,5
   46570:	05400084 	movi	r21,2
   46574:	42042504 	addi	r8,r8,4244
   46578:	1009883a 	mov	r4,r2
   4657c:	9805883a 	mov	r2,r19
   46580:	180b883a 	mov	r5,r3
   46584:	dc000c15 	stw	r16,48(sp)
   46588:	8827883a 	mov	r19,r17
   4658c:	0007883a 	mov	r3,zero
   46590:	a823883a 	mov	r17,r21
   46594:	4021883a 	mov	r16,r8
   46598:	102b883a 	mov	r21,r2
   4659c:	a180004c 	andi	r6,r20,1
   465a0:	30000726 	beq	r6,zero,465c0 <_dtoa_r+0x1214>
   465a4:	81800017 	ldw	r6,0(r16)
   465a8:	81c00117 	ldw	r7,4(r16)
   465ac:	8c400044 	addi	r17,r17,1
   465b0:	004d0ec0 	call	4d0ec <__muldf3>
   465b4:	180b883a 	mov	r5,r3
   465b8:	1009883a 	mov	r4,r2
   465bc:	00c00044 	movi	r3,1
   465c0:	a029d07a 	srai	r20,r20,1
   465c4:	84000204 	addi	r16,r16,8
   465c8:	a03ff41e 	bne	r20,zero,4659c <_dtoa_r+0x11f0>
   465cc:	a805883a 	mov	r2,r21
   465d0:	18c03fcc 	andi	r3,r3,255
   465d4:	882b883a 	mov	r21,r17
   465d8:	dc000c17 	ldw	r16,48(sp)
   465dc:	9823883a 	mov	r17,r19
   465e0:	1027883a 	mov	r19,r2
   465e4:	183c7726 	beq	r3,zero,457c4 <_dtoa_r+0x418>
   465e8:	2021883a 	mov	r16,r4
   465ec:	2825883a 	mov	r18,r5
   465f0:	003c7406 	br	457c4 <_dtoa_r+0x418>
   465f4:	983eae1e 	bne	r19,zero,460b0 <_dtoa_r+0xd04>
   465f8:	00800434 	movhi	r2,16
   465fc:	10bfffc4 	addi	r2,r2,-1
   46600:	8884703a 	and	r2,r17,r2
   46604:	103f4126 	beq	r2,zero,4630c <_dtoa_r+0xf60>
   46608:	003ea906 	br	460b0 <_dtoa_r+0xd04>
   4660c:	9807883a 	mov	r3,r19
   46610:	a827883a 	mov	r19,r21
   46614:	182b883a 	mov	r21,r3
   46618:	d8c00417 	ldw	r3,16(sp)
   4661c:	18c00044 	addi	r3,r3,1
   46620:	d8c00415 	stw	r3,16(sp)
   46624:	00800d0e 	bge	zero,r2,4665c <_dtoa_r+0x12b0>
   46628:	e00b883a 	mov	r5,fp
   4662c:	b809883a 	mov	r4,r23
   46630:	01800044 	movi	r6,1
   46634:	0047d780 	call	47d78 <__lshift>
   46638:	a00b883a 	mov	r5,r20
   4663c:	1009883a 	mov	r4,r2
   46640:	1039883a 	mov	fp,r2
   46644:	0047f000 	call	47f00 <__mcmp>
   46648:	0080df0e 	bge	zero,r2,469c8 <_dtoa_r+0x161c>
   4664c:	98c00e60 	cmpeqi	r3,r19,57
   46650:	1800ce1e 	bne	r3,zero,4698c <_dtoa_r+0x15e0>
   46654:	d8800617 	ldw	r2,24(sp)
   46658:	14c00c44 	addi	r19,r2,49
   4665c:	8023883a 	mov	r17,r16
   46660:	b4c00005 	stb	r19,0(r22)
   46664:	9021883a 	mov	r16,r18
   46668:	003e2706 	br	45f08 <_dtoa_r+0xb5c>
   4666c:	b82b883a 	mov	r21,r23
   46670:	ddc00217 	ldw	r23,8(sp)
   46674:	200d883a 	mov	r6,r4
   46678:	280f883a 	mov	r7,r5
   4667c:	004bc7c0 	call	4bc7c <__adddf3>
   46680:	180b883a 	mov	r5,r3
   46684:	800d883a 	mov	r6,r16
   46688:	900f883a 	mov	r7,r18
   4668c:	1009883a 	mov	r4,r2
   46690:	1823883a 	mov	r17,r3
   46694:	1027883a 	mov	r19,r2
   46698:	004cf1c0 	call	4cf1c <__gedf2>
   4669c:	d8c00417 	ldw	r3,16(sp)
   466a0:	18c00044 	addi	r3,r3,1
   466a4:	d8c00415 	stw	r3,16(sp)
   466a8:	00808c16 	blt	zero,r2,468dc <_dtoa_r+0x1530>
   466ac:	800d883a 	mov	r6,r16
   466b0:	900f883a 	mov	r7,r18
   466b4:	9809883a 	mov	r4,r19
   466b8:	880b883a 	mov	r5,r17
   466bc:	004ce9c0 	call	4ce9c <__eqdf2>
   466c0:	1000021e 	bne	r2,zero,466cc <_dtoa_r+0x1320>
   466c4:	ad40004c 	andi	r21,r21,1
   466c8:	a800841e 	bne	r21,zero,468dc <_dtoa_r+0x1530>
   466cc:	a02b883a 	mov	r21,r20
   466d0:	003e1906 	br	45f38 <_dtoa_r+0xb8c>
   466d4:	81400117 	ldw	r5,4(r16)
   466d8:	b809883a 	mov	r4,r23
   466dc:	004744c0 	call	4744c <_Balloc>
   466e0:	1023883a 	mov	r17,r2
   466e4:	1000f326 	beq	r2,zero,46ab4 <_dtoa_r+0x1708>
   466e8:	81800417 	ldw	r6,16(r16)
   466ec:	81400304 	addi	r5,r16,12
   466f0:	11000304 	addi	r4,r2,12
   466f4:	31800084 	addi	r6,r6,2
   466f8:	300c90ba 	slli	r6,r6,2
   466fc:	00472200 	call	47220 <memcpy>
   46700:	01800044 	movi	r6,1
   46704:	880b883a 	mov	r5,r17
   46708:	b809883a 	mov	r4,r23
   4670c:	0047d780 	call	47d78 <__lshift>
   46710:	1025883a 	mov	r18,r2
   46714:	003e7d06 	br	4610c <_dtoa_r+0xd60>
   46718:	e00b883a 	mov	r5,fp
   4671c:	b809883a 	mov	r4,r23
   46720:	0047c300 	call	47c30 <__pow5mult>
   46724:	1039883a 	mov	fp,r2
   46728:	003d9d06 	br	45da0 <_dtoa_r+0x9f4>
   4672c:	d8800617 	ldw	r2,24(sp)
   46730:	d8c00517 	ldw	r3,20(sp)
   46734:	10e5c83a 	sub	r18,r2,r3
   46738:	003d7606 	br	45d14 <_dtoa_r+0x968>
   4673c:	d8c00417 	ldw	r3,16(sp)
   46740:	9805883a 	mov	r2,r19
   46744:	a827883a 	mov	r19,r21
   46748:	18c00044 	addi	r3,r3,1
   4674c:	102b883a 	mov	r21,r2
   46750:	d8c00415 	stw	r3,16(sp)
   46754:	98800e58 	cmpnei	r2,r19,57
   46758:	10008c26 	beq	r2,zero,4698c <_dtoa_r+0x15e0>
   4675c:	98c00044 	addi	r3,r19,1
   46760:	8023883a 	mov	r17,r16
   46764:	b0c00005 	stb	r3,0(r22)
   46768:	9021883a 	mov	r16,r18
   4676c:	003de606 	br	45f08 <_dtoa_r+0xb5c>
   46770:	9805883a 	mov	r2,r19
   46774:	a827883a 	mov	r19,r21
   46778:	102b883a 	mov	r21,r2
   4677c:	d8800417 	ldw	r2,16(sp)
   46780:	8023883a 	mov	r17,r16
   46784:	9021883a 	mov	r16,r18
   46788:	10800044 	addi	r2,r2,1
   4678c:	d8800415 	stw	r2,16(sp)
   46790:	003dc606 	br	45eac <_dtoa_r+0xb00>
   46794:	d9400c17 	ldw	r5,48(sp)
   46798:	a009883a 	mov	r4,r20
   4679c:	004d0ec0 	call	4d0ec <__muldf3>
   467a0:	d9800d17 	ldw	r6,52(sp)
   467a4:	d9400117 	ldw	r5,4(sp)
   467a8:	d9001017 	ldw	r4,64(sp)
   467ac:	d8800c15 	stw	r2,48(sp)
   467b0:	d8c00d15 	stw	r3,52(sp)
   467b4:	29000005 	stb	r4,0(r5)
   467b8:	31000058 	cmpnei	r4,r6,1
   467bc:	29a9883a 	add	r20,r5,r6
   467c0:	2000a026 	beq	r4,zero,46a44 <_dtoa_r+0x1698>
   467c4:	dc400e15 	stw	r17,56(sp)
   467c8:	8009883a 	mov	r4,r16
   467cc:	900b883a 	mov	r5,r18
   467d0:	a823883a 	mov	r17,r21
   467d4:	000d883a 	mov	r6,zero
   467d8:	01d00934 	movhi	r7,16420
   467dc:	004d0ec0 	call	4d0ec <__muldf3>
   467e0:	180b883a 	mov	r5,r3
   467e4:	1009883a 	mov	r4,r2
   467e8:	1825883a 	mov	r18,r3
   467ec:	102b883a 	mov	r21,r2
   467f0:	004e1a00 	call	4e1a0 <__fixdfsi>
   467f4:	1009883a 	mov	r4,r2
   467f8:	1021883a 	mov	r16,r2
   467fc:	004e2200 	call	4e220 <__floatsidf>
   46800:	a809883a 	mov	r4,r21
   46804:	900b883a 	mov	r5,r18
   46808:	100d883a 	mov	r6,r2
   4680c:	180f883a 	mov	r7,r3
   46810:	8c400044 	addi	r17,r17,1
   46814:	84000c04 	addi	r16,r16,48
   46818:	004d8980 	call	4d898 <__subdf3>
   4681c:	8c3fffc5 	stb	r16,-1(r17)
   46820:	1009883a 	mov	r4,r2
   46824:	180b883a 	mov	r5,r3
   46828:	a47fea1e 	bne	r20,r17,467d4 <_dtoa_r+0x1428>
   4682c:	dc400e17 	ldw	r17,56(sp)
   46830:	1021883a 	mov	r16,r2
   46834:	1825883a 	mov	r18,r3
   46838:	d9000c17 	ldw	r4,48(sp)
   4683c:	d9400d17 	ldw	r5,52(sp)
   46840:	000d883a 	mov	r6,zero
   46844:	01cff834 	movhi	r7,16352
   46848:	004bc7c0 	call	4bc7c <__adddf3>
   4684c:	800d883a 	mov	r6,r16
   46850:	900f883a 	mov	r7,r18
   46854:	1009883a 	mov	r4,r2
   46858:	180b883a 	mov	r5,r3
   4685c:	004d0040 	call	4d004 <__ledf2>
   46860:	10005416 	blt	r2,zero,469b4 <_dtoa_r+0x1608>
   46864:	d9800c17 	ldw	r6,48(sp)
   46868:	d9c00d17 	ldw	r7,52(sp)
   4686c:	0009883a 	mov	r4,zero
   46870:	014ff834 	movhi	r5,16352
   46874:	004d8980 	call	4d898 <__subdf3>
   46878:	800d883a 	mov	r6,r16
   4687c:	900f883a 	mov	r7,r18
   46880:	1009883a 	mov	r4,r2
   46884:	180b883a 	mov	r5,r3
   46888:	004cf1c0 	call	4cf1c <__gedf2>
   4688c:	00bc9a0e 	bge	zero,r2,45af8 <_dtoa_r+0x74c>
   46890:	a0bfffc7 	ldb	r2,-1(r20)
   46894:	a02b883a 	mov	r21,r20
   46898:	a53fffc4 	addi	r20,r20,-1
   4689c:	10800c20 	cmpeqi	r2,r2,48
   468a0:	103ffb1e 	bne	r2,zero,46890 <_dtoa_r+0x14e4>
   468a4:	d8801117 	ldw	r2,68(sp)
   468a8:	10800044 	addi	r2,r2,1
   468ac:	d8800415 	stw	r2,16(sp)
   468b0:	003da106 	br	45f38 <_dtoa_r+0xb8c>
   468b4:	d8c01217 	ldw	r3,72(sp)
   468b8:	d9000617 	ldw	r4,24(sp)
   468bc:	00800d84 	movi	r2,54
   468c0:	10c5c83a 	sub	r2,r2,r3
   468c4:	b0ad883a 	add	r22,r22,r2
   468c8:	2085883a 	add	r2,r4,r2
   468cc:	dd000817 	ldw	r20,32(sp)
   468d0:	2025883a 	mov	r18,r4
   468d4:	d8800615 	stw	r2,24(sp)
   468d8:	003d0e06 	br	45d14 <_dtoa_r+0x968>
   468dc:	d9000117 	ldw	r4,4(sp)
   468e0:	003c4b06 	br	45a10 <_dtoa_r+0x664>
   468e4:	9821883a 	mov	r16,r19
   468e8:	8825883a 	mov	r18,r17
   468ec:	05400084 	movi	r21,2
   468f0:	003bb406 	br	457c4 <_dtoa_r+0x418>
   468f4:	d8800517 	ldw	r2,20(sp)
   468f8:	103ede26 	beq	r2,zero,46474 <_dtoa_r+0x10c8>
   468fc:	d8800b17 	ldw	r2,44(sp)
   46900:	00bc7d0e 	bge	zero,r2,45af8 <_dtoa_r+0x74c>
   46904:	900b883a 	mov	r5,r18
   46908:	8009883a 	mov	r4,r16
   4690c:	000d883a 	mov	r6,zero
   46910:	01d00934 	movhi	r7,16420
   46914:	004d0ec0 	call	4d0ec <__muldf3>
   46918:	a9000044 	addi	r4,r21,1
   4691c:	1021883a 	mov	r16,r2
   46920:	1825883a 	mov	r18,r3
   46924:	004e2200 	call	4e220 <__floatsidf>
   46928:	800d883a 	mov	r6,r16
   4692c:	900f883a 	mov	r7,r18
   46930:	1009883a 	mov	r4,r2
   46934:	180b883a 	mov	r5,r3
   46938:	004d0ec0 	call	4d0ec <__muldf3>
   4693c:	1009883a 	mov	r4,r2
   46940:	000d883a 	mov	r6,zero
   46944:	01d00734 	movhi	r7,16412
   46948:	180b883a 	mov	r5,r3
   4694c:	004bc7c0 	call	4bc7c <__adddf3>
   46950:	d9000417 	ldw	r4,16(sp)
   46954:	1029883a 	mov	r20,r2
   46958:	00bf3034 	movhi	r2,64704
   4695c:	1887883a 	add	r3,r3,r2
   46960:	d8800b17 	ldw	r2,44(sp)
   46964:	213fffc4 	addi	r4,r4,-1
   46968:	d9001115 	stw	r4,68(sp)
   4696c:	d8c00c15 	stw	r3,48(sp)
   46970:	d8800d15 	stw	r2,52(sp)
   46974:	003bb106 	br	4583c <_dtoa_r+0x490>
   46978:	d8800417 	ldw	r2,16(sp)
   4697c:	00c00c44 	movi	r3,49
   46980:	10800044 	addi	r2,r2,1
   46984:	d8800415 	stw	r2,16(sp)
   46988:	003c2a06 	br	45a34 <_dtoa_r+0x688>
   4698c:	00800e44 	movi	r2,57
   46990:	8023883a 	mov	r17,r16
   46994:	d9400117 	ldw	r5,4(sp)
   46998:	b0800005 	stb	r2,0(r22)
   4699c:	9021883a 	mov	r16,r18
   469a0:	01000e44 	movi	r4,57
   469a4:	003d5006 	br	45ee8 <_dtoa_r+0xb3c>
   469a8:	0029883a 	mov	r20,zero
   469ac:	0021883a 	mov	r16,zero
   469b0:	003e7106 	br	46378 <_dtoa_r+0xfcc>
   469b4:	d8801117 	ldw	r2,68(sp)
   469b8:	d9000117 	ldw	r4,4(sp)
   469bc:	10800044 	addi	r2,r2,1
   469c0:	d8800415 	stw	r2,16(sp)
   469c4:	003c1206 	br	45a10 <_dtoa_r+0x664>
   469c8:	103f241e 	bne	r2,zero,4665c <_dtoa_r+0x12b0>
   469cc:	9880004c 	andi	r2,r19,1
   469d0:	103f1e1e 	bne	r2,zero,4664c <_dtoa_r+0x12a0>
   469d4:	003f2106 	br	4665c <_dtoa_r+0x12b0>
   469d8:	d8801117 	ldw	r2,68(sp)
   469dc:	ddc00d17 	ldw	r23,52(sp)
   469e0:	10800044 	addi	r2,r2,1
   469e4:	d8800415 	stw	r2,16(sp)
   469e8:	003d5306 	br	45f38 <_dtoa_r+0xb8c>
   469ec:	d8c00417 	ldw	r3,16(sp)
   469f0:	a8800e60 	cmpeqi	r2,r21,57
   469f4:	a827883a 	mov	r19,r21
   469f8:	18c00044 	addi	r3,r3,1
   469fc:	d8c00415 	stw	r3,16(sp)
   46a00:	b5400044 	addi	r21,r22,1
   46a04:	103fe11e 	bne	r2,zero,4698c <_dtoa_r+0x15e0>
   46a08:	047f1216 	blt	zero,r17,46654 <_dtoa_r+0x12a8>
   46a0c:	003f1306 	br	4665c <_dtoa_r+0x12b0>
   46a10:	d8800217 	ldw	r2,8(sp)
   46a14:	108000c8 	cmpgei	r2,r2,3
   46a18:	103e481e 	bne	r2,zero,4633c <_dtoa_r+0xf90>
   46a1c:	dd400415 	stw	r21,16(sp)
   46a20:	003e0d06 	br	46258 <_dtoa_r+0xeac>
   46a24:	d8800217 	ldw	r2,8(sp)
   46a28:	108000c8 	cmpgei	r2,r2,3
   46a2c:	103e431e 	bne	r2,zero,4633c <_dtoa_r+0xf90>
   46a30:	d8800b17 	ldw	r2,44(sp)
   46a34:	dd400415 	stw	r21,16(sp)
   46a38:	d8800515 	stw	r2,20(sp)
   46a3c:	04bdb10e 	bge	zero,r18,46104 <_dtoa_r+0xd58>
   46a40:	003e5c06 	br	463b4 <_dtoa_r+0x1008>
   46a44:	a829883a 	mov	r20,r21
   46a48:	003f7b06 	br	46838 <_dtoa_r+0x148c>
   46a4c:	05400084 	movi	r21,2
   46a50:	003b5c06 	br	457c4 <_dtoa_r+0x418>
   46a54:	01c00174 	movhi	r7,5
   46a58:	01000174 	movhi	r4,5
   46a5c:	39c3f304 	addi	r7,r7,4044
   46a60:	000d883a 	mov	r6,zero
   46a64:	01406a84 	movi	r5,426
   46a68:	2103f804 	addi	r4,r4,4064
   46a6c:	004a1300 	call	4a130 <__assert_func>
   46a70:	000b883a 	mov	r5,zero
   46a74:	003b1506 	br	456cc <_dtoa_r+0x320>
   46a78:	b8001115 	stw	zero,68(r23)
   46a7c:	000b883a 	mov	r5,zero
   46a80:	b809883a 	mov	r4,r23
   46a84:	004744c0 	call	4744c <_Balloc>
   46a88:	d8800115 	stw	r2,4(sp)
   46a8c:	103ff126 	beq	r2,zero,46a54 <_dtoa_r+0x16a8>
   46a90:	d8800117 	ldw	r2,4(sp)
   46a94:	d8001e15 	stw	zero,120(sp)
   46a98:	b8801015 	stw	r2,64(r23)
   46a9c:	00bfffc4 	movi	r2,-1
   46aa0:	d8800515 	stw	r2,20(sp)
   46aa4:	d8800b15 	stw	r2,44(sp)
   46aa8:	00800044 	movi	r2,1
   46aac:	d8800715 	stw	r2,28(sp)
   46ab0:	003c1106 	br	45af8 <_dtoa_r+0x74c>
   46ab4:	01c00174 	movhi	r7,5
   46ab8:	01000174 	movhi	r4,5
   46abc:	39c3f304 	addi	r7,r7,4044
   46ac0:	000d883a 	mov	r6,zero
   46ac4:	0140ba84 	movi	r5,746
   46ac8:	2103f804 	addi	r4,r4,4064
   46acc:	004a1300 	call	4a130 <__assert_func>
   46ad0:	00800174 	movhi	r2,5
   46ad4:	1083f004 	addi	r2,r2,4032
   46ad8:	d8800115 	stw	r2,4(sp)
   46adc:	003a6506 	br	45474 <_dtoa_r+0xc8>
   46ae0:	18c00120 	cmpeqi	r3,r3,4
   46ae4:	183cc91e 	bne	r3,zero,45e0c <_dtoa_r+0xa60>
   46ae8:	00c00f04 	movi	r3,60
   46aec:	1885c83a 	sub	r2,r3,r2
   46af0:	003cc106 	br	45df8 <_dtoa_r+0xa4c>

00046af4 <__sflags>:
   46af4:	28800007 	ldb	r2,0(r5)
   46af8:	10c01ca0 	cmpeqi	r3,r2,114
   46afc:	1800271e 	bne	r3,zero,46b9c <__sflags+0xa8>
   46b00:	10c01de0 	cmpeqi	r3,r2,119
   46b04:	1800061e 	bne	r3,zero,46b20 <__sflags+0x2c>
   46b08:	10801860 	cmpeqi	r2,r2,97
   46b0c:	10001f1e 	bne	r2,zero,46b8c <__sflags+0x98>
   46b10:	00800584 	movi	r2,22
   46b14:	20800015 	stw	r2,0(r4)
   46b18:	0005883a 	mov	r2,zero
   46b1c:	f800283a 	ret
   46b20:	02018004 	movi	r8,1536
   46b24:	01000044 	movi	r4,1
   46b28:	00800204 	movi	r2,8
   46b2c:	28c00047 	ldb	r3,1(r5)
   46b30:	29400044 	addi	r5,r5,1
   46b34:	18001226 	beq	r3,zero,46b80 <__sflags+0x8c>
   46b38:	02bff8c4 	movi	r10,-29
   46b3c:	027fff04 	movi	r9,-4
   46b40:	00000506 	br	46b58 <__sflags+0x64>
   46b44:	18000126 	beq	r3,zero,46b4c <__sflags+0x58>
   46b48:	21020014 	ori	r4,r4,2048
   46b4c:	28c00047 	ldb	r3,1(r5)
   46b50:	29400044 	addi	r5,r5,1
   46b54:	18000a26 	beq	r3,zero,46b80 <__sflags+0x8c>
   46b58:	19c00ae0 	cmpeqi	r7,r3,43
   46b5c:	18c01e20 	cmpeqi	r3,r3,120
   46b60:	383ff826 	beq	r7,zero,46b44 <__sflags+0x50>
   46b64:	28c00047 	ldb	r3,1(r5)
   46b68:	1284703a 	and	r2,r2,r10
   46b6c:	2248703a 	and	r4,r4,r9
   46b70:	10800414 	ori	r2,r2,16
   46b74:	21000094 	ori	r4,r4,2
   46b78:	29400044 	addi	r5,r5,1
   46b7c:	183ff61e 	bne	r3,zero,46b58 <__sflags+0x64>
   46b80:	4108b03a 	or	r4,r8,r4
   46b84:	31000015 	stw	r4,0(r6)
   46b88:	f800283a 	ret
   46b8c:	02008204 	movi	r8,520
   46b90:	01000044 	movi	r4,1
   46b94:	00804204 	movi	r2,264
   46b98:	003fe406 	br	46b2c <__sflags+0x38>
   46b9c:	0011883a 	mov	r8,zero
   46ba0:	0009883a 	mov	r4,zero
   46ba4:	00800104 	movi	r2,4
   46ba8:	003fe006 	br	46b2c <__sflags+0x38>

00046bac <__sfvwrite_r>:
   46bac:	30800217 	ldw	r2,8(r6)
   46bb0:	1000a326 	beq	r2,zero,46e40 <__sfvwrite_r+0x294>
   46bb4:	29c0030b 	ldhu	r7,12(r5)
   46bb8:	defff404 	addi	sp,sp,-48
   46bbc:	ddc00915 	stw	r23,36(sp)
   46bc0:	dd400715 	stw	r21,28(sp)
   46bc4:	dc000215 	stw	r16,8(sp)
   46bc8:	dfc00b15 	stw	ra,44(sp)
   46bcc:	df000a15 	stw	fp,40(sp)
   46bd0:	dd800815 	stw	r22,32(sp)
   46bd4:	dd000615 	stw	r20,24(sp)
   46bd8:	dcc00515 	stw	r19,20(sp)
   46bdc:	dc800415 	stw	r18,16(sp)
   46be0:	dc400315 	stw	r17,12(sp)
   46be4:	3880020c 	andi	r2,r7,8
   46be8:	302f883a 	mov	r23,r6
   46bec:	202b883a 	mov	r21,r4
   46bf0:	2821883a 	mov	r16,r5
   46bf4:	10002226 	beq	r2,zero,46c80 <__sfvwrite_r+0xd4>
   46bf8:	28800417 	ldw	r2,16(r5)
   46bfc:	10002026 	beq	r2,zero,46c80 <__sfvwrite_r+0xd4>
   46c00:	3880008c 	andi	r2,r7,2
   46c04:	bc400017 	ldw	r17,0(r23)
   46c08:	10002526 	beq	r2,zero,46ca0 <__sfvwrite_r+0xf4>
   46c0c:	80800917 	ldw	r2,36(r16)
   46c10:	81400717 	ldw	r5,28(r16)
   46c14:	05200034 	movhi	r20,32768
   46c18:	0027883a 	mov	r19,zero
   46c1c:	0025883a 	mov	r18,zero
   46c20:	a53f0004 	addi	r20,r20,-1024
   46c24:	980d883a 	mov	r6,r19
   46c28:	a809883a 	mov	r4,r21
   46c2c:	90001026 	beq	r18,zero,46c70 <__sfvwrite_r+0xc4>
   46c30:	900f883a 	mov	r7,r18
   46c34:	a480012e 	bgeu	r20,r18,46c3c <__sfvwrite_r+0x90>
   46c38:	a00f883a 	mov	r7,r20
   46c3c:	103ee83a 	callr	r2
   46c40:	00807a0e 	bge	zero,r2,46e2c <__sfvwrite_r+0x280>
   46c44:	b9000217 	ldw	r4,8(r23)
   46c48:	98a7883a 	add	r19,r19,r2
   46c4c:	90a5c83a 	sub	r18,r18,r2
   46c50:	2085c83a 	sub	r2,r4,r2
   46c54:	b8800215 	stw	r2,8(r23)
   46c58:	10006326 	beq	r2,zero,46de8 <__sfvwrite_r+0x23c>
   46c5c:	80800917 	ldw	r2,36(r16)
   46c60:	81400717 	ldw	r5,28(r16)
   46c64:	980d883a 	mov	r6,r19
   46c68:	a809883a 	mov	r4,r21
   46c6c:	903ff01e 	bne	r18,zero,46c30 <__sfvwrite_r+0x84>
   46c70:	8cc00017 	ldw	r19,0(r17)
   46c74:	8c800117 	ldw	r18,4(r17)
   46c78:	8c400204 	addi	r17,r17,8
   46c7c:	003fe906 	br	46c24 <__sfvwrite_r+0x78>
   46c80:	800b883a 	mov	r5,r16
   46c84:	a809883a 	mov	r4,r21
   46c88:	0044fd00 	call	44fd0 <__swsetup_r>
   46c8c:	1000f71e 	bne	r2,zero,4706c <__sfvwrite_r+0x4c0>
   46c90:	81c0030b 	ldhu	r7,12(r16)
   46c94:	bc400017 	ldw	r17,0(r23)
   46c98:	3880008c 	andi	r2,r7,2
   46c9c:	103fdb1e 	bne	r2,zero,46c0c <__sfvwrite_r+0x60>
   46ca0:	3880004c 	andi	r2,r7,1
   46ca4:	84800217 	ldw	r18,8(r16)
   46ca8:	82000017 	ldw	r8,0(r16)
   46cac:	1000661e 	bne	r2,zero,46e48 <__sfvwrite_r+0x29c>
   46cb0:	00a00034 	movhi	r2,32768
   46cb4:	10bfff84 	addi	r2,r2,-2
   46cb8:	00e00034 	movhi	r3,32768
   46cbc:	d8800015 	stw	r2,0(sp)
   46cc0:	18bfffc4 	addi	r2,r3,-1
   46cc4:	0039883a 	mov	fp,zero
   46cc8:	0027883a 	mov	r19,zero
   46ccc:	d8800115 	stw	r2,4(sp)
   46cd0:	98004126 	beq	r19,zero,46dd8 <__sfvwrite_r+0x22c>
   46cd4:	3880800c 	andi	r2,r7,512
   46cd8:	10009726 	beq	r2,zero,46f38 <__sfvwrite_r+0x38c>
   46cdc:	902d883a 	mov	r22,r18
   46ce0:	9c80be36 	bltu	r19,r18,46fdc <__sfvwrite_r+0x430>
   46ce4:	3881200c 	andi	r2,r7,1152
   46ce8:	10002626 	beq	r2,zero,46d84 <__sfvwrite_r+0x1d8>
   46cec:	81800517 	ldw	r6,20(r16)
   46cf0:	81400417 	ldw	r5,16(r16)
   46cf4:	98800044 	addi	r2,r19,1
   46cf8:	3189883a 	add	r4,r6,r6
   46cfc:	2189883a 	add	r4,r4,r6
   46d00:	2028d7fa 	srli	r20,r4,31
   46d04:	4165c83a 	sub	r18,r8,r5
   46d08:	1485883a 	add	r2,r2,r18
   46d0c:	a109883a 	add	r4,r20,r4
   46d10:	2029d07a 	srai	r20,r4,1
   46d14:	a00d883a 	mov	r6,r20
   46d18:	a080022e 	bgeu	r20,r2,46d24 <__sfvwrite_r+0x178>
   46d1c:	1029883a 	mov	r20,r2
   46d20:	100d883a 	mov	r6,r2
   46d24:	39c1000c 	andi	r7,r7,1024
   46d28:	3800c026 	beq	r7,zero,4702c <__sfvwrite_r+0x480>
   46d2c:	a809883a 	mov	r4,r21
   46d30:	300b883a 	mov	r5,r6
   46d34:	0041e740 	call	41e74 <_malloc_r>
   46d38:	1009883a 	mov	r4,r2
   46d3c:	1000c726 	beq	r2,zero,4705c <__sfvwrite_r+0x4b0>
   46d40:	81400417 	ldw	r5,16(r16)
   46d44:	900d883a 	mov	r6,r18
   46d48:	00472200 	call	47220 <memcpy>
   46d4c:	1009883a 	mov	r4,r2
   46d50:	8080030b 	ldhu	r2,12(r16)
   46d54:	00fedfc4 	movi	r3,-1153
   46d58:	10c4703a 	and	r2,r2,r3
   46d5c:	10802014 	ori	r2,r2,128
   46d60:	8080030d 	sth	r2,12(r16)
   46d64:	2491883a 	add	r8,r4,r18
   46d68:	a485c83a 	sub	r2,r20,r18
   46d6c:	81000415 	stw	r4,16(r16)
   46d70:	82000015 	stw	r8,0(r16)
   46d74:	85000515 	stw	r20,20(r16)
   46d78:	9825883a 	mov	r18,r19
   46d7c:	80800215 	stw	r2,8(r16)
   46d80:	982d883a 	mov	r22,r19
   46d84:	4009883a 	mov	r4,r8
   46d88:	b00d883a 	mov	r6,r22
   46d8c:	e00b883a 	mov	r5,fp
   46d90:	00473200 	call	47320 <memmove>
   46d94:	81000217 	ldw	r4,8(r16)
   46d98:	80800017 	ldw	r2,0(r16)
   46d9c:	9829883a 	mov	r20,r19
   46da0:	24a5c83a 	sub	r18,r4,r18
   46da4:	1585883a 	add	r2,r2,r22
   46da8:	84800215 	stw	r18,8(r16)
   46dac:	80800015 	stw	r2,0(r16)
   46db0:	0027883a 	mov	r19,zero
   46db4:	b8800217 	ldw	r2,8(r23)
   46db8:	e539883a 	add	fp,fp,r20
   46dbc:	1529c83a 	sub	r20,r2,r20
   46dc0:	bd000215 	stw	r20,8(r23)
   46dc4:	a0000826 	beq	r20,zero,46de8 <__sfvwrite_r+0x23c>
   46dc8:	81c0030b 	ldhu	r7,12(r16)
   46dcc:	84800217 	ldw	r18,8(r16)
   46dd0:	82000017 	ldw	r8,0(r16)
   46dd4:	983fbf1e 	bne	r19,zero,46cd4 <__sfvwrite_r+0x128>
   46dd8:	8f000017 	ldw	fp,0(r17)
   46ddc:	8cc00117 	ldw	r19,4(r17)
   46de0:	8c400204 	addi	r17,r17,8
   46de4:	003fba06 	br	46cd0 <__sfvwrite_r+0x124>
   46de8:	0005883a 	mov	r2,zero
   46dec:	dfc00b17 	ldw	ra,44(sp)
   46df0:	df000a17 	ldw	fp,40(sp)
   46df4:	ddc00917 	ldw	r23,36(sp)
   46df8:	dd800817 	ldw	r22,32(sp)
   46dfc:	dd400717 	ldw	r21,28(sp)
   46e00:	dd000617 	ldw	r20,24(sp)
   46e04:	dcc00517 	ldw	r19,20(sp)
   46e08:	dc800417 	ldw	r18,16(sp)
   46e0c:	dc400317 	ldw	r17,12(sp)
   46e10:	dc000217 	ldw	r16,8(sp)
   46e14:	dec00c04 	addi	sp,sp,48
   46e18:	f800283a 	ret
   46e1c:	800b883a 	mov	r5,r16
   46e20:	a809883a 	mov	r4,r21
   46e24:	004087c0 	call	4087c <_fflush_r>
   46e28:	10002026 	beq	r2,zero,46eac <__sfvwrite_r+0x300>
   46e2c:	8080030b 	ldhu	r2,12(r16)
   46e30:	10801014 	ori	r2,r2,64
   46e34:	8080030d 	sth	r2,12(r16)
   46e38:	00bfffc4 	movi	r2,-1
   46e3c:	003feb06 	br	46dec <__sfvwrite_r+0x240>
   46e40:	0005883a 	mov	r2,zero
   46e44:	f800283a 	ret
   46e48:	002d883a 	mov	r22,zero
   46e4c:	0027883a 	mov	r19,zero
   46e50:	0005883a 	mov	r2,zero
   46e54:	0039883a 	mov	fp,zero
   46e58:	b0001d26 	beq	r22,zero,46ed0 <__sfvwrite_r+0x324>
   46e5c:	10002026 	beq	r2,zero,46ee0 <__sfvwrite_r+0x334>
   46e60:	9829883a 	mov	r20,r19
   46e64:	b500012e 	bgeu	r22,r20,46e6c <__sfvwrite_r+0x2c0>
   46e68:	b029883a 	mov	r20,r22
   46e6c:	80800417 	ldw	r2,16(r16)
   46e70:	81c00517 	ldw	r7,20(r16)
   46e74:	1200022e 	bgeu	r2,r8,46e80 <__sfvwrite_r+0x2d4>
   46e78:	3ca5883a 	add	r18,r7,r18
   46e7c:	95002216 	blt	r18,r20,46f08 <__sfvwrite_r+0x35c>
   46e80:	a1c05916 	blt	r20,r7,46fe8 <__sfvwrite_r+0x43c>
   46e84:	80800917 	ldw	r2,36(r16)
   46e88:	81400717 	ldw	r5,28(r16)
   46e8c:	e00d883a 	mov	r6,fp
   46e90:	a809883a 	mov	r4,r21
   46e94:	103ee83a 	callr	r2
   46e98:	1025883a 	mov	r18,r2
   46e9c:	00bfe30e 	bge	zero,r2,46e2c <__sfvwrite_r+0x280>
   46ea0:	9ca7c83a 	sub	r19,r19,r18
   46ea4:	983fdd26 	beq	r19,zero,46e1c <__sfvwrite_r+0x270>
   46ea8:	00800044 	movi	r2,1
   46eac:	b9800217 	ldw	r6,8(r23)
   46eb0:	e4b9883a 	add	fp,fp,r18
   46eb4:	b4adc83a 	sub	r22,r22,r18
   46eb8:	34a5c83a 	sub	r18,r6,r18
   46ebc:	bc800215 	stw	r18,8(r23)
   46ec0:	903fc926 	beq	r18,zero,46de8 <__sfvwrite_r+0x23c>
   46ec4:	84800217 	ldw	r18,8(r16)
   46ec8:	82000017 	ldw	r8,0(r16)
   46ecc:	b03fe31e 	bne	r22,zero,46e5c <__sfvwrite_r+0x2b0>
   46ed0:	8d800117 	ldw	r22,4(r17)
   46ed4:	8f000017 	ldw	fp,0(r17)
   46ed8:	8c400204 	addi	r17,r17,8
   46edc:	b03ffc26 	beq	r22,zero,46ed0 <__sfvwrite_r+0x324>
   46ee0:	b00d883a 	mov	r6,r22
   46ee4:	01400284 	movi	r5,10
   46ee8:	e009883a 	mov	r4,fp
   46eec:	da000015 	stw	r8,0(sp)
   46ef0:	00471500 	call	47150 <memchr>
   46ef4:	da000017 	ldw	r8,0(sp)
   46ef8:	10004926 	beq	r2,zero,47020 <__sfvwrite_r+0x474>
   46efc:	10800044 	addi	r2,r2,1
   46f00:	1727c83a 	sub	r19,r2,fp
   46f04:	003fd606 	br	46e60 <__sfvwrite_r+0x2b4>
   46f08:	e00b883a 	mov	r5,fp
   46f0c:	4009883a 	mov	r4,r8
   46f10:	900d883a 	mov	r6,r18
   46f14:	00473200 	call	47320 <memmove>
   46f18:	80800017 	ldw	r2,0(r16)
   46f1c:	800b883a 	mov	r5,r16
   46f20:	a809883a 	mov	r4,r21
   46f24:	1485883a 	add	r2,r2,r18
   46f28:	80800015 	stw	r2,0(r16)
   46f2c:	004087c0 	call	4087c <_fflush_r>
   46f30:	103fdb26 	beq	r2,zero,46ea0 <__sfvwrite_r+0x2f4>
   46f34:	003fbd06 	br	46e2c <__sfvwrite_r+0x280>
   46f38:	80800417 	ldw	r2,16(r16)
   46f3c:	12001436 	bltu	r2,r8,46f90 <__sfvwrite_r+0x3e4>
   46f40:	85000517 	ldw	r20,20(r16)
   46f44:	9d001236 	bltu	r19,r20,46f90 <__sfvwrite_r+0x3e4>
   46f48:	d8800017 	ldw	r2,0(sp)
   46f4c:	14c0322e 	bgeu	r2,r19,47018 <__sfvwrite_r+0x46c>
   46f50:	d9000117 	ldw	r4,4(sp)
   46f54:	a00b883a 	mov	r5,r20
   46f58:	004baa00 	call	4baa0 <__divsi3>
   46f5c:	a00b883a 	mov	r5,r20
   46f60:	1009883a 	mov	r4,r2
   46f64:	004bc540 	call	4bc54 <__mulsi3>
   46f68:	82000917 	ldw	r8,36(r16)
   46f6c:	81400717 	ldw	r5,28(r16)
   46f70:	100f883a 	mov	r7,r2
   46f74:	e00d883a 	mov	r6,fp
   46f78:	a809883a 	mov	r4,r21
   46f7c:	403ee83a 	callr	r8
   46f80:	1029883a 	mov	r20,r2
   46f84:	00bfa90e 	bge	zero,r2,46e2c <__sfvwrite_r+0x280>
   46f88:	9d27c83a 	sub	r19,r19,r20
   46f8c:	003f8906 	br	46db4 <__sfvwrite_r+0x208>
   46f90:	9029883a 	mov	r20,r18
   46f94:	9c80012e 	bgeu	r19,r18,46f9c <__sfvwrite_r+0x3f0>
   46f98:	9829883a 	mov	r20,r19
   46f9c:	4009883a 	mov	r4,r8
   46fa0:	a00d883a 	mov	r6,r20
   46fa4:	e00b883a 	mov	r5,fp
   46fa8:	00473200 	call	47320 <memmove>
   46fac:	80800217 	ldw	r2,8(r16)
   46fb0:	81000017 	ldw	r4,0(r16)
   46fb4:	1505c83a 	sub	r2,r2,r20
   46fb8:	2509883a 	add	r4,r4,r20
   46fbc:	80800215 	stw	r2,8(r16)
   46fc0:	81000015 	stw	r4,0(r16)
   46fc4:	103ff01e 	bne	r2,zero,46f88 <__sfvwrite_r+0x3dc>
   46fc8:	800b883a 	mov	r5,r16
   46fcc:	a809883a 	mov	r4,r21
   46fd0:	004087c0 	call	4087c <_fflush_r>
   46fd4:	103fec26 	beq	r2,zero,46f88 <__sfvwrite_r+0x3dc>
   46fd8:	003f9406 	br	46e2c <__sfvwrite_r+0x280>
   46fdc:	9825883a 	mov	r18,r19
   46fe0:	982d883a 	mov	r22,r19
   46fe4:	003f6706 	br	46d84 <__sfvwrite_r+0x1d8>
   46fe8:	4009883a 	mov	r4,r8
   46fec:	a00d883a 	mov	r6,r20
   46ff0:	e00b883a 	mov	r5,fp
   46ff4:	00473200 	call	47320 <memmove>
   46ff8:	81000217 	ldw	r4,8(r16)
   46ffc:	80800017 	ldw	r2,0(r16)
   47000:	a025883a 	mov	r18,r20
   47004:	2509c83a 	sub	r4,r4,r20
   47008:	1505883a 	add	r2,r2,r20
   4700c:	81000215 	stw	r4,8(r16)
   47010:	80800015 	stw	r2,0(r16)
   47014:	003fa206 	br	46ea0 <__sfvwrite_r+0x2f4>
   47018:	9809883a 	mov	r4,r19
   4701c:	003fcd06 	br	46f54 <__sfvwrite_r+0x3a8>
   47020:	b5000044 	addi	r20,r22,1
   47024:	a027883a 	mov	r19,r20
   47028:	003f8e06 	br	46e64 <__sfvwrite_r+0x2b8>
   4702c:	a809883a 	mov	r4,r21
   47030:	00486a00 	call	486a0 <_realloc_r>
   47034:	1009883a 	mov	r4,r2
   47038:	103f4a1e 	bne	r2,zero,46d64 <__sfvwrite_r+0x1b8>
   4703c:	81400417 	ldw	r5,16(r16)
   47040:	a809883a 	mov	r4,r21
   47044:	0040f7c0 	call	40f7c <_free_r>
   47048:	8080030b 	ldhu	r2,12(r16)
   4704c:	00c00304 	movi	r3,12
   47050:	a8c00015 	stw	r3,0(r21)
   47054:	10bfdfcc 	andi	r2,r2,65407
   47058:	003f7506 	br	46e30 <__sfvwrite_r+0x284>
   4705c:	00c00304 	movi	r3,12
   47060:	8080030b 	ldhu	r2,12(r16)
   47064:	a8c00015 	stw	r3,0(r21)
   47068:	003f7106 	br	46e30 <__sfvwrite_r+0x284>
   4706c:	00bfffc4 	movi	r2,-1
   47070:	003f5e06 	br	46dec <__sfvwrite_r+0x240>

00047074 <_isatty_r>:
   47074:	defffe04 	addi	sp,sp,-8
   47078:	dc000015 	stw	r16,0(sp)
   4707c:	00800174 	movhi	r2,5
   47080:	2021883a 	mov	r16,r4
   47084:	2809883a 	mov	r4,r5
   47088:	dfc00115 	stw	ra,4(sp)
   4708c:	10137115 	stw	zero,19908(r2)
   47090:	004e68c0 	call	4e68c <isatty>
   47094:	10ffffd8 	cmpnei	r3,r2,-1
   47098:	18000426 	beq	r3,zero,470ac <_isatty_r+0x38>
   4709c:	dfc00117 	ldw	ra,4(sp)
   470a0:	dc000017 	ldw	r16,0(sp)
   470a4:	dec00204 	addi	sp,sp,8
   470a8:	f800283a 	ret
   470ac:	00c00174 	movhi	r3,5
   470b0:	18d37117 	ldw	r3,19908(r3)
   470b4:	183ff926 	beq	r3,zero,4709c <_isatty_r+0x28>
   470b8:	80c00015 	stw	r3,0(r16)
   470bc:	dfc00117 	ldw	ra,4(sp)
   470c0:	dc000017 	ldw	r16,0(sp)
   470c4:	dec00204 	addi	sp,sp,8
   470c8:	f800283a 	ret

000470cc <__localeconv_l>:
   470cc:	20803c04 	addi	r2,r4,240
   470d0:	f800283a 	ret

000470d4 <_localeconv_r>:
   470d4:	00800174 	movhi	r2,5
   470d8:	1087b604 	addi	r2,r2,7896
   470dc:	f800283a 	ret

000470e0 <localeconv>:
   470e0:	00800174 	movhi	r2,5
   470e4:	1087b604 	addi	r2,r2,7896
   470e8:	f800283a 	ret

000470ec <_lseek_r>:
   470ec:	2807883a 	mov	r3,r5
   470f0:	defffe04 	addi	sp,sp,-8
   470f4:	dc000015 	stw	r16,0(sp)
   470f8:	300b883a 	mov	r5,r6
   470fc:	00800174 	movhi	r2,5
   47100:	380d883a 	mov	r6,r7
   47104:	2021883a 	mov	r16,r4
   47108:	1809883a 	mov	r4,r3
   4710c:	dfc00115 	stw	ra,4(sp)
   47110:	10137115 	stw	zero,19908(r2)
   47114:	004e9cc0 	call	4e9cc <lseek>
   47118:	10ffffd8 	cmpnei	r3,r2,-1
   4711c:	18000426 	beq	r3,zero,47130 <_lseek_r+0x44>
   47120:	dfc00117 	ldw	ra,4(sp)
   47124:	dc000017 	ldw	r16,0(sp)
   47128:	dec00204 	addi	sp,sp,8
   4712c:	f800283a 	ret
   47130:	00c00174 	movhi	r3,5
   47134:	18d37117 	ldw	r3,19908(r3)
   47138:	183ff926 	beq	r3,zero,47120 <_lseek_r+0x34>
   4713c:	80c00015 	stw	r3,0(r16)
   47140:	dfc00117 	ldw	ra,4(sp)
   47144:	dc000017 	ldw	r16,0(sp)
   47148:	dec00204 	addi	sp,sp,8
   4714c:	f800283a 	ret

00047150 <memchr>:
   47150:	208000cc 	andi	r2,r4,3
   47154:	280f883a 	mov	r7,r5
   47158:	10000e26 	beq	r2,zero,47194 <memchr+0x44>
   4715c:	30bfffc4 	addi	r2,r6,-1
   47160:	30001726 	beq	r6,zero,471c0 <memchr+0x70>
   47164:	29803fcc 	andi	r6,r5,255
   47168:	00000606 	br	47184 <memchr+0x34>
   4716c:	21000044 	addi	r4,r4,1
   47170:	20c000cc 	andi	r3,r4,3
   47174:	18000826 	beq	r3,zero,47198 <memchr+0x48>
   47178:	10bfffc4 	addi	r2,r2,-1
   4717c:	10ffffe0 	cmpeqi	r3,r2,-1
   47180:	18000f1e 	bne	r3,zero,471c0 <memchr+0x70>
   47184:	20c00003 	ldbu	r3,0(r4)
   47188:	19bff81e 	bne	r3,r6,4716c <memchr+0x1c>
   4718c:	2005883a 	mov	r2,r4
   47190:	f800283a 	ret
   47194:	3005883a 	mov	r2,r6
   47198:	10c00128 	cmpgeui	r3,r2,4
   4719c:	18000a1e 	bne	r3,zero,471c8 <memchr+0x78>
   471a0:	10001e26 	beq	r2,zero,4721c <memchr+0xcc>
   471a4:	2087883a 	add	r3,r4,r2
   471a8:	39803fcc 	andi	r6,r7,255
   471ac:	2005883a 	mov	r2,r4
   471b0:	11000003 	ldbu	r4,0(r2)
   471b4:	21bff626 	beq	r4,r6,47190 <memchr+0x40>
   471b8:	10800044 	addi	r2,r2,1
   471bc:	18bffc1e 	bne	r3,r2,471b0 <memchr+0x60>
   471c0:	0005883a 	mov	r2,zero
   471c4:	f800283a 	ret
   471c8:	29403fcc 	andi	r5,r5,255
   471cc:	280c923a 	slli	r6,r5,8
   471d0:	027fbff4 	movhi	r9,65279
   471d4:	02202074 	movhi	r8,32897
   471d8:	314ab03a 	or	r5,r6,r5
   471dc:	280c943a 	slli	r6,r5,16
   471e0:	4a7fbfc4 	addi	r9,r9,-257
   471e4:	42202004 	addi	r8,r8,-32640
   471e8:	314cb03a 	or	r6,r6,r5
   471ec:	20c00017 	ldw	r3,0(r4)
   471f0:	30c6f03a 	xor	r3,r6,r3
   471f4:	1a4b883a 	add	r5,r3,r9
   471f8:	00c6303a 	nor	r3,zero,r3
   471fc:	28c6703a 	and	r3,r5,r3
   47200:	1a06703a 	and	r3,r3,r8
   47204:	183fe71e 	bne	r3,zero,471a4 <memchr+0x54>
   47208:	10bfff04 	addi	r2,r2,-4
   4720c:	10c00128 	cmpgeui	r3,r2,4
   47210:	21000104 	addi	r4,r4,4
   47214:	183ff51e 	bne	r3,zero,471ec <memchr+0x9c>
   47218:	003fe106 	br	471a0 <memchr+0x50>
   4721c:	f800283a 	ret

00047220 <memcpy>:
   47220:	30c00430 	cmpltui	r3,r6,16
   47224:	2005883a 	mov	r2,r4
   47228:	18002d1e 	bne	r3,zero,472e0 <memcpy+0xc0>
   4722c:	2906b03a 	or	r3,r5,r4
   47230:	18c000cc 	andi	r3,r3,3
   47234:	1800351e 	bne	r3,zero,4730c <memcpy+0xec>
   47238:	32fffc04 	addi	r11,r6,-16
   4723c:	5816d13a 	srli	r11,r11,4
   47240:	280f883a 	mov	r7,r5
   47244:	2007883a 	mov	r3,r4
   47248:	5ac00044 	addi	r11,r11,1
   4724c:	5816913a 	slli	r11,r11,4
   47250:	22d5883a 	add	r10,r4,r11
   47254:	39000117 	ldw	r4,4(r7)
   47258:	3a400017 	ldw	r9,0(r7)
   4725c:	3a000217 	ldw	r8,8(r7)
   47260:	19000115 	stw	r4,4(r3)
   47264:	39000317 	ldw	r4,12(r7)
   47268:	1a400015 	stw	r9,0(r3)
   4726c:	1a000215 	stw	r8,8(r3)
   47270:	19000315 	stw	r4,12(r3)
   47274:	18c00404 	addi	r3,r3,16
   47278:	39c00404 	addi	r7,r7,16
   4727c:	50fff51e 	bne	r10,r3,47254 <memcpy+0x34>
   47280:	3100030c 	andi	r4,r6,12
   47284:	2acb883a 	add	r5,r5,r11
   47288:	320003cc 	andi	r8,r6,15
   4728c:	20002226 	beq	r4,zero,47318 <memcpy+0xf8>
   47290:	280f883a 	mov	r7,r5
   47294:	1813883a 	mov	r9,r3
   47298:	39c00104 	addi	r7,r7,4
   4729c:	3abfff17 	ldw	r10,-4(r7)
   472a0:	41c9c83a 	sub	r4,r8,r7
   472a4:	2909883a 	add	r4,r5,r4
   472a8:	4a800015 	stw	r10,0(r9)
   472ac:	21000128 	cmpgeui	r4,r4,4
   472b0:	4a400104 	addi	r9,r9,4
   472b4:	203ff81e 	bne	r4,zero,47298 <memcpy+0x78>
   472b8:	413fff04 	addi	r4,r8,-4
   472bc:	2008d0ba 	srli	r4,r4,2
   472c0:	318000cc 	andi	r6,r6,3
   472c4:	31ffffc4 	addi	r7,r6,-1
   472c8:	21000044 	addi	r4,r4,1
   472cc:	200890ba 	slli	r4,r4,2
   472d0:	1907883a 	add	r3,r3,r4
   472d4:	290b883a 	add	r5,r5,r4
   472d8:	3000041e 	bne	r6,zero,472ec <memcpy+0xcc>
   472dc:	f800283a 	ret
   472e0:	2007883a 	mov	r3,r4
   472e4:	31ffffc4 	addi	r7,r6,-1
   472e8:	303ffc26 	beq	r6,zero,472dc <memcpy+0xbc>
   472ec:	39c00044 	addi	r7,r7,1
   472f0:	19cf883a 	add	r7,r3,r7
   472f4:	29800003 	ldbu	r6,0(r5)
   472f8:	18c00044 	addi	r3,r3,1
   472fc:	29400044 	addi	r5,r5,1
   47300:	19bfffc5 	stb	r6,-1(r3)
   47304:	38fffb1e 	bne	r7,r3,472f4 <memcpy+0xd4>
   47308:	f800283a 	ret
   4730c:	31ffffc4 	addi	r7,r6,-1
   47310:	2007883a 	mov	r3,r4
   47314:	003ff506 	br	472ec <memcpy+0xcc>
   47318:	400d883a 	mov	r6,r8
   4731c:	003ff106 	br	472e4 <memcpy+0xc4>

00047320 <memmove>:
   47320:	2005883a 	mov	r2,r4
   47324:	29000a2e 	bgeu	r5,r4,47350 <memmove+0x30>
   47328:	2989883a 	add	r4,r5,r6
   4732c:	1100082e 	bgeu	r2,r4,47350 <memmove+0x30>
   47330:	1187883a 	add	r3,r2,r6
   47334:	30003e26 	beq	r6,zero,47430 <memmove+0x110>
   47338:	217fffc3 	ldbu	r5,-1(r4)
   4733c:	18ffffc4 	addi	r3,r3,-1
   47340:	213fffc4 	addi	r4,r4,-1
   47344:	19400005 	stb	r5,0(r3)
   47348:	10fffb1e 	bne	r2,r3,47338 <memmove+0x18>
   4734c:	f800283a 	ret
   47350:	30c00430 	cmpltui	r3,r6,16
   47354:	18000b26 	beq	r3,zero,47384 <memmove+0x64>
   47358:	1007883a 	mov	r3,r2
   4735c:	31ffffc4 	addi	r7,r6,-1
   47360:	30003726 	beq	r6,zero,47440 <memmove+0x120>
   47364:	39c00044 	addi	r7,r7,1
   47368:	29cf883a 	add	r7,r5,r7
   4736c:	29800003 	ldbu	r6,0(r5)
   47370:	29400044 	addi	r5,r5,1
   47374:	18c00044 	addi	r3,r3,1
   47378:	19bfffc5 	stb	r6,-1(r3)
   4737c:	29fffb1e 	bne	r5,r7,4736c <memmove+0x4c>
   47380:	f800283a 	ret
   47384:	2886b03a 	or	r3,r5,r2
   47388:	18c000cc 	andi	r3,r3,3
   4738c:	1800291e 	bne	r3,zero,47434 <memmove+0x114>
   47390:	327ffc04 	addi	r9,r6,-16
   47394:	4812d13a 	srli	r9,r9,4
   47398:	280f883a 	mov	r7,r5
   4739c:	1007883a 	mov	r3,r2
   473a0:	4a400044 	addi	r9,r9,1
   473a4:	4812913a 	slli	r9,r9,4
   473a8:	1251883a 	add	r8,r2,r9
   473ac:	39000017 	ldw	r4,0(r7)
   473b0:	39c00404 	addi	r7,r7,16
   473b4:	18c00404 	addi	r3,r3,16
   473b8:	193ffc15 	stw	r4,-16(r3)
   473bc:	393ffd17 	ldw	r4,-12(r7)
   473c0:	193ffd15 	stw	r4,-12(r3)
   473c4:	393ffe17 	ldw	r4,-8(r7)
   473c8:	193ffe15 	stw	r4,-8(r3)
   473cc:	393fff17 	ldw	r4,-4(r7)
   473d0:	193fff15 	stw	r4,-4(r3)
   473d4:	40fff51e 	bne	r8,r3,473ac <memmove+0x8c>
   473d8:	3100030c 	andi	r4,r6,12
   473dc:	2a4b883a 	add	r5,r5,r9
   473e0:	320003cc 	andi	r8,r6,15
   473e4:	20001726 	beq	r4,zero,47444 <memmove+0x124>
   473e8:	2813883a 	mov	r9,r5
   473ec:	180f883a 	mov	r7,r3
   473f0:	4a800017 	ldw	r10,0(r9)
   473f4:	39c00104 	addi	r7,r7,4
   473f8:	41c9c83a 	sub	r4,r8,r7
   473fc:	1909883a 	add	r4,r3,r4
   47400:	21000128 	cmpgeui	r4,r4,4
   47404:	3abfff15 	stw	r10,-4(r7)
   47408:	4a400104 	addi	r9,r9,4
   4740c:	203ff81e 	bne	r4,zero,473f0 <memmove+0xd0>
   47410:	413fff04 	addi	r4,r8,-4
   47414:	2008d0ba 	srli	r4,r4,2
   47418:	318000cc 	andi	r6,r6,3
   4741c:	21000044 	addi	r4,r4,1
   47420:	200890ba 	slli	r4,r4,2
   47424:	1907883a 	add	r3,r3,r4
   47428:	290b883a 	add	r5,r5,r4
   4742c:	003fcb06 	br	4735c <memmove+0x3c>
   47430:	f800283a 	ret
   47434:	31ffffc4 	addi	r7,r6,-1
   47438:	1007883a 	mov	r3,r2
   4743c:	003fc906 	br	47364 <memmove+0x44>
   47440:	f800283a 	ret
   47444:	400d883a 	mov	r6,r8
   47448:	003fc406 	br	4735c <memmove+0x3c>

0004744c <_Balloc>:
   4744c:	20801317 	ldw	r2,76(r4)
   47450:	defffc04 	addi	sp,sp,-16
   47454:	dc400115 	stw	r17,4(sp)
   47458:	dc000015 	stw	r16,0(sp)
   4745c:	dfc00315 	stw	ra,12(sp)
   47460:	dc800215 	stw	r18,8(sp)
   47464:	2021883a 	mov	r16,r4
   47468:	2823883a 	mov	r17,r5
   4746c:	10000e26 	beq	r2,zero,474a8 <_Balloc+0x5c>
   47470:	880690ba 	slli	r3,r17,2
   47474:	10c7883a 	add	r3,r2,r3
   47478:	18800017 	ldw	r2,0(r3)
   4747c:	10001126 	beq	r2,zero,474c4 <_Balloc+0x78>
   47480:	11000017 	ldw	r4,0(r2)
   47484:	19000015 	stw	r4,0(r3)
   47488:	10000415 	stw	zero,16(r2)
   4748c:	10000315 	stw	zero,12(r2)
   47490:	dfc00317 	ldw	ra,12(sp)
   47494:	dc800217 	ldw	r18,8(sp)
   47498:	dc400117 	ldw	r17,4(sp)
   4749c:	dc000017 	ldw	r16,0(sp)
   474a0:	dec00404 	addi	sp,sp,16
   474a4:	f800283a 	ret
   474a8:	01800844 	movi	r6,33
   474ac:	01400104 	movi	r5,4
   474b0:	004a1a80 	call	4a1a8 <_calloc_r>
   474b4:	80801315 	stw	r2,76(r16)
   474b8:	103fed1e 	bne	r2,zero,47470 <_Balloc+0x24>
   474bc:	0005883a 	mov	r2,zero
   474c0:	003ff306 	br	47490 <_Balloc+0x44>
   474c4:	04800044 	movi	r18,1
   474c8:	9464983a 	sll	r18,r18,r17
   474cc:	01400044 	movi	r5,1
   474d0:	8009883a 	mov	r4,r16
   474d4:	91800144 	addi	r6,r18,5
   474d8:	300c90ba 	slli	r6,r6,2
   474dc:	004a1a80 	call	4a1a8 <_calloc_r>
   474e0:	103ff626 	beq	r2,zero,474bc <_Balloc+0x70>
   474e4:	14400115 	stw	r17,4(r2)
   474e8:	14800215 	stw	r18,8(r2)
   474ec:	003fe606 	br	47488 <_Balloc+0x3c>

000474f0 <_Bfree>:
   474f0:	28000726 	beq	r5,zero,47510 <_Bfree+0x20>
   474f4:	28c00117 	ldw	r3,4(r5)
   474f8:	20801317 	ldw	r2,76(r4)
   474fc:	180690ba 	slli	r3,r3,2
   47500:	10c5883a 	add	r2,r2,r3
   47504:	10c00017 	ldw	r3,0(r2)
   47508:	28c00015 	stw	r3,0(r5)
   4750c:	11400015 	stw	r5,0(r2)
   47510:	f800283a 	ret

00047514 <__multadd>:
   47514:	defff704 	addi	sp,sp,-36
   47518:	dc800215 	stw	r18,8(sp)
   4751c:	2c800417 	ldw	r18,16(r5)
   47520:	ddc00715 	stw	r23,28(sp)
   47524:	dd800615 	stw	r22,24(sp)
   47528:	dd400515 	stw	r21,20(sp)
   4752c:	dd000415 	stw	r20,16(sp)
   47530:	dcc00315 	stw	r19,12(sp)
   47534:	dc400115 	stw	r17,4(sp)
   47538:	dfc00815 	stw	ra,32(sp)
   4753c:	dc000015 	stw	r16,0(sp)
   47540:	2827883a 	mov	r19,r5
   47544:	2029883a 	mov	r20,r4
   47548:	302b883a 	mov	r21,r6
   4754c:	3823883a 	mov	r17,r7
   47550:	2d800504 	addi	r22,r5,20
   47554:	002f883a 	mov	r23,zero
   47558:	b4000017 	ldw	r16,0(r22)
   4755c:	a80b883a 	mov	r5,r21
   47560:	b5800104 	addi	r22,r22,4
   47564:	813fffcc 	andi	r4,r16,65535
   47568:	004bc540 	call	4bc54 <__mulsi3>
   4756c:	8008d43a 	srli	r4,r16,16
   47570:	a80b883a 	mov	r5,r21
   47574:	1461883a 	add	r16,r2,r17
   47578:	004bc540 	call	4bc54 <__mulsi3>
   4757c:	800ed43a 	srli	r7,r16,16
   47580:	843fffcc 	andi	r16,r16,65535
   47584:	bdc00044 	addi	r23,r23,1
   47588:	11c5883a 	add	r2,r2,r7
   4758c:	1006943a 	slli	r3,r2,16
   47590:	1022d43a 	srli	r17,r2,16
   47594:	1c21883a 	add	r16,r3,r16
   47598:	b43fff15 	stw	r16,-4(r22)
   4759c:	bcbfee16 	blt	r23,r18,47558 <__multadd+0x44>
   475a0:	88000826 	beq	r17,zero,475c4 <__multadd+0xb0>
   475a4:	98800217 	ldw	r2,8(r19)
   475a8:	9080120e 	bge	r18,r2,475f4 <__multadd+0xe0>
   475ac:	90800144 	addi	r2,r18,5
   475b0:	100490ba 	slli	r2,r2,2
   475b4:	94800044 	addi	r18,r18,1
   475b8:	9885883a 	add	r2,r19,r2
   475bc:	14400015 	stw	r17,0(r2)
   475c0:	9c800415 	stw	r18,16(r19)
   475c4:	9805883a 	mov	r2,r19
   475c8:	dfc00817 	ldw	ra,32(sp)
   475cc:	ddc00717 	ldw	r23,28(sp)
   475d0:	dd800617 	ldw	r22,24(sp)
   475d4:	dd400517 	ldw	r21,20(sp)
   475d8:	dd000417 	ldw	r20,16(sp)
   475dc:	dcc00317 	ldw	r19,12(sp)
   475e0:	dc800217 	ldw	r18,8(sp)
   475e4:	dc400117 	ldw	r17,4(sp)
   475e8:	dc000017 	ldw	r16,0(sp)
   475ec:	dec00904 	addi	sp,sp,36
   475f0:	f800283a 	ret
   475f4:	99400117 	ldw	r5,4(r19)
   475f8:	a009883a 	mov	r4,r20
   475fc:	29400044 	addi	r5,r5,1
   47600:	004744c0 	call	4744c <_Balloc>
   47604:	1021883a 	mov	r16,r2
   47608:	10001226 	beq	r2,zero,47654 <__multadd+0x140>
   4760c:	99800417 	ldw	r6,16(r19)
   47610:	99400304 	addi	r5,r19,12
   47614:	11000304 	addi	r4,r2,12
   47618:	31800084 	addi	r6,r6,2
   4761c:	300c90ba 	slli	r6,r6,2
   47620:	00472200 	call	47220 <memcpy>
   47624:	98000926 	beq	r19,zero,4764c <__multadd+0x138>
   47628:	98c00117 	ldw	r3,4(r19)
   4762c:	a0801317 	ldw	r2,76(r20)
   47630:	180690ba 	slli	r3,r3,2
   47634:	10c5883a 	add	r2,r2,r3
   47638:	10c00017 	ldw	r3,0(r2)
   4763c:	98c00015 	stw	r3,0(r19)
   47640:	14c00015 	stw	r19,0(r2)
   47644:	8027883a 	mov	r19,r16
   47648:	003fd806 	br	475ac <__multadd+0x98>
   4764c:	8027883a 	mov	r19,r16
   47650:	003fd606 	br	475ac <__multadd+0x98>
   47654:	01c00174 	movhi	r7,5
   47658:	01000174 	movhi	r4,5
   4765c:	39c3f304 	addi	r7,r7,4044
   47660:	000d883a 	mov	r6,zero
   47664:	01402d44 	movi	r5,181
   47668:	21040804 	addi	r4,r4,4128
   4766c:	004a1300 	call	4a130 <__assert_func>

00047670 <__s2b>:
   47670:	defff904 	addi	sp,sp,-28
   47674:	dc800215 	stw	r18,8(sp)
   47678:	dc000015 	stw	r16,0(sp)
   4767c:	2025883a 	mov	r18,r4
   47680:	2821883a 	mov	r16,r5
   47684:	39000204 	addi	r4,r7,8
   47688:	01400244 	movi	r5,9
   4768c:	dcc00315 	stw	r19,12(sp)
   47690:	dc400115 	stw	r17,4(sp)
   47694:	dfc00615 	stw	ra,24(sp)
   47698:	3823883a 	mov	r17,r7
   4769c:	dd400515 	stw	r21,20(sp)
   476a0:	dd000415 	stw	r20,16(sp)
   476a4:	3027883a 	mov	r19,r6
   476a8:	004baa00 	call	4baa0 <__divsi3>
   476ac:	88c00290 	cmplti	r3,r17,10
   476b0:	1800341e 	bne	r3,zero,47784 <__s2b+0x114>
   476b4:	00c00044 	movi	r3,1
   476b8:	000b883a 	mov	r5,zero
   476bc:	18c7883a 	add	r3,r3,r3
   476c0:	29400044 	addi	r5,r5,1
   476c4:	18bffd16 	blt	r3,r2,476bc <__s2b+0x4c>
   476c8:	9009883a 	mov	r4,r18
   476cc:	004744c0 	call	4744c <_Balloc>
   476d0:	100b883a 	mov	r5,r2
   476d4:	10002d26 	beq	r2,zero,4778c <__s2b+0x11c>
   476d8:	d8800717 	ldw	r2,28(sp)
   476dc:	28800515 	stw	r2,20(r5)
   476e0:	00800044 	movi	r2,1
   476e4:	28800415 	stw	r2,16(r5)
   476e8:	98800290 	cmplti	r2,r19,10
   476ec:	1000221e 	bne	r2,zero,47778 <__s2b+0x108>
   476f0:	85400244 	addi	r21,r16,9
   476f4:	a829883a 	mov	r20,r21
   476f8:	84e1883a 	add	r16,r16,r19
   476fc:	a1c00007 	ldb	r7,0(r20)
   47700:	01800284 	movi	r6,10
   47704:	9009883a 	mov	r4,r18
   47708:	39fff404 	addi	r7,r7,-48
   4770c:	00475140 	call	47514 <__multadd>
   47710:	a5000044 	addi	r20,r20,1
   47714:	100b883a 	mov	r5,r2
   47718:	a43ff81e 	bne	r20,r16,476fc <__s2b+0x8c>
   4771c:	9c3ffe04 	addi	r16,r19,-8
   47720:	ac21883a 	add	r16,r21,r16
   47724:	9c400a0e 	bge	r19,r17,47750 <__s2b+0xe0>
   47728:	8ce3c83a 	sub	r17,r17,r19
   4772c:	8463883a 	add	r17,r16,r17
   47730:	81c00007 	ldb	r7,0(r16)
   47734:	01800284 	movi	r6,10
   47738:	9009883a 	mov	r4,r18
   4773c:	39fff404 	addi	r7,r7,-48
   47740:	00475140 	call	47514 <__multadd>
   47744:	84000044 	addi	r16,r16,1
   47748:	100b883a 	mov	r5,r2
   4774c:	8c3ff81e 	bne	r17,r16,47730 <__s2b+0xc0>
   47750:	2805883a 	mov	r2,r5
   47754:	dfc00617 	ldw	ra,24(sp)
   47758:	dd400517 	ldw	r21,20(sp)
   4775c:	dd000417 	ldw	r20,16(sp)
   47760:	dcc00317 	ldw	r19,12(sp)
   47764:	dc800217 	ldw	r18,8(sp)
   47768:	dc400117 	ldw	r17,4(sp)
   4776c:	dc000017 	ldw	r16,0(sp)
   47770:	dec00704 	addi	sp,sp,28
   47774:	f800283a 	ret
   47778:	84000284 	addi	r16,r16,10
   4777c:	04c00244 	movi	r19,9
   47780:	003fe806 	br	47724 <__s2b+0xb4>
   47784:	000b883a 	mov	r5,zero
   47788:	003fcf06 	br	476c8 <__s2b+0x58>
   4778c:	01c00174 	movhi	r7,5
   47790:	01000174 	movhi	r4,5
   47794:	39c3f304 	addi	r7,r7,4044
   47798:	000d883a 	mov	r6,zero
   4779c:	01403384 	movi	r5,206
   477a0:	21040804 	addi	r4,r4,4128
   477a4:	004a1300 	call	4a130 <__assert_func>

000477a8 <__hi0bits>:
   477a8:	20bfffec 	andhi	r2,r4,65535
   477ac:	1000131e 	bne	r2,zero,477fc <__hi0bits+0x54>
   477b0:	2008943a 	slli	r4,r4,16
   477b4:	00800404 	movi	r2,16
   477b8:	20ffc02c 	andhi	r3,r4,65280
   477bc:	1800021e 	bne	r3,zero,477c8 <__hi0bits+0x20>
   477c0:	2008923a 	slli	r4,r4,8
   477c4:	10800204 	addi	r2,r2,8
   477c8:	20fc002c 	andhi	r3,r4,61440
   477cc:	1800021e 	bne	r3,zero,477d8 <__hi0bits+0x30>
   477d0:	2008913a 	slli	r4,r4,4
   477d4:	10800104 	addi	r2,r2,4
   477d8:	20f0002c 	andhi	r3,r4,49152
   477dc:	1800021e 	bne	r3,zero,477e8 <__hi0bits+0x40>
   477e0:	200890ba 	slli	r4,r4,2
   477e4:	10800084 	addi	r2,r2,2
   477e8:	20000316 	blt	r4,zero,477f8 <__hi0bits+0x50>
   477ec:	2110002c 	andhi	r4,r4,16384
   477f0:	10800044 	addi	r2,r2,1
   477f4:	20000326 	beq	r4,zero,47804 <__hi0bits+0x5c>
   477f8:	f800283a 	ret
   477fc:	0005883a 	mov	r2,zero
   47800:	003fed06 	br	477b8 <__hi0bits+0x10>
   47804:	00800804 	movi	r2,32
   47808:	f800283a 	ret

0004780c <__lo0bits>:
   4780c:	20c00017 	ldw	r3,0(r4)
   47810:	188001cc 	andi	r2,r3,7
   47814:	10000826 	beq	r2,zero,47838 <__lo0bits+0x2c>
   47818:	1880004c 	andi	r2,r3,1
   4781c:	10001f1e 	bne	r2,zero,4789c <__lo0bits+0x90>
   47820:	1880008c 	andi	r2,r3,2
   47824:	10002126 	beq	r2,zero,478ac <__lo0bits+0xa0>
   47828:	1806d07a 	srli	r3,r3,1
   4782c:	00800044 	movi	r2,1
   47830:	20c00015 	stw	r3,0(r4)
   47834:	f800283a 	ret
   47838:	18bfffcc 	andi	r2,r3,65535
   4783c:	10001426 	beq	r2,zero,47890 <__lo0bits+0x84>
   47840:	0005883a 	mov	r2,zero
   47844:	19403fcc 	andi	r5,r3,255
   47848:	2800021e 	bne	r5,zero,47854 <__lo0bits+0x48>
   4784c:	1806d23a 	srli	r3,r3,8
   47850:	10800204 	addi	r2,r2,8
   47854:	194003cc 	andi	r5,r3,15
   47858:	2800021e 	bne	r5,zero,47864 <__lo0bits+0x58>
   4785c:	1806d13a 	srli	r3,r3,4
   47860:	10800104 	addi	r2,r2,4
   47864:	194000cc 	andi	r5,r3,3
   47868:	2800021e 	bne	r5,zero,47874 <__lo0bits+0x68>
   4786c:	1806d0ba 	srli	r3,r3,2
   47870:	10800084 	addi	r2,r2,2
   47874:	1940004c 	andi	r5,r3,1
   47878:	2800031e 	bne	r5,zero,47888 <__lo0bits+0x7c>
   4787c:	1806d07a 	srli	r3,r3,1
   47880:	10800044 	addi	r2,r2,1
   47884:	18000726 	beq	r3,zero,478a4 <__lo0bits+0x98>
   47888:	20c00015 	stw	r3,0(r4)
   4788c:	f800283a 	ret
   47890:	1806d43a 	srli	r3,r3,16
   47894:	00800404 	movi	r2,16
   47898:	003fea06 	br	47844 <__lo0bits+0x38>
   4789c:	0005883a 	mov	r2,zero
   478a0:	f800283a 	ret
   478a4:	00800804 	movi	r2,32
   478a8:	f800283a 	ret
   478ac:	1806d0ba 	srli	r3,r3,2
   478b0:	00800084 	movi	r2,2
   478b4:	20c00015 	stw	r3,0(r4)
   478b8:	f800283a 	ret

000478bc <__i2b>:
   478bc:	20c01317 	ldw	r3,76(r4)
   478c0:	defffd04 	addi	sp,sp,-12
   478c4:	dc400115 	stw	r17,4(sp)
   478c8:	dc000015 	stw	r16,0(sp)
   478cc:	dfc00215 	stw	ra,8(sp)
   478d0:	2021883a 	mov	r16,r4
   478d4:	2823883a 	mov	r17,r5
   478d8:	18000d26 	beq	r3,zero,47910 <__i2b+0x54>
   478dc:	18800117 	ldw	r2,4(r3)
   478e0:	10001826 	beq	r2,zero,47944 <__i2b+0x88>
   478e4:	11000017 	ldw	r4,0(r2)
   478e8:	19000115 	stw	r4,4(r3)
   478ec:	00c00044 	movi	r3,1
   478f0:	10000315 	stw	zero,12(r2)
   478f4:	14400515 	stw	r17,20(r2)
   478f8:	10c00415 	stw	r3,16(r2)
   478fc:	dfc00217 	ldw	ra,8(sp)
   47900:	dc400117 	ldw	r17,4(sp)
   47904:	dc000017 	ldw	r16,0(sp)
   47908:	dec00304 	addi	sp,sp,12
   4790c:	f800283a 	ret
   47910:	01800844 	movi	r6,33
   47914:	01400104 	movi	r5,4
   47918:	004a1a80 	call	4a1a8 <_calloc_r>
   4791c:	80801315 	stw	r2,76(r16)
   47920:	1007883a 	mov	r3,r2
   47924:	103fed1e 	bne	r2,zero,478dc <__i2b+0x20>
   47928:	01c00174 	movhi	r7,5
   4792c:	01000174 	movhi	r4,5
   47930:	39c3f304 	addi	r7,r7,4044
   47934:	000d883a 	mov	r6,zero
   47938:	01405004 	movi	r5,320
   4793c:	21040804 	addi	r4,r4,4128
   47940:	004a1300 	call	4a130 <__assert_func>
   47944:	01800704 	movi	r6,28
   47948:	01400044 	movi	r5,1
   4794c:	8009883a 	mov	r4,r16
   47950:	004a1a80 	call	4a1a8 <_calloc_r>
   47954:	103ff426 	beq	r2,zero,47928 <__i2b+0x6c>
   47958:	00c00044 	movi	r3,1
   4795c:	10c00115 	stw	r3,4(r2)
   47960:	00c00084 	movi	r3,2
   47964:	10c00215 	stw	r3,8(r2)
   47968:	003fe006 	br	478ec <__i2b+0x30>

0004796c <__multiply>:
   4796c:	defff004 	addi	sp,sp,-64
   47970:	dd800c15 	stw	r22,48(sp)
   47974:	dc400715 	stw	r17,28(sp)
   47978:	2d800417 	ldw	r22,16(r5)
   4797c:	34400417 	ldw	r17,16(r6)
   47980:	dc800815 	stw	r18,32(sp)
   47984:	dc000615 	stw	r16,24(sp)
   47988:	dfc00f15 	stw	ra,60(sp)
   4798c:	df000e15 	stw	fp,56(sp)
   47990:	ddc00d15 	stw	r23,52(sp)
   47994:	dd400b15 	stw	r21,44(sp)
   47998:	dd000a15 	stw	r20,40(sp)
   4799c:	dcc00915 	stw	r19,36(sp)
   479a0:	2825883a 	mov	r18,r5
   479a4:	3021883a 	mov	r16,r6
   479a8:	b4400516 	blt	r22,r17,479c0 <__multiply+0x54>
   479ac:	8807883a 	mov	r3,r17
   479b0:	2821883a 	mov	r16,r5
   479b4:	b023883a 	mov	r17,r22
   479b8:	3025883a 	mov	r18,r6
   479bc:	182d883a 	mov	r22,r3
   479c0:	80800217 	ldw	r2,8(r16)
   479c4:	8d87883a 	add	r3,r17,r22
   479c8:	d8c00015 	stw	r3,0(sp)
   479cc:	81400117 	ldw	r5,4(r16)
   479d0:	10c0010e 	bge	r2,r3,479d8 <__multiply+0x6c>
   479d4:	29400044 	addi	r5,r5,1
   479d8:	004744c0 	call	4744c <_Balloc>
   479dc:	d8800515 	stw	r2,20(sp)
   479e0:	10008c26 	beq	r2,zero,47c14 <__multiply+0x2a8>
   479e4:	d8800017 	ldw	r2,0(sp)
   479e8:	102690ba 	slli	r19,r2,2
   479ec:	d8800517 	ldw	r2,20(sp)
   479f0:	15000504 	addi	r20,r2,20
   479f4:	a4c5883a 	add	r2,r20,r19
   479f8:	d8800115 	stw	r2,4(sp)
   479fc:	a0800a2e 	bgeu	r20,r2,47a28 <__multiply+0xbc>
   47a00:	d8800117 	ldw	r2,4(sp)
   47a04:	d8c00517 	ldw	r3,20(sp)
   47a08:	000b883a 	mov	r5,zero
   47a0c:	a009883a 	mov	r4,r20
   47a10:	10cdc83a 	sub	r6,r2,r3
   47a14:	31bffac4 	addi	r6,r6,-21
   47a18:	300cd0ba 	srli	r6,r6,2
   47a1c:	31800044 	addi	r6,r6,1
   47a20:	300c90ba 	slli	r6,r6,2
   47a24:	00426540 	call	42654 <memset>
   47a28:	b02c90ba 	slli	r22,r22,2
   47a2c:	882290ba 	slli	r17,r17,2
   47a30:	94800504 	addi	r18,r18,20
   47a34:	80800504 	addi	r2,r16,20
   47a38:	9587883a 	add	r3,r18,r22
   47a3c:	d8800315 	stw	r2,12(sp)
   47a40:	d8c00215 	stw	r3,8(sp)
   47a44:	1463883a 	add	r17,r2,r17
   47a48:	90c0542e 	bgeu	r18,r3,47b9c <__multiply+0x230>
   47a4c:	80800544 	addi	r2,r16,21
   47a50:	88806d36 	bltu	r17,r2,47c08 <__multiply+0x29c>
   47a54:	8c05c83a 	sub	r2,r17,r16
   47a58:	10bffac4 	addi	r2,r2,-21
   47a5c:	1004d0ba 	srli	r2,r2,2
   47a60:	10800044 	addi	r2,r2,1
   47a64:	100490ba 	slli	r2,r2,2
   47a68:	d8800415 	stw	r2,16(sp)
   47a6c:	00000606 	br	47a88 <__multiply+0x11c>
   47a70:	102ad43a 	srli	r21,r2,16
   47a74:	a800271e 	bne	r21,zero,47b14 <__multiply+0x1a8>
   47a78:	d8800217 	ldw	r2,8(sp)
   47a7c:	94800104 	addi	r18,r18,4
   47a80:	a5000104 	addi	r20,r20,4
   47a84:	9080452e 	bgeu	r18,r2,47b9c <__multiply+0x230>
   47a88:	90800017 	ldw	r2,0(r18)
   47a8c:	15ffffcc 	andi	r23,r2,65535
   47a90:	b83ff726 	beq	r23,zero,47a70 <__multiply+0x104>
   47a94:	dd400317 	ldw	r21,12(sp)
   47a98:	a02d883a 	mov	r22,r20
   47a9c:	0027883a 	mov	r19,zero
   47aa0:	af000017 	ldw	fp,0(r21)
   47aa4:	b4000017 	ldw	r16,0(r22)
   47aa8:	b80b883a 	mov	r5,r23
   47aac:	e13fffcc 	andi	r4,fp,65535
   47ab0:	004bc540 	call	4bc54 <__mulsi3>
   47ab4:	e008d43a 	srli	r4,fp,16
   47ab8:	823fffcc 	andi	r8,r16,65535
   47abc:	1205883a 	add	r2,r2,r8
   47ac0:	b80b883a 	mov	r5,r23
   47ac4:	14e7883a 	add	r19,r2,r19
   47ac8:	8020d43a 	srli	r16,r16,16
   47acc:	004bc540 	call	4bc54 <__mulsi3>
   47ad0:	9808d43a 	srli	r4,r19,16
   47ad4:	1405883a 	add	r2,r2,r16
   47ad8:	98ffffcc 	andi	r3,r19,65535
   47adc:	1105883a 	add	r2,r2,r4
   47ae0:	1008943a 	slli	r4,r2,16
   47ae4:	b5800104 	addi	r22,r22,4
   47ae8:	ad400104 	addi	r21,r21,4
   47aec:	20c6b03a 	or	r3,r4,r3
   47af0:	b0ffff15 	stw	r3,-4(r22)
   47af4:	1026d43a 	srli	r19,r2,16
   47af8:	ac7fe936 	bltu	r21,r17,47aa0 <__multiply+0x134>
   47afc:	d8800417 	ldw	r2,16(sp)
   47b00:	a085883a 	add	r2,r20,r2
   47b04:	14c00015 	stw	r19,0(r2)
   47b08:	90800017 	ldw	r2,0(r18)
   47b0c:	102ad43a 	srli	r21,r2,16
   47b10:	a83fd926 	beq	r21,zero,47a78 <__multiply+0x10c>
   47b14:	a5c00017 	ldw	r23,0(r20)
   47b18:	dd800317 	ldw	r22,12(sp)
   47b1c:	a027883a 	mov	r19,r20
   47b20:	b821883a 	mov	r16,r23
   47b24:	0039883a 	mov	fp,zero
   47b28:	b100000b 	ldhu	r4,0(r22)
   47b2c:	a80b883a 	mov	r5,r21
   47b30:	9cc00104 	addi	r19,r19,4
   47b34:	004bc540 	call	4bc54 <__mulsi3>
   47b38:	800cd43a 	srli	r6,r16,16
   47b3c:	b8ffffcc 	andi	r3,r23,65535
   47b40:	b5800104 	addi	r22,r22,4
   47b44:	118d883a 	add	r6,r2,r6
   47b48:	3739883a 	add	fp,r6,fp
   47b4c:	e004943a 	slli	r2,fp,16
   47b50:	9c000017 	ldw	r16,0(r19)
   47b54:	a80b883a 	mov	r5,r21
   47b58:	10c6b03a 	or	r3,r2,r3
   47b5c:	98ffff15 	stw	r3,-4(r19)
   47b60:	b13fff8b 	ldhu	r4,-2(r22)
   47b64:	004bc540 	call	4bc54 <__mulsi3>
   47b68:	e00cd43a 	srli	r6,fp,16
   47b6c:	80ffffcc 	andi	r3,r16,65535
   47b70:	10c7883a 	add	r3,r2,r3
   47b74:	19af883a 	add	r23,r3,r6
   47b78:	b838d43a 	srli	fp,r23,16
   47b7c:	b47fea36 	bltu	r22,r17,47b28 <__multiply+0x1bc>
   47b80:	d8800417 	ldw	r2,16(sp)
   47b84:	94800104 	addi	r18,r18,4
   47b88:	a085883a 	add	r2,r20,r2
   47b8c:	15c00015 	stw	r23,0(r2)
   47b90:	d8800217 	ldw	r2,8(sp)
   47b94:	a5000104 	addi	r20,r20,4
   47b98:	90bfbb36 	bltu	r18,r2,47a88 <__multiply+0x11c>
   47b9c:	d8800017 	ldw	r2,0(sp)
   47ba0:	00800516 	blt	zero,r2,47bb8 <__multiply+0x24c>
   47ba4:	00000906 	br	47bcc <__multiply+0x260>
   47ba8:	d8800017 	ldw	r2,0(sp)
   47bac:	10bfffc4 	addi	r2,r2,-1
   47bb0:	d8800015 	stw	r2,0(sp)
   47bb4:	10000526 	beq	r2,zero,47bcc <__multiply+0x260>
   47bb8:	d8c00117 	ldw	r3,4(sp)
   47bbc:	18bfff17 	ldw	r2,-4(r3)
   47bc0:	18ffff04 	addi	r3,r3,-4
   47bc4:	d8c00115 	stw	r3,4(sp)
   47bc8:	103ff726 	beq	r2,zero,47ba8 <__multiply+0x23c>
   47bcc:	d8800517 	ldw	r2,20(sp)
   47bd0:	d8c00017 	ldw	r3,0(sp)
   47bd4:	10c00415 	stw	r3,16(r2)
   47bd8:	dfc00f17 	ldw	ra,60(sp)
   47bdc:	df000e17 	ldw	fp,56(sp)
   47be0:	ddc00d17 	ldw	r23,52(sp)
   47be4:	dd800c17 	ldw	r22,48(sp)
   47be8:	dd400b17 	ldw	r21,44(sp)
   47bec:	dd000a17 	ldw	r20,40(sp)
   47bf0:	dcc00917 	ldw	r19,36(sp)
   47bf4:	dc800817 	ldw	r18,32(sp)
   47bf8:	dc400717 	ldw	r17,28(sp)
   47bfc:	dc000617 	ldw	r16,24(sp)
   47c00:	dec01004 	addi	sp,sp,64
   47c04:	f800283a 	ret
   47c08:	00800104 	movi	r2,4
   47c0c:	d8800415 	stw	r2,16(sp)
   47c10:	003f9d06 	br	47a88 <__multiply+0x11c>
   47c14:	01c00174 	movhi	r7,5
   47c18:	01000174 	movhi	r4,5
   47c1c:	39c3f304 	addi	r7,r7,4044
   47c20:	000d883a 	mov	r6,zero
   47c24:	01405744 	movi	r5,349
   47c28:	21040804 	addi	r4,r4,4128
   47c2c:	004a1300 	call	4a130 <__assert_func>

00047c30 <__pow5mult>:
   47c30:	defffb04 	addi	sp,sp,-20
   47c34:	dcc00315 	stw	r19,12(sp)
   47c38:	dc000015 	stw	r16,0(sp)
   47c3c:	dfc00415 	stw	ra,16(sp)
   47c40:	dc800215 	stw	r18,8(sp)
   47c44:	dc400115 	stw	r17,4(sp)
   47c48:	308000cc 	andi	r2,r6,3
   47c4c:	3021883a 	mov	r16,r6
   47c50:	2027883a 	mov	r19,r4
   47c54:	10002d1e 	bne	r2,zero,47d0c <__pow5mult+0xdc>
   47c58:	2825883a 	mov	r18,r5
   47c5c:	8021d0ba 	srai	r16,r16,2
   47c60:	80001926 	beq	r16,zero,47cc8 <__pow5mult+0x98>
   47c64:	9c401217 	ldw	r17,72(r19)
   47c68:	8800061e 	bne	r17,zero,47c84 <__pow5mult+0x54>
   47c6c:	00002f06 	br	47d2c <__pow5mult+0xfc>
   47c70:	8021d07a 	srai	r16,r16,1
   47c74:	80001426 	beq	r16,zero,47cc8 <__pow5mult+0x98>
   47c78:	88800017 	ldw	r2,0(r17)
   47c7c:	10001a26 	beq	r2,zero,47ce8 <__pow5mult+0xb8>
   47c80:	1023883a 	mov	r17,r2
   47c84:	8080004c 	andi	r2,r16,1
   47c88:	103ff926 	beq	r2,zero,47c70 <__pow5mult+0x40>
   47c8c:	880d883a 	mov	r6,r17
   47c90:	900b883a 	mov	r5,r18
   47c94:	9809883a 	mov	r4,r19
   47c98:	004796c0 	call	4796c <__multiply>
   47c9c:	90001926 	beq	r18,zero,47d04 <__pow5mult+0xd4>
   47ca0:	91000117 	ldw	r4,4(r18)
   47ca4:	98c01317 	ldw	r3,76(r19)
   47ca8:	8021d07a 	srai	r16,r16,1
   47cac:	200890ba 	slli	r4,r4,2
   47cb0:	1907883a 	add	r3,r3,r4
   47cb4:	19000017 	ldw	r4,0(r3)
   47cb8:	91000015 	stw	r4,0(r18)
   47cbc:	1c800015 	stw	r18,0(r3)
   47cc0:	1025883a 	mov	r18,r2
   47cc4:	803fec1e 	bne	r16,zero,47c78 <__pow5mult+0x48>
   47cc8:	9005883a 	mov	r2,r18
   47ccc:	dfc00417 	ldw	ra,16(sp)
   47cd0:	dcc00317 	ldw	r19,12(sp)
   47cd4:	dc800217 	ldw	r18,8(sp)
   47cd8:	dc400117 	ldw	r17,4(sp)
   47cdc:	dc000017 	ldw	r16,0(sp)
   47ce0:	dec00504 	addi	sp,sp,20
   47ce4:	f800283a 	ret
   47ce8:	880d883a 	mov	r6,r17
   47cec:	880b883a 	mov	r5,r17
   47cf0:	9809883a 	mov	r4,r19
   47cf4:	004796c0 	call	4796c <__multiply>
   47cf8:	88800015 	stw	r2,0(r17)
   47cfc:	10000015 	stw	zero,0(r2)
   47d00:	003fdf06 	br	47c80 <__pow5mult+0x50>
   47d04:	1025883a 	mov	r18,r2
   47d08:	003fd906 	br	47c70 <__pow5mult+0x40>
   47d0c:	100490ba 	slli	r2,r2,2
   47d10:	00c00174 	movhi	r3,5
   47d14:	000f883a 	mov	r7,zero
   47d18:	10c7883a 	add	r3,r2,r3
   47d1c:	19841717 	ldw	r6,4188(r3)
   47d20:	00475140 	call	47514 <__multadd>
   47d24:	1025883a 	mov	r18,r2
   47d28:	003fcc06 	br	47c5c <__pow5mult+0x2c>
   47d2c:	01400044 	movi	r5,1
   47d30:	9809883a 	mov	r4,r19
   47d34:	004744c0 	call	4744c <_Balloc>
   47d38:	1023883a 	mov	r17,r2
   47d3c:	10000726 	beq	r2,zero,47d5c <__pow5mult+0x12c>
   47d40:	00809c44 	movi	r2,625
   47d44:	88800515 	stw	r2,20(r17)
   47d48:	00800044 	movi	r2,1
   47d4c:	88800415 	stw	r2,16(r17)
   47d50:	9c401215 	stw	r17,72(r19)
   47d54:	88000015 	stw	zero,0(r17)
   47d58:	003fca06 	br	47c84 <__pow5mult+0x54>
   47d5c:	01c00174 	movhi	r7,5
   47d60:	01000174 	movhi	r4,5
   47d64:	39c3f304 	addi	r7,r7,4044
   47d68:	000d883a 	mov	r6,zero
   47d6c:	01405004 	movi	r5,320
   47d70:	21040804 	addi	r4,r4,4128
   47d74:	004a1300 	call	4a130 <__assert_func>

00047d78 <__lshift>:
   47d78:	defff804 	addi	sp,sp,-32
   47d7c:	dd800615 	stw	r22,24(sp)
   47d80:	dc000015 	stw	r16,0(sp)
   47d84:	302dd17a 	srai	r22,r6,5
   47d88:	2c000417 	ldw	r16,16(r5)
   47d8c:	28800217 	ldw	r2,8(r5)
   47d90:	dd000415 	stw	r20,16(sp)
   47d94:	b421883a 	add	r16,r22,r16
   47d98:	dcc00315 	stw	r19,12(sp)
   47d9c:	dc800215 	stw	r18,8(sp)
   47da0:	dc400115 	stw	r17,4(sp)
   47da4:	dfc00715 	stw	ra,28(sp)
   47da8:	dd400515 	stw	r21,20(sp)
   47dac:	85000044 	addi	r20,r16,1
   47db0:	2827883a 	mov	r19,r5
   47db4:	3025883a 	mov	r18,r6
   47db8:	29400117 	ldw	r5,4(r5)
   47dbc:	2023883a 	mov	r17,r4
   47dc0:	1500030e 	bge	r2,r20,47dd0 <__lshift+0x58>
   47dc4:	1085883a 	add	r2,r2,r2
   47dc8:	29400044 	addi	r5,r5,1
   47dcc:	153ffd16 	blt	r2,r20,47dc4 <__lshift+0x4c>
   47dd0:	8809883a 	mov	r4,r17
   47dd4:	004744c0 	call	4744c <_Balloc>
   47dd8:	102b883a 	mov	r21,r2
   47ddc:	10004126 	beq	r2,zero,47ee4 <__lshift+0x16c>
   47de0:	11000504 	addi	r4,r2,20
   47de4:	0580050e 	bge	zero,r22,47dfc <__lshift+0x84>
   47de8:	b02c90ba 	slli	r22,r22,2
   47dec:	000b883a 	mov	r5,zero
   47df0:	b00d883a 	mov	r6,r22
   47df4:	00426540 	call	42654 <memset>
   47df8:	1589883a 	add	r4,r2,r22
   47dfc:	9a000417 	ldw	r8,16(r19)
   47e00:	98c00504 	addi	r3,r19,20
   47e04:	948007cc 	andi	r18,r18,31
   47e08:	401090ba 	slli	r8,r8,2
   47e0c:	1a11883a 	add	r8,r3,r8
   47e10:	90002c26 	beq	r18,zero,47ec4 <__lshift+0x14c>
   47e14:	01400804 	movi	r5,32
   47e18:	2c8bc83a 	sub	r5,r5,r18
   47e1c:	2005883a 	mov	r2,r4
   47e20:	000f883a 	mov	r7,zero
   47e24:	19800017 	ldw	r6,0(r3)
   47e28:	10800104 	addi	r2,r2,4
   47e2c:	18c00104 	addi	r3,r3,4
   47e30:	348c983a 	sll	r6,r6,r18
   47e34:	31ccb03a 	or	r6,r6,r7
   47e38:	11bfff15 	stw	r6,-4(r2)
   47e3c:	19bfff17 	ldw	r6,-4(r3)
   47e40:	314ed83a 	srl	r7,r6,r5
   47e44:	1a3ff736 	bltu	r3,r8,47e24 <__lshift+0xac>
   47e48:	98800544 	addi	r2,r19,21
   47e4c:	40802336 	bltu	r8,r2,47edc <__lshift+0x164>
   47e50:	44c7c83a 	sub	r3,r8,r19
   47e54:	18fffac4 	addi	r3,r3,-21
   47e58:	1806d0ba 	srli	r3,r3,2
   47e5c:	18c00044 	addi	r3,r3,1
   47e60:	180690ba 	slli	r3,r3,2
   47e64:	20c9883a 	add	r4,r4,r3
   47e68:	21c00015 	stw	r7,0(r4)
   47e6c:	38000126 	beq	r7,zero,47e74 <__lshift+0xfc>
   47e70:	a021883a 	mov	r16,r20
   47e74:	ac000415 	stw	r16,16(r21)
   47e78:	98000726 	beq	r19,zero,47e98 <__lshift+0x120>
   47e7c:	98c00117 	ldw	r3,4(r19)
   47e80:	88801317 	ldw	r2,76(r17)
   47e84:	180690ba 	slli	r3,r3,2
   47e88:	10c5883a 	add	r2,r2,r3
   47e8c:	10c00017 	ldw	r3,0(r2)
   47e90:	98c00015 	stw	r3,0(r19)
   47e94:	14c00015 	stw	r19,0(r2)
   47e98:	a805883a 	mov	r2,r21
   47e9c:	dfc00717 	ldw	ra,28(sp)
   47ea0:	dd800617 	ldw	r22,24(sp)
   47ea4:	dd400517 	ldw	r21,20(sp)
   47ea8:	dd000417 	ldw	r20,16(sp)
   47eac:	dcc00317 	ldw	r19,12(sp)
   47eb0:	dc800217 	ldw	r18,8(sp)
   47eb4:	dc400117 	ldw	r17,4(sp)
   47eb8:	dc000017 	ldw	r16,0(sp)
   47ebc:	dec00804 	addi	sp,sp,32
   47ec0:	f800283a 	ret
   47ec4:	18800017 	ldw	r2,0(r3)
   47ec8:	18c00104 	addi	r3,r3,4
   47ecc:	21000104 	addi	r4,r4,4
   47ed0:	20bfff15 	stw	r2,-4(r4)
   47ed4:	1a3ffb36 	bltu	r3,r8,47ec4 <__lshift+0x14c>
   47ed8:	003fe606 	br	47e74 <__lshift+0xfc>
   47edc:	00c00104 	movi	r3,4
   47ee0:	003fe006 	br	47e64 <__lshift+0xec>
   47ee4:	01c00174 	movhi	r7,5
   47ee8:	01000174 	movhi	r4,5
   47eec:	39c3f304 	addi	r7,r7,4044
   47ef0:	000d883a 	mov	r6,zero
   47ef4:	01407644 	movi	r5,473
   47ef8:	21040804 	addi	r4,r4,4128
   47efc:	004a1300 	call	4a130 <__assert_func>

00047f00 <__mcmp>:
   47f00:	21800417 	ldw	r6,16(r4)
   47f04:	28c00417 	ldw	r3,16(r5)
   47f08:	30c5c83a 	sub	r2,r6,r3
   47f0c:	30c00e1e 	bne	r6,r3,47f48 <__mcmp+0x48>
   47f10:	180690ba 	slli	r3,r3,2
   47f14:	21c00504 	addi	r7,r4,20
   47f18:	29400504 	addi	r5,r5,20
   47f1c:	38c9883a 	add	r4,r7,r3
   47f20:	28c7883a 	add	r3,r5,r3
   47f24:	00000106 	br	47f2c <__mcmp+0x2c>
   47f28:	3900082e 	bgeu	r7,r4,47f4c <__mcmp+0x4c>
   47f2c:	21bfff17 	ldw	r6,-4(r4)
   47f30:	197fff17 	ldw	r5,-4(r3)
   47f34:	213fff04 	addi	r4,r4,-4
   47f38:	18ffff04 	addi	r3,r3,-4
   47f3c:	317ffa26 	beq	r6,r5,47f28 <__mcmp+0x28>
   47f40:	3140032e 	bgeu	r6,r5,47f50 <__mcmp+0x50>
   47f44:	00bfffc4 	movi	r2,-1
   47f48:	f800283a 	ret
   47f4c:	f800283a 	ret
   47f50:	00800044 	movi	r2,1
   47f54:	f800283a 	ret

00047f58 <__mdiff>:
   47f58:	28800417 	ldw	r2,16(r5)
   47f5c:	30c00417 	ldw	r3,16(r6)
   47f60:	defffc04 	addi	sp,sp,-16
   47f64:	dc800215 	stw	r18,8(sp)
   47f68:	dc400115 	stw	r17,4(sp)
   47f6c:	dc000015 	stw	r16,0(sp)
   47f70:	dfc00315 	stw	ra,12(sp)
   47f74:	2823883a 	mov	r17,r5
   47f78:	3021883a 	mov	r16,r6
   47f7c:	10e5c83a 	sub	r18,r2,r3
   47f80:	10c0641e 	bne	r2,r3,48114 <__mdiff+0x1bc>
   47f84:	180c90ba 	slli	r6,r3,2
   47f88:	29400504 	addi	r5,r5,20
   47f8c:	80c00504 	addi	r3,r16,20
   47f90:	2985883a 	add	r2,r5,r6
   47f94:	1987883a 	add	r3,r3,r6
   47f98:	00000106 	br	47fa0 <__mdiff+0x48>
   47f9c:	2880642e 	bgeu	r5,r2,48130 <__mdiff+0x1d8>
   47fa0:	11bfff17 	ldw	r6,-4(r2)
   47fa4:	19ffff17 	ldw	r7,-4(r3)
   47fa8:	10bfff04 	addi	r2,r2,-4
   47fac:	18ffff04 	addi	r3,r3,-4
   47fb0:	31fffa26 	beq	r6,r7,47f9c <__mdiff+0x44>
   47fb4:	31c05236 	bltu	r6,r7,48100 <__mdiff+0x1a8>
   47fb8:	89400117 	ldw	r5,4(r17)
   47fbc:	004744c0 	call	4744c <_Balloc>
   47fc0:	10006226 	beq	r2,zero,4814c <__mdiff+0x1f4>
   47fc4:	8a400417 	ldw	r9,16(r17)
   47fc8:	83000417 	ldw	r12,16(r16)
   47fcc:	8ac00504 	addi	r11,r17,20
   47fd0:	481090ba 	slli	r8,r9,2
   47fd4:	601890ba 	slli	r12,r12,2
   47fd8:	81800504 	addi	r6,r16,20
   47fdc:	13400504 	addi	r13,r2,20
   47fe0:	14800315 	stw	r18,12(r2)
   47fe4:	5a11883a 	add	r8,r11,r8
   47fe8:	3319883a 	add	r12,r6,r12
   47fec:	681d883a 	mov	r14,r13
   47ff0:	5815883a 	mov	r10,r11
   47ff4:	0007883a 	mov	r3,zero
   47ff8:	51000017 	ldw	r4,0(r10)
   47ffc:	31c00017 	ldw	r7,0(r6)
   48000:	73800104 	addi	r14,r14,4
   48004:	217fffcc 	andi	r5,r4,65535
   48008:	28cb883a 	add	r5,r5,r3
   4800c:	38ffffcc 	andi	r3,r7,65535
   48010:	28cbc83a 	sub	r5,r5,r3
   48014:	380ed43a 	srli	r7,r7,16
   48018:	2006d43a 	srli	r3,r4,16
   4801c:	2809d43a 	srai	r4,r5,16
   48020:	297fffcc 	andi	r5,r5,65535
   48024:	19c7c83a 	sub	r3,r3,r7
   48028:	1907883a 	add	r3,r3,r4
   4802c:	1808943a 	slli	r4,r3,16
   48030:	31800104 	addi	r6,r6,4
   48034:	1807d43a 	srai	r3,r3,16
   48038:	214ab03a 	or	r5,r4,r5
   4803c:	717fff15 	stw	r5,-4(r14)
   48040:	52800104 	addi	r10,r10,4
   48044:	333fec36 	bltu	r6,r12,47ff8 <__mdiff+0xa0>
   48048:	640fc83a 	sub	r7,r12,r16
   4804c:	39fffac4 	addi	r7,r7,-21
   48050:	84000544 	addi	r16,r16,21
   48054:	380ed0ba 	srli	r7,r7,2
   48058:	64003336 	bltu	r12,r16,48128 <__mdiff+0x1d0>
   4805c:	380890ba 	slli	r4,r7,2
   48060:	6909883a 	add	r4,r13,r4
   48064:	64002e36 	bltu	r12,r16,48120 <__mdiff+0x1c8>
   48068:	39800044 	addi	r6,r7,1
   4806c:	300c90ba 	slli	r6,r6,2
   48070:	5997883a 	add	r11,r11,r6
   48074:	699b883a 	add	r13,r13,r6
   48078:	5a00152e 	bgeu	r11,r8,480d0 <__mdiff+0x178>
   4807c:	680f883a 	mov	r7,r13
   48080:	580d883a 	mov	r6,r11
   48084:	31000017 	ldw	r4,0(r6)
   48088:	39c00104 	addi	r7,r7,4
   4808c:	31800104 	addi	r6,r6,4
   48090:	217fffcc 	andi	r5,r4,65535
   48094:	28cb883a 	add	r5,r5,r3
   48098:	2815d43a 	srai	r10,r5,16
   4809c:	2006d43a 	srli	r3,r4,16
   480a0:	297fffcc 	andi	r5,r5,65535
   480a4:	1a87883a 	add	r3,r3,r10
   480a8:	1814943a 	slli	r10,r3,16
   480ac:	1807d43a 	srai	r3,r3,16
   480b0:	514ab03a 	or	r5,r10,r5
   480b4:	397fff15 	stw	r5,-4(r7)
   480b8:	323ff236 	bltu	r6,r8,48084 <__mdiff+0x12c>
   480bc:	413fffc4 	addi	r4,r8,-1
   480c0:	22c9c83a 	sub	r4,r4,r11
   480c4:	2008d0ba 	srli	r4,r4,2
   480c8:	200890ba 	slli	r4,r4,2
   480cc:	6909883a 	add	r4,r13,r4
   480d0:	2800041e 	bne	r5,zero,480e4 <__mdiff+0x18c>
   480d4:	20ffff17 	ldw	r3,-4(r4)
   480d8:	4a7fffc4 	addi	r9,r9,-1
   480dc:	213fff04 	addi	r4,r4,-4
   480e0:	183ffc26 	beq	r3,zero,480d4 <__mdiff+0x17c>
   480e4:	12400415 	stw	r9,16(r2)
   480e8:	dfc00317 	ldw	ra,12(sp)
   480ec:	dc800217 	ldw	r18,8(sp)
   480f0:	dc400117 	ldw	r17,4(sp)
   480f4:	dc000017 	ldw	r16,0(sp)
   480f8:	dec00404 	addi	sp,sp,16
   480fc:	f800283a 	ret
   48100:	8805883a 	mov	r2,r17
   48104:	04800044 	movi	r18,1
   48108:	8023883a 	mov	r17,r16
   4810c:	1021883a 	mov	r16,r2
   48110:	003fa906 	br	47fb8 <__mdiff+0x60>
   48114:	903ffa16 	blt	r18,zero,48100 <__mdiff+0x1a8>
   48118:	0025883a 	mov	r18,zero
   4811c:	003fa606 	br	47fb8 <__mdiff+0x60>
   48120:	01800104 	movi	r6,4
   48124:	003fd206 	br	48070 <__mdiff+0x118>
   48128:	0009883a 	mov	r4,zero
   4812c:	003fcc06 	br	48060 <__mdiff+0x108>
   48130:	000b883a 	mov	r5,zero
   48134:	004744c0 	call	4744c <_Balloc>
   48138:	10000b26 	beq	r2,zero,48168 <__mdiff+0x210>
   4813c:	00c00044 	movi	r3,1
   48140:	10c00415 	stw	r3,16(r2)
   48144:	10000515 	stw	zero,20(r2)
   48148:	003fe706 	br	480e8 <__mdiff+0x190>
   4814c:	01c00174 	movhi	r7,5
   48150:	01000174 	movhi	r4,5
   48154:	39c3f304 	addi	r7,r7,4044
   48158:	000d883a 	mov	r6,zero
   4815c:	01409004 	movi	r5,576
   48160:	21040804 	addi	r4,r4,4128
   48164:	004a1300 	call	4a130 <__assert_func>
   48168:	01c00174 	movhi	r7,5
   4816c:	01000174 	movhi	r4,5
   48170:	39c3f304 	addi	r7,r7,4044
   48174:	000d883a 	mov	r6,zero
   48178:	01408c84 	movi	r5,562
   4817c:	21040804 	addi	r4,r4,4128
   48180:	004a1300 	call	4a130 <__assert_func>

00048184 <__ulp>:
   48184:	28dffc2c 	andhi	r3,r5,32752
   48188:	017f3034 	movhi	r5,64704
   4818c:	1947883a 	add	r3,r3,r5
   48190:	00c0020e 	bge	zero,r3,4819c <__ulp+0x18>
   48194:	0005883a 	mov	r2,zero
   48198:	f800283a 	ret
   4819c:	00c7c83a 	sub	r3,zero,r3
   481a0:	1807d53a 	srai	r3,r3,20
   481a4:	18800508 	cmpgei	r2,r3,20
   481a8:	1000041e 	bne	r2,zero,481bc <__ulp+0x38>
   481ac:	00800234 	movhi	r2,8
   481b0:	10c7d83a 	sra	r3,r2,r3
   481b4:	0005883a 	mov	r2,zero
   481b8:	f800283a 	ret
   481bc:	193ffb04 	addi	r4,r3,-20
   481c0:	208007c8 	cmpgei	r2,r4,31
   481c4:	0007883a 	mov	r3,zero
   481c8:	1000031e 	bne	r2,zero,481d8 <__ulp+0x54>
   481cc:	00a00034 	movhi	r2,32768
   481d0:	1104d83a 	srl	r2,r2,r4
   481d4:	f800283a 	ret
   481d8:	00800044 	movi	r2,1
   481dc:	f800283a 	ret

000481e0 <__b2d>:
   481e0:	defffa04 	addi	sp,sp,-24
   481e4:	dc400115 	stw	r17,4(sp)
   481e8:	24400417 	ldw	r17,16(r4)
   481ec:	dc000015 	stw	r16,0(sp)
   481f0:	24000504 	addi	r16,r4,20
   481f4:	882290ba 	slli	r17,r17,2
   481f8:	dc800215 	stw	r18,8(sp)
   481fc:	dd000415 	stw	r20,16(sp)
   48200:	8463883a 	add	r17,r16,r17
   48204:	8cbfff17 	ldw	r18,-4(r17)
   48208:	dcc00315 	stw	r19,12(sp)
   4820c:	dfc00515 	stw	ra,20(sp)
   48210:	9009883a 	mov	r4,r18
   48214:	2827883a 	mov	r19,r5
   48218:	00477a80 	call	477a8 <__hi0bits>
   4821c:	00c00804 	movi	r3,32
   48220:	1889c83a 	sub	r4,r3,r2
   48224:	99000015 	stw	r4,0(r19)
   48228:	110002c8 	cmpgei	r4,r2,11
   4822c:	8d3fff04 	addi	r20,r17,-4
   48230:	20002026 	beq	r4,zero,482b4 <__b2d+0xd4>
   48234:	10bffd44 	addi	r2,r2,-11
   48238:	85000e2e 	bgeu	r16,r20,48274 <__b2d+0x94>
   4823c:	897ffe17 	ldw	r5,-8(r17)
   48240:	10001226 	beq	r2,zero,4828c <__b2d+0xac>
   48244:	1889c83a 	sub	r4,r3,r2
   48248:	90a4983a 	sll	r18,r18,r2
   4824c:	2906d83a 	srl	r3,r5,r4
   48250:	89bffe04 	addi	r6,r17,-8
   48254:	2884983a 	sll	r2,r5,r2
   48258:	90e4b03a 	or	r18,r18,r3
   4825c:	90cffc34 	orhi	r3,r18,16368
   48260:	81800c2e 	bgeu	r16,r6,48294 <__b2d+0xb4>
   48264:	897ffd17 	ldw	r5,-12(r17)
   48268:	2908d83a 	srl	r4,r5,r4
   4826c:	1104b03a 	or	r2,r2,r4
   48270:	00000806 	br	48294 <__b2d+0xb4>
   48274:	10000426 	beq	r2,zero,48288 <__b2d+0xa8>
   48278:	90a4983a 	sll	r18,r18,r2
   4827c:	0005883a 	mov	r2,zero
   48280:	90cffc34 	orhi	r3,r18,16368
   48284:	00000306 	br	48294 <__b2d+0xb4>
   48288:	000b883a 	mov	r5,zero
   4828c:	90cffc34 	orhi	r3,r18,16368
   48290:	2805883a 	mov	r2,r5
   48294:	dfc00517 	ldw	ra,20(sp)
   48298:	dd000417 	ldw	r20,16(sp)
   4829c:	dcc00317 	ldw	r19,12(sp)
   482a0:	dc800217 	ldw	r18,8(sp)
   482a4:	dc400117 	ldw	r17,4(sp)
   482a8:	dc000017 	ldw	r16,0(sp)
   482ac:	dec00604 	addi	sp,sp,24
   482b0:	f800283a 	ret
   482b4:	014002c4 	movi	r5,11
   482b8:	2889c83a 	sub	r4,r5,r2
   482bc:	9106d83a 	srl	r3,r18,r4
   482c0:	18cffc34 	orhi	r3,r3,16368
   482c4:	85000536 	bltu	r16,r20,482dc <__b2d+0xfc>
   482c8:	000b883a 	mov	r5,zero
   482cc:	10800544 	addi	r2,r2,21
   482d0:	9084983a 	sll	r2,r18,r2
   482d4:	1144b03a 	or	r2,r2,r5
   482d8:	003fee06 	br	48294 <__b2d+0xb4>
   482dc:	897ffe17 	ldw	r5,-8(r17)
   482e0:	290ad83a 	srl	r5,r5,r4
   482e4:	003ff906 	br	482cc <__b2d+0xec>

000482e8 <__d2b>:
   482e8:	defff804 	addi	sp,sp,-32
   482ec:	dd000615 	stw	r20,24(sp)
   482f0:	2829883a 	mov	r20,r5
   482f4:	01400044 	movi	r5,1
   482f8:	dcc00515 	stw	r19,20(sp)
   482fc:	dc000215 	stw	r16,8(sp)
   48300:	dfc00715 	stw	ra,28(sp)
   48304:	dc800415 	stw	r18,16(sp)
   48308:	dc400315 	stw	r17,12(sp)
   4830c:	3021883a 	mov	r16,r6
   48310:	3827883a 	mov	r19,r7
   48314:	004744c0 	call	4744c <_Balloc>
   48318:	10004526 	beq	r2,zero,48430 <__d2b+0x148>
   4831c:	8024d53a 	srli	r18,r16,20
   48320:	01800434 	movhi	r6,16
   48324:	31bfffc4 	addi	r6,r6,-1
   48328:	9481ffcc 	andi	r18,r18,2047
   4832c:	1023883a 	mov	r17,r2
   48330:	81a0703a 	and	r16,r16,r6
   48334:	90000126 	beq	r18,zero,4833c <__d2b+0x54>
   48338:	84000434 	orhi	r16,r16,16
   4833c:	dc000115 	stw	r16,4(sp)
   48340:	a0002226 	beq	r20,zero,483cc <__d2b+0xe4>
   48344:	d809883a 	mov	r4,sp
   48348:	dd000015 	stw	r20,0(sp)
   4834c:	004780c0 	call	4780c <__lo0bits>
   48350:	d8c00117 	ldw	r3,4(sp)
   48354:	10003326 	beq	r2,zero,48424 <__d2b+0x13c>
   48358:	01000804 	movi	r4,32
   4835c:	2089c83a 	sub	r4,r4,r2
   48360:	1908983a 	sll	r4,r3,r4
   48364:	d9400017 	ldw	r5,0(sp)
   48368:	1886d83a 	srl	r3,r3,r2
   4836c:	2148b03a 	or	r4,r4,r5
   48370:	89000515 	stw	r4,20(r17)
   48374:	d8c00115 	stw	r3,4(sp)
   48378:	88c00615 	stw	r3,24(r17)
   4837c:	1800271e 	bne	r3,zero,4841c <__d2b+0x134>
   48380:	04000044 	movi	r16,1
   48384:	8c000415 	stw	r16,16(r17)
   48388:	90001926 	beq	r18,zero,483f0 <__d2b+0x108>
   4838c:	00c00d44 	movi	r3,53
   48390:	94bef344 	addi	r18,r18,-1075
   48394:	90a5883a 	add	r18,r18,r2
   48398:	1885c83a 	sub	r2,r3,r2
   4839c:	d8c00817 	ldw	r3,32(sp)
   483a0:	9c800015 	stw	r18,0(r19)
   483a4:	18800015 	stw	r2,0(r3)
   483a8:	8805883a 	mov	r2,r17
   483ac:	dfc00717 	ldw	ra,28(sp)
   483b0:	dd000617 	ldw	r20,24(sp)
   483b4:	dcc00517 	ldw	r19,20(sp)
   483b8:	dc800417 	ldw	r18,16(sp)
   483bc:	dc400317 	ldw	r17,12(sp)
   483c0:	dc000217 	ldw	r16,8(sp)
   483c4:	dec00804 	addi	sp,sp,32
   483c8:	f800283a 	ret
   483cc:	d9000104 	addi	r4,sp,4
   483d0:	004780c0 	call	4780c <__lo0bits>
   483d4:	00c00044 	movi	r3,1
   483d8:	88c00415 	stw	r3,16(r17)
   483dc:	d8c00117 	ldw	r3,4(sp)
   483e0:	10800804 	addi	r2,r2,32
   483e4:	04000044 	movi	r16,1
   483e8:	88c00515 	stw	r3,20(r17)
   483ec:	903fe71e 	bne	r18,zero,4838c <__d2b+0xa4>
   483f0:	800690ba 	slli	r3,r16,2
   483f4:	10bef384 	addi	r2,r2,-1074
   483f8:	98800015 	stw	r2,0(r19)
   483fc:	88c5883a 	add	r2,r17,r3
   48400:	11000417 	ldw	r4,16(r2)
   48404:	8020917a 	slli	r16,r16,5
   48408:	00477a80 	call	477a8 <__hi0bits>
   4840c:	80a1c83a 	sub	r16,r16,r2
   48410:	d8800817 	ldw	r2,32(sp)
   48414:	14000015 	stw	r16,0(r2)
   48418:	003fe306 	br	483a8 <__d2b+0xc0>
   4841c:	04000084 	movi	r16,2
   48420:	003fd806 	br	48384 <__d2b+0x9c>
   48424:	d9000017 	ldw	r4,0(sp)
   48428:	89000515 	stw	r4,20(r17)
   4842c:	003fd206 	br	48378 <__d2b+0x90>
   48430:	01c00174 	movhi	r7,5
   48434:	01000174 	movhi	r4,5
   48438:	39c3f304 	addi	r7,r7,4044
   4843c:	000d883a 	mov	r6,zero
   48440:	0140c284 	movi	r5,778
   48444:	21040804 	addi	r4,r4,4128
   48448:	004a1300 	call	4a130 <__assert_func>

0004844c <__ratio>:
   4844c:	defff904 	addi	sp,sp,-28
   48450:	dc400315 	stw	r17,12(sp)
   48454:	2823883a 	mov	r17,r5
   48458:	d80b883a 	mov	r5,sp
   4845c:	dfc00615 	stw	ra,24(sp)
   48460:	dcc00515 	stw	r19,20(sp)
   48464:	dc800415 	stw	r18,16(sp)
   48468:	2027883a 	mov	r19,r4
   4846c:	dc000215 	stw	r16,8(sp)
   48470:	00481e00 	call	481e0 <__b2d>
   48474:	d9400104 	addi	r5,sp,4
   48478:	8809883a 	mov	r4,r17
   4847c:	1025883a 	mov	r18,r2
   48480:	1821883a 	mov	r16,r3
   48484:	00481e00 	call	481e0 <__b2d>
   48488:	89000417 	ldw	r4,16(r17)
   4848c:	9a000417 	ldw	r8,16(r19)
   48490:	d9400117 	ldw	r5,4(sp)
   48494:	100d883a 	mov	r6,r2
   48498:	4111c83a 	sub	r8,r8,r4
   4849c:	d9000017 	ldw	r4,0(sp)
   484a0:	4010917a 	slli	r8,r8,5
   484a4:	180f883a 	mov	r7,r3
   484a8:	2149c83a 	sub	r4,r4,r5
   484ac:	4111883a 	add	r8,r8,r4
   484b0:	02000c0e 	bge	zero,r8,484e4 <__ratio+0x98>
   484b4:	4010953a 	slli	r8,r8,20
   484b8:	4421883a 	add	r16,r8,r16
   484bc:	9009883a 	mov	r4,r18
   484c0:	800b883a 	mov	r5,r16
   484c4:	004c56c0 	call	4c56c <__divdf3>
   484c8:	dfc00617 	ldw	ra,24(sp)
   484cc:	dcc00517 	ldw	r19,20(sp)
   484d0:	dc800417 	ldw	r18,16(sp)
   484d4:	dc400317 	ldw	r17,12(sp)
   484d8:	dc000217 	ldw	r16,8(sp)
   484dc:	dec00704 	addi	sp,sp,28
   484e0:	f800283a 	ret
   484e4:	4010953a 	slli	r8,r8,20
   484e8:	1a0fc83a 	sub	r7,r3,r8
   484ec:	003ff306 	br	484bc <__ratio+0x70>

000484f0 <_mprec_log10>:
   484f0:	defffe04 	addi	sp,sp,-8
   484f4:	dc000015 	stw	r16,0(sp)
   484f8:	dfc00115 	stw	ra,4(sp)
   484fc:	20800608 	cmpgei	r2,r4,24
   48500:	2021883a 	mov	r16,r4
   48504:	10000f26 	beq	r2,zero,48544 <_mprec_log10+0x54>
   48508:	0009883a 	mov	r4,zero
   4850c:	014ffc34 	movhi	r5,16368
   48510:	000d883a 	mov	r6,zero
   48514:	01d00934 	movhi	r7,16420
   48518:	004d0ec0 	call	4d0ec <__muldf3>
   4851c:	843fffc4 	addi	r16,r16,-1
   48520:	1009883a 	mov	r4,r2
   48524:	180b883a 	mov	r5,r3
   48528:	803ff91e 	bne	r16,zero,48510 <_mprec_log10+0x20>
   4852c:	2005883a 	mov	r2,r4
   48530:	2807883a 	mov	r3,r5
   48534:	dfc00117 	ldw	ra,4(sp)
   48538:	dc000017 	ldw	r16,0(sp)
   4853c:	dec00204 	addi	sp,sp,8
   48540:	f800283a 	ret
   48544:	202090fa 	slli	r16,r4,3
   48548:	00800174 	movhi	r2,5
   4854c:	10842f04 	addi	r2,r2,4284
   48550:	1421883a 	add	r16,r2,r16
   48554:	81000017 	ldw	r4,0(r16)
   48558:	81400117 	ldw	r5,4(r16)
   4855c:	003ff306 	br	4852c <_mprec_log10+0x3c>

00048560 <__copybits>:
   48560:	297fffc4 	addi	r5,r5,-1
   48564:	280fd17a 	srai	r7,r5,5
   48568:	31400417 	ldw	r5,16(r6)
   4856c:	30800504 	addi	r2,r6,20
   48570:	39c00044 	addi	r7,r7,1
   48574:	280a90ba 	slli	r5,r5,2
   48578:	380e90ba 	slli	r7,r7,2
   4857c:	114b883a 	add	r5,r2,r5
   48580:	21cf883a 	add	r7,r4,r7
   48584:	11400c2e 	bgeu	r2,r5,485b8 <__copybits+0x58>
   48588:	2007883a 	mov	r3,r4
   4858c:	12000017 	ldw	r8,0(r2)
   48590:	10800104 	addi	r2,r2,4
   48594:	18c00104 	addi	r3,r3,4
   48598:	1a3fff15 	stw	r8,-4(r3)
   4859c:	117ffb36 	bltu	r2,r5,4858c <__copybits+0x2c>
   485a0:	2985c83a 	sub	r2,r5,r6
   485a4:	10bffac4 	addi	r2,r2,-21
   485a8:	1004d0ba 	srli	r2,r2,2
   485ac:	10800044 	addi	r2,r2,1
   485b0:	100490ba 	slli	r2,r2,2
   485b4:	2089883a 	add	r4,r4,r2
   485b8:	21c0072e 	bgeu	r4,r7,485d8 <__copybits+0x78>
   485bc:	39bfffc4 	addi	r6,r7,-1
   485c0:	310dc83a 	sub	r6,r6,r4
   485c4:	300cd0ba 	srli	r6,r6,2
   485c8:	000b883a 	mov	r5,zero
   485cc:	31800044 	addi	r6,r6,1
   485d0:	300c90ba 	slli	r6,r6,2
   485d4:	00426541 	jmpi	42654 <memset>
   485d8:	f800283a 	ret

000485dc <__any_on>:
   485dc:	20c00417 	ldw	r3,16(r4)
   485e0:	280dd17a 	srai	r6,r5,5
   485e4:	21000504 	addi	r4,r4,20
   485e8:	1980080e 	bge	r3,r6,4860c <__any_on+0x30>
   485ec:	180490ba 	slli	r2,r3,2
   485f0:	2085883a 	add	r2,r4,r2
   485f4:	20800f2e 	bgeu	r4,r2,48634 <__any_on+0x58>
   485f8:	10ffff17 	ldw	r3,-4(r2)
   485fc:	10bfff04 	addi	r2,r2,-4
   48600:	183ffc26 	beq	r3,zero,485f4 <__any_on+0x18>
   48604:	00800044 	movi	r2,1
   48608:	f800283a 	ret
   4860c:	300490ba 	slli	r2,r6,2
   48610:	2085883a 	add	r2,r4,r2
   48614:	30fff70e 	bge	r6,r3,485f4 <__any_on+0x18>
   48618:	294007cc 	andi	r5,r5,31
   4861c:	283ff526 	beq	r5,zero,485f4 <__any_on+0x18>
   48620:	11800017 	ldw	r6,0(r2)
   48624:	3146d83a 	srl	r3,r6,r5
   48628:	194a983a 	sll	r5,r3,r5
   4862c:	317ff51e 	bne	r6,r5,48604 <__any_on+0x28>
   48630:	003ff006 	br	485f4 <__any_on+0x18>
   48634:	0005883a 	mov	r2,zero
   48638:	f800283a 	ret

0004863c <_read_r>:
   4863c:	2807883a 	mov	r3,r5
   48640:	defffe04 	addi	sp,sp,-8
   48644:	dc000015 	stw	r16,0(sp)
   48648:	300b883a 	mov	r5,r6
   4864c:	00800174 	movhi	r2,5
   48650:	380d883a 	mov	r6,r7
   48654:	2021883a 	mov	r16,r4
   48658:	1809883a 	mov	r4,r3
   4865c:	dfc00115 	stw	ra,4(sp)
   48660:	10137115 	stw	zero,19908(r2)
   48664:	004ee240 	call	4ee24 <read>
   48668:	10ffffd8 	cmpnei	r3,r2,-1
   4866c:	18000426 	beq	r3,zero,48680 <_read_r+0x44>
   48670:	dfc00117 	ldw	ra,4(sp)
   48674:	dc000017 	ldw	r16,0(sp)
   48678:	dec00204 	addi	sp,sp,8
   4867c:	f800283a 	ret
   48680:	00c00174 	movhi	r3,5
   48684:	18d37117 	ldw	r3,19908(r3)
   48688:	183ff926 	beq	r3,zero,48670 <_read_r+0x34>
   4868c:	80c00015 	stw	r3,0(r16)
   48690:	dfc00117 	ldw	ra,4(sp)
   48694:	dc000017 	ldw	r16,0(sp)
   48698:	dec00204 	addi	sp,sp,8
   4869c:	f800283a 	ret

000486a0 <_realloc_r>:
   486a0:	defff504 	addi	sp,sp,-44
   486a4:	dc800315 	stw	r18,12(sp)
   486a8:	dfc00a15 	stw	ra,40(sp)
   486ac:	df000915 	stw	fp,36(sp)
   486b0:	ddc00815 	stw	r23,32(sp)
   486b4:	dd800715 	stw	r22,28(sp)
   486b8:	dd400615 	stw	r21,24(sp)
   486bc:	dd000515 	stw	r20,20(sp)
   486c0:	dcc00415 	stw	r19,16(sp)
   486c4:	dc400215 	stw	r17,8(sp)
   486c8:	dc000115 	stw	r16,4(sp)
   486cc:	3025883a 	mov	r18,r6
   486d0:	28008b26 	beq	r5,zero,48900 <_realloc_r+0x260>
   486d4:	2821883a 	mov	r16,r5
   486d8:	2027883a 	mov	r19,r4
   486dc:	944002c4 	addi	r17,r18,11
   486e0:	004eb280 	call	4eb28 <__malloc_lock>
   486e4:	888005f0 	cmpltui	r2,r17,23
   486e8:	1000521e 	bne	r2,zero,48834 <_realloc_r+0x194>
   486ec:	017ffe04 	movi	r5,-8
   486f0:	8962703a 	and	r17,r17,r5
   486f4:	8807883a 	mov	r3,r17
   486f8:	88005116 	blt	r17,zero,48840 <_realloc_r+0x1a0>
   486fc:	8c805036 	bltu	r17,r18,48840 <_realloc_r+0x1a0>
   48700:	80bfff17 	ldw	r2,-4(r16)
   48704:	017fff04 	movi	r5,-4
   48708:	857ffe04 	addi	r21,r16,-8
   4870c:	1168703a 	and	r20,r2,r5
   48710:	ad2d883a 	add	r22,r21,r20
   48714:	a0c0390e 	bge	r20,r3,487fc <_realloc_r+0x15c>
   48718:	07000174 	movhi	fp,5
   4871c:	e7067804 	addi	fp,fp,6624
   48720:	e2000217 	ldw	r8,8(fp)
   48724:	b1000117 	ldw	r4,4(r22)
   48728:	45808e26 	beq	r8,r22,48964 <_realloc_r+0x2c4>
   4872c:	01bfff84 	movi	r6,-2
   48730:	218c703a 	and	r6,r4,r6
   48734:	b18d883a 	add	r6,r22,r6
   48738:	31800117 	ldw	r6,4(r6)
   4873c:	3180004c 	andi	r6,r6,1
   48740:	30004f1e 	bne	r6,zero,48880 <_realloc_r+0x1e0>
   48744:	2148703a 	and	r4,r4,r5
   48748:	a10b883a 	add	r5,r20,r4
   4874c:	28c0bf0e 	bge	r5,r3,48a4c <_realloc_r+0x3ac>
   48750:	1080004c 	andi	r2,r2,1
   48754:	10004c1e 	bne	r2,zero,48888 <_realloc_r+0x1e8>
   48758:	81fffe17 	ldw	r7,-8(r16)
   4875c:	00bfff04 	movi	r2,-4
   48760:	a9cfc83a 	sub	r7,r21,r7
   48764:	39400117 	ldw	r5,4(r7)
   48768:	288a703a 	and	r5,r5,r2
   4876c:	b0000426 	beq	r22,zero,48780 <_realloc_r+0xe0>
   48770:	a16f883a 	add	r23,r20,r5
   48774:	b92f883a 	add	r23,r23,r4
   48778:	4580bf26 	beq	r8,r22,48a78 <_realloc_r+0x3d8>
   4877c:	b8c0930e 	bge	r23,r3,489cc <_realloc_r+0x32c>
   48780:	38004126 	beq	r7,zero,48888 <_realloc_r+0x1e8>
   48784:	a16f883a 	add	r23,r20,r5
   48788:	b8c03f16 	blt	r23,r3,48888 <_realloc_r+0x1e8>
   4878c:	38800317 	ldw	r2,12(r7)
   48790:	38c00217 	ldw	r3,8(r7)
   48794:	a1bfff04 	addi	r6,r20,-4
   48798:	31400968 	cmpgeui	r5,r6,37
   4879c:	18800315 	stw	r2,12(r3)
   487a0:	10c00215 	stw	r3,8(r2)
   487a4:	39000204 	addi	r4,r7,8
   487a8:	3ded883a 	add	r22,r7,r23
   487ac:	2800941e 	bne	r5,zero,48a00 <_realloc_r+0x360>
   487b0:	30800530 	cmpltui	r2,r6,20
   487b4:	80c00017 	ldw	r3,0(r16)
   487b8:	1000df1e 	bne	r2,zero,48b38 <_realloc_r+0x498>
   487bc:	38c00215 	stw	r3,8(r7)
   487c0:	80c00117 	ldw	r3,4(r16)
   487c4:	30800728 	cmpgeui	r2,r6,28
   487c8:	38c00315 	stw	r3,12(r7)
   487cc:	1000dc1e 	bne	r2,zero,48b40 <_realloc_r+0x4a0>
   487d0:	80c00217 	ldw	r3,8(r16)
   487d4:	38800404 	addi	r2,r7,16
   487d8:	84000204 	addi	r16,r16,8
   487dc:	10c00015 	stw	r3,0(r2)
   487e0:	80c00117 	ldw	r3,4(r16)
   487e4:	b829883a 	mov	r20,r23
   487e8:	382b883a 	mov	r21,r7
   487ec:	10c00115 	stw	r3,4(r2)
   487f0:	80c00217 	ldw	r3,8(r16)
   487f4:	2021883a 	mov	r16,r4
   487f8:	10c00215 	stw	r3,8(r2)
   487fc:	a9800117 	ldw	r6,4(r21)
   48800:	a445c83a 	sub	r2,r20,r17
   48804:	10c00430 	cmpltui	r3,r2,16
   48808:	3180004c 	andi	r6,r6,1
   4880c:	18004926 	beq	r3,zero,48934 <_realloc_r+0x294>
   48810:	a18cb03a 	or	r6,r20,r6
   48814:	a9800115 	stw	r6,4(r21)
   48818:	b0800117 	ldw	r2,4(r22)
   4881c:	10800054 	ori	r2,r2,1
   48820:	b0800115 	stw	r2,4(r22)
   48824:	9809883a 	mov	r4,r19
   48828:	004eb4c0 	call	4eb4c <__malloc_unlock>
   4882c:	8025883a 	mov	r18,r16
   48830:	00000606 	br	4884c <_realloc_r+0x1ac>
   48834:	04400404 	movi	r17,16
   48838:	00c00404 	movi	r3,16
   4883c:	8cbfb02e 	bgeu	r17,r18,48700 <_realloc_r+0x60>
   48840:	00800304 	movi	r2,12
   48844:	98800015 	stw	r2,0(r19)
   48848:	0025883a 	mov	r18,zero
   4884c:	9005883a 	mov	r2,r18
   48850:	dfc00a17 	ldw	ra,40(sp)
   48854:	df000917 	ldw	fp,36(sp)
   48858:	ddc00817 	ldw	r23,32(sp)
   4885c:	dd800717 	ldw	r22,28(sp)
   48860:	dd400617 	ldw	r21,24(sp)
   48864:	dd000517 	ldw	r20,20(sp)
   48868:	dcc00417 	ldw	r19,16(sp)
   4886c:	dc800317 	ldw	r18,12(sp)
   48870:	dc400217 	ldw	r17,8(sp)
   48874:	dc000117 	ldw	r16,4(sp)
   48878:	dec00b04 	addi	sp,sp,44
   4887c:	f800283a 	ret
   48880:	1080004c 	andi	r2,r2,1
   48884:	10006c26 	beq	r2,zero,48a38 <_realloc_r+0x398>
   48888:	900b883a 	mov	r5,r18
   4888c:	9809883a 	mov	r4,r19
   48890:	0041e740 	call	41e74 <_malloc_r>
   48894:	1025883a 	mov	r18,r2
   48898:	10001626 	beq	r2,zero,488f4 <_realloc_r+0x254>
   4889c:	80bfff17 	ldw	r2,-4(r16)
   488a0:	013fff84 	movi	r4,-2
   488a4:	90fffe04 	addi	r3,r18,-8
   488a8:	1104703a 	and	r2,r2,r4
   488ac:	a885883a 	add	r2,r21,r2
   488b0:	10c05b26 	beq	r2,r3,48a20 <_realloc_r+0x380>
   488b4:	a1bfff04 	addi	r6,r20,-4
   488b8:	30800968 	cmpgeui	r2,r6,37
   488bc:	10006a1e 	bne	r2,zero,48a68 <_realloc_r+0x3c8>
   488c0:	30800530 	cmpltui	r2,r6,20
   488c4:	81000017 	ldw	r4,0(r16)
   488c8:	10003726 	beq	r2,zero,489a8 <_realloc_r+0x308>
   488cc:	9005883a 	mov	r2,r18
   488d0:	8007883a 	mov	r3,r16
   488d4:	11000015 	stw	r4,0(r2)
   488d8:	19000117 	ldw	r4,4(r3)
   488dc:	11000115 	stw	r4,4(r2)
   488e0:	18c00217 	ldw	r3,8(r3)
   488e4:	10c00215 	stw	r3,8(r2)
   488e8:	800b883a 	mov	r5,r16
   488ec:	9809883a 	mov	r4,r19
   488f0:	0040f7c0 	call	40f7c <_free_r>
   488f4:	9809883a 	mov	r4,r19
   488f8:	004eb4c0 	call	4eb4c <__malloc_unlock>
   488fc:	003fd306 	br	4884c <_realloc_r+0x1ac>
   48900:	300b883a 	mov	r5,r6
   48904:	dfc00a17 	ldw	ra,40(sp)
   48908:	df000917 	ldw	fp,36(sp)
   4890c:	ddc00817 	ldw	r23,32(sp)
   48910:	dd800717 	ldw	r22,28(sp)
   48914:	dd400617 	ldw	r21,24(sp)
   48918:	dd000517 	ldw	r20,20(sp)
   4891c:	dcc00417 	ldw	r19,16(sp)
   48920:	dc800317 	ldw	r18,12(sp)
   48924:	dc400217 	ldw	r17,8(sp)
   48928:	dc000117 	ldw	r16,4(sp)
   4892c:	dec00b04 	addi	sp,sp,44
   48930:	0041e741 	jmpi	41e74 <_malloc_r>
   48934:	344cb03a 	or	r6,r6,r17
   48938:	a9800115 	stw	r6,4(r21)
   4893c:	ac4b883a 	add	r5,r21,r17
   48940:	10800054 	ori	r2,r2,1
   48944:	28800115 	stw	r2,4(r5)
   48948:	b0800117 	ldw	r2,4(r22)
   4894c:	29400204 	addi	r5,r5,8
   48950:	9809883a 	mov	r4,r19
   48954:	10800054 	ori	r2,r2,1
   48958:	b0800115 	stw	r2,4(r22)
   4895c:	0040f7c0 	call	40f7c <_free_r>
   48960:	003fb006 	br	48824 <_realloc_r+0x184>
   48964:	2148703a 	and	r4,r4,r5
   48968:	a10b883a 	add	r5,r20,r4
   4896c:	89800404 	addi	r6,r17,16
   48970:	29bf7716 	blt	r5,r6,48750 <_realloc_r+0xb0>
   48974:	ac6b883a 	add	r21,r21,r17
   48978:	2c45c83a 	sub	r2,r5,r17
   4897c:	e5400215 	stw	r21,8(fp)
   48980:	10800054 	ori	r2,r2,1
   48984:	a8800115 	stw	r2,4(r21)
   48988:	80bfff17 	ldw	r2,-4(r16)
   4898c:	9809883a 	mov	r4,r19
   48990:	8025883a 	mov	r18,r16
   48994:	1080004c 	andi	r2,r2,1
   48998:	1462b03a 	or	r17,r2,r17
   4899c:	847fff15 	stw	r17,-4(r16)
   489a0:	004eb4c0 	call	4eb4c <__malloc_unlock>
   489a4:	003fa906 	br	4884c <_realloc_r+0x1ac>
   489a8:	91000015 	stw	r4,0(r18)
   489ac:	80c00117 	ldw	r3,4(r16)
   489b0:	30800728 	cmpgeui	r2,r6,28
   489b4:	90c00115 	stw	r3,4(r18)
   489b8:	1000551e 	bne	r2,zero,48b10 <_realloc_r+0x470>
   489bc:	81000217 	ldw	r4,8(r16)
   489c0:	80c00204 	addi	r3,r16,8
   489c4:	90800204 	addi	r2,r18,8
   489c8:	003fc206 	br	488d4 <_realloc_r+0x234>
   489cc:	b0800317 	ldw	r2,12(r22)
   489d0:	b0c00217 	ldw	r3,8(r22)
   489d4:	a1bfff04 	addi	r6,r20,-4
   489d8:	31400968 	cmpgeui	r5,r6,37
   489dc:	18800315 	stw	r2,12(r3)
   489e0:	10c00215 	stw	r3,8(r2)
   489e4:	38c00217 	ldw	r3,8(r7)
   489e8:	38800317 	ldw	r2,12(r7)
   489ec:	39000204 	addi	r4,r7,8
   489f0:	3ded883a 	add	r22,r7,r23
   489f4:	18800315 	stw	r2,12(r3)
   489f8:	10c00215 	stw	r3,8(r2)
   489fc:	283f6c26 	beq	r5,zero,487b0 <_realloc_r+0x110>
   48a00:	800b883a 	mov	r5,r16
   48a04:	d9c00015 	stw	r7,0(sp)
   48a08:	00473200 	call	47320 <memmove>
   48a0c:	d9c00017 	ldw	r7,0(sp)
   48a10:	1021883a 	mov	r16,r2
   48a14:	b829883a 	mov	r20,r23
   48a18:	382b883a 	mov	r21,r7
   48a1c:	003f7706 	br	487fc <_realloc_r+0x15c>
   48a20:	90bfff17 	ldw	r2,-4(r18)
   48a24:	00ffff04 	movi	r3,-4
   48a28:	10c4703a 	and	r2,r2,r3
   48a2c:	a0a9883a 	add	r20,r20,r2
   48a30:	ad2d883a 	add	r22,r21,r20
   48a34:	003f7106 	br	487fc <_realloc_r+0x15c>
   48a38:	81fffe17 	ldw	r7,-8(r16)
   48a3c:	a9cfc83a 	sub	r7,r21,r7
   48a40:	38800117 	ldw	r2,4(r7)
   48a44:	114a703a 	and	r5,r2,r5
   48a48:	003f4d06 	br	48780 <_realloc_r+0xe0>
   48a4c:	b0800317 	ldw	r2,12(r22)
   48a50:	b0c00217 	ldw	r3,8(r22)
   48a54:	2829883a 	mov	r20,r5
   48a58:	a96d883a 	add	r22,r21,r5
   48a5c:	18800315 	stw	r2,12(r3)
   48a60:	10c00215 	stw	r3,8(r2)
   48a64:	003f6506 	br	487fc <_realloc_r+0x15c>
   48a68:	800b883a 	mov	r5,r16
   48a6c:	9009883a 	mov	r4,r18
   48a70:	00473200 	call	47320 <memmove>
   48a74:	003f9c06 	br	488e8 <_realloc_r+0x248>
   48a78:	88800404 	addi	r2,r17,16
   48a7c:	b8bf4016 	blt	r23,r2,48780 <_realloc_r+0xe0>
   48a80:	38800317 	ldw	r2,12(r7)
   48a84:	38c00217 	ldw	r3,8(r7)
   48a88:	a1bfff04 	addi	r6,r20,-4
   48a8c:	31000968 	cmpgeui	r4,r6,37
   48a90:	18800315 	stw	r2,12(r3)
   48a94:	10c00215 	stw	r3,8(r2)
   48a98:	3c800204 	addi	r18,r7,8
   48a9c:	20003b1e 	bne	r4,zero,48b8c <_realloc_r+0x4ec>
   48aa0:	30800530 	cmpltui	r2,r6,20
   48aa4:	80c00017 	ldw	r3,0(r16)
   48aa8:	1000361e 	bne	r2,zero,48b84 <_realloc_r+0x4e4>
   48aac:	38c00215 	stw	r3,8(r7)
   48ab0:	80c00117 	ldw	r3,4(r16)
   48ab4:	30800728 	cmpgeui	r2,r6,28
   48ab8:	38c00315 	stw	r3,12(r7)
   48abc:	1000401e 	bne	r2,zero,48bc0 <_realloc_r+0x520>
   48ac0:	80c00217 	ldw	r3,8(r16)
   48ac4:	38800404 	addi	r2,r7,16
   48ac8:	84000204 	addi	r16,r16,8
   48acc:	10c00015 	stw	r3,0(r2)
   48ad0:	80c00117 	ldw	r3,4(r16)
   48ad4:	10c00115 	stw	r3,4(r2)
   48ad8:	80c00217 	ldw	r3,8(r16)
   48adc:	10c00215 	stw	r3,8(r2)
   48ae0:	3c47883a 	add	r3,r7,r17
   48ae4:	bc45c83a 	sub	r2,r23,r17
   48ae8:	e0c00215 	stw	r3,8(fp)
   48aec:	10800054 	ori	r2,r2,1
   48af0:	18800115 	stw	r2,4(r3)
   48af4:	38800117 	ldw	r2,4(r7)
   48af8:	9809883a 	mov	r4,r19
   48afc:	1080004c 	andi	r2,r2,1
   48b00:	1462b03a 	or	r17,r2,r17
   48b04:	3c400115 	stw	r17,4(r7)
   48b08:	004eb4c0 	call	4eb4c <__malloc_unlock>
   48b0c:	003f4f06 	br	4884c <_realloc_r+0x1ac>
   48b10:	80800217 	ldw	r2,8(r16)
   48b14:	31800920 	cmpeqi	r6,r6,36
   48b18:	90800215 	stw	r2,8(r18)
   48b1c:	80800317 	ldw	r2,12(r16)
   48b20:	90800315 	stw	r2,12(r18)
   48b24:	81000417 	ldw	r4,16(r16)
   48b28:	30000f1e 	bne	r6,zero,48b68 <_realloc_r+0x4c8>
   48b2c:	80c00404 	addi	r3,r16,16
   48b30:	90800404 	addi	r2,r18,16
   48b34:	003f6706 	br	488d4 <_realloc_r+0x234>
   48b38:	2005883a 	mov	r2,r4
   48b3c:	003f2706 	br	487dc <_realloc_r+0x13c>
   48b40:	80800217 	ldw	r2,8(r16)
   48b44:	31800920 	cmpeqi	r6,r6,36
   48b48:	38800415 	stw	r2,16(r7)
   48b4c:	80800317 	ldw	r2,12(r16)
   48b50:	38800515 	stw	r2,20(r7)
   48b54:	80c00417 	ldw	r3,16(r16)
   48b58:	3000121e 	bne	r6,zero,48ba4 <_realloc_r+0x504>
   48b5c:	38800604 	addi	r2,r7,24
   48b60:	84000404 	addi	r16,r16,16
   48b64:	003f1d06 	br	487dc <_realloc_r+0x13c>
   48b68:	91000415 	stw	r4,16(r18)
   48b6c:	81000517 	ldw	r4,20(r16)
   48b70:	80c00604 	addi	r3,r16,24
   48b74:	90800604 	addi	r2,r18,24
   48b78:	91000515 	stw	r4,20(r18)
   48b7c:	81000617 	ldw	r4,24(r16)
   48b80:	003f5406 	br	488d4 <_realloc_r+0x234>
   48b84:	9005883a 	mov	r2,r18
   48b88:	003fd006 	br	48acc <_realloc_r+0x42c>
   48b8c:	800b883a 	mov	r5,r16
   48b90:	9009883a 	mov	r4,r18
   48b94:	d9c00015 	stw	r7,0(sp)
   48b98:	00473200 	call	47320 <memmove>
   48b9c:	d9c00017 	ldw	r7,0(sp)
   48ba0:	003fcf06 	br	48ae0 <_realloc_r+0x440>
   48ba4:	84000604 	addi	r16,r16,24
   48ba8:	38c00615 	stw	r3,24(r7)
   48bac:	80ffff17 	ldw	r3,-4(r16)
   48bb0:	38800804 	addi	r2,r7,32
   48bb4:	38c00715 	stw	r3,28(r7)
   48bb8:	80c00017 	ldw	r3,0(r16)
   48bbc:	003f0706 	br	487dc <_realloc_r+0x13c>
   48bc0:	80800217 	ldw	r2,8(r16)
   48bc4:	31800920 	cmpeqi	r6,r6,36
   48bc8:	38800415 	stw	r2,16(r7)
   48bcc:	80800317 	ldw	r2,12(r16)
   48bd0:	38800515 	stw	r2,20(r7)
   48bd4:	80c00417 	ldw	r3,16(r16)
   48bd8:	3000031e 	bne	r6,zero,48be8 <_realloc_r+0x548>
   48bdc:	38800604 	addi	r2,r7,24
   48be0:	84000404 	addi	r16,r16,16
   48be4:	003fb906 	br	48acc <_realloc_r+0x42c>
   48be8:	84000604 	addi	r16,r16,24
   48bec:	38c00615 	stw	r3,24(r7)
   48bf0:	80ffff17 	ldw	r3,-4(r16)
   48bf4:	38800804 	addi	r2,r7,32
   48bf8:	38c00715 	stw	r3,28(r7)
   48bfc:	80c00017 	ldw	r3,0(r16)
   48c00:	003fb206 	br	48acc <_realloc_r+0x42c>

00048c04 <__sprint_r.part.0>:
   48c04:	28801917 	ldw	r2,100(r5)
   48c08:	defff604 	addi	sp,sp,-40
   48c0c:	dcc00315 	stw	r19,12(sp)
   48c10:	dfc00915 	stw	ra,36(sp)
   48c14:	df000815 	stw	fp,32(sp)
   48c18:	ddc00715 	stw	r23,28(sp)
   48c1c:	dd800615 	stw	r22,24(sp)
   48c20:	dd400515 	stw	r21,20(sp)
   48c24:	dd000415 	stw	r20,16(sp)
   48c28:	dc800215 	stw	r18,8(sp)
   48c2c:	dc400115 	stw	r17,4(sp)
   48c30:	dc000015 	stw	r16,0(sp)
   48c34:	1088000c 	andi	r2,r2,8192
   48c38:	3027883a 	mov	r19,r6
   48c3c:	10002c26 	beq	r2,zero,48cf0 <__sprint_r.part.0+0xec>
   48c40:	30800217 	ldw	r2,8(r6)
   48c44:	35000017 	ldw	r20,0(r6)
   48c48:	2821883a 	mov	r16,r5
   48c4c:	2023883a 	mov	r17,r4
   48c50:	05bfff04 	movi	r22,-4
   48c54:	10002426 	beq	r2,zero,48ce8 <__sprint_r.part.0+0xe4>
   48c58:	a5400117 	ldw	r21,4(r20)
   48c5c:	a5c00017 	ldw	r23,0(r20)
   48c60:	a824d0ba 	srli	r18,r21,2
   48c64:	90001b26 	beq	r18,zero,48cd4 <__sprint_r.part.0+0xd0>
   48c68:	0039883a 	mov	fp,zero
   48c6c:	00000206 	br	48c78 <__sprint_r.part.0+0x74>
   48c70:	bdc00104 	addi	r23,r23,4
   48c74:	97001626 	beq	r18,fp,48cd0 <__sprint_r.part.0+0xcc>
   48c78:	b9400017 	ldw	r5,0(r23)
   48c7c:	800d883a 	mov	r6,r16
   48c80:	8809883a 	mov	r4,r17
   48c84:	004a4280 	call	4a428 <_fputwc_r>
   48c88:	10bfffe0 	cmpeqi	r2,r2,-1
   48c8c:	e7000044 	addi	fp,fp,1
   48c90:	103ff726 	beq	r2,zero,48c70 <__sprint_r.part.0+0x6c>
   48c94:	00bfffc4 	movi	r2,-1
   48c98:	98000215 	stw	zero,8(r19)
   48c9c:	98000115 	stw	zero,4(r19)
   48ca0:	dfc00917 	ldw	ra,36(sp)
   48ca4:	df000817 	ldw	fp,32(sp)
   48ca8:	ddc00717 	ldw	r23,28(sp)
   48cac:	dd800617 	ldw	r22,24(sp)
   48cb0:	dd400517 	ldw	r21,20(sp)
   48cb4:	dd000417 	ldw	r20,16(sp)
   48cb8:	dcc00317 	ldw	r19,12(sp)
   48cbc:	dc800217 	ldw	r18,8(sp)
   48cc0:	dc400117 	ldw	r17,4(sp)
   48cc4:	dc000017 	ldw	r16,0(sp)
   48cc8:	dec00a04 	addi	sp,sp,40
   48ccc:	f800283a 	ret
   48cd0:	98800217 	ldw	r2,8(r19)
   48cd4:	adaa703a 	and	r21,r21,r22
   48cd8:	1545c83a 	sub	r2,r2,r21
   48cdc:	98800215 	stw	r2,8(r19)
   48ce0:	a5000204 	addi	r20,r20,8
   48ce4:	103fdc1e 	bne	r2,zero,48c58 <__sprint_r.part.0+0x54>
   48ce8:	0005883a 	mov	r2,zero
   48cec:	003fea06 	br	48c98 <__sprint_r.part.0+0x94>
   48cf0:	0046bac0 	call	46bac <__sfvwrite_r>
   48cf4:	003fe806 	br	48c98 <__sprint_r.part.0+0x94>

00048cf8 <__sprint_r>:
   48cf8:	30c00217 	ldw	r3,8(r6)
   48cfc:	18000126 	beq	r3,zero,48d04 <__sprint_r+0xc>
   48d00:	0048c041 	jmpi	48c04 <__sprint_r.part.0>
   48d04:	30000115 	stw	zero,4(r6)
   48d08:	0005883a 	mov	r2,zero
   48d0c:	f800283a 	ret

00048d10 <___vfiprintf_internal_r>:
   48d10:	deffcf04 	addi	sp,sp,-196
   48d14:	dd802d15 	stw	r22,180(sp)
   48d18:	dd402c15 	stw	r21,176(sp)
   48d1c:	dd002b15 	stw	r20,172(sp)
   48d20:	dfc03015 	stw	ra,192(sp)
   48d24:	df002f15 	stw	fp,188(sp)
   48d28:	ddc02e15 	stw	r23,184(sp)
   48d2c:	dcc02a15 	stw	r19,168(sp)
   48d30:	dc802915 	stw	r18,164(sp)
   48d34:	dc402815 	stw	r17,160(sp)
   48d38:	dc002715 	stw	r16,156(sp)
   48d3c:	d9c00415 	stw	r7,16(sp)
   48d40:	202d883a 	mov	r22,r4
   48d44:	282b883a 	mov	r21,r5
   48d48:	3029883a 	mov	r20,r6
   48d4c:	20000226 	beq	r4,zero,48d58 <___vfiprintf_internal_r+0x48>
   48d50:	20800e17 	ldw	r2,56(r4)
   48d54:	1001bd26 	beq	r2,zero,4944c <___vfiprintf_internal_r+0x73c>
   48d58:	a880030b 	ldhu	r2,12(r21)
   48d5c:	10c8000c 	andi	r3,r2,8192
   48d60:	1800061e 	bne	r3,zero,48d7c <___vfiprintf_internal_r+0x6c>
   48d64:	a8c01917 	ldw	r3,100(r21)
   48d68:	0137ffc4 	movi	r4,-8193
   48d6c:	10880014 	ori	r2,r2,8192
   48d70:	1906703a 	and	r3,r3,r4
   48d74:	a880030d 	sth	r2,12(r21)
   48d78:	a8c01915 	stw	r3,100(r21)
   48d7c:	10c0020c 	andi	r3,r2,8
   48d80:	18010826 	beq	r3,zero,491a4 <___vfiprintf_internal_r+0x494>
   48d84:	a8c00417 	ldw	r3,16(r21)
   48d88:	18010626 	beq	r3,zero,491a4 <___vfiprintf_internal_r+0x494>
   48d8c:	1080068c 	andi	r2,r2,26
   48d90:	10800298 	cmpnei	r2,r2,10
   48d94:	10010b26 	beq	r2,zero,491c4 <___vfiprintf_internal_r+0x4b4>
   48d98:	dc801704 	addi	r18,sp,92
   48d9c:	dc800a15 	stw	r18,40(sp)
   48da0:	d8000c15 	stw	zero,48(sp)
   48da4:	d8000b15 	stw	zero,44(sp)
   48da8:	9021883a 	mov	r16,r18
   48dac:	d8000515 	stw	zero,20(sp)
   48db0:	d8000115 	stw	zero,4(sp)
   48db4:	a0800007 	ldb	r2,0(r20)
   48db8:	1000e826 	beq	r2,zero,4915c <___vfiprintf_internal_r+0x44c>
   48dbc:	a023883a 	mov	r17,r20
   48dc0:	00000306 	br	48dd0 <___vfiprintf_internal_r+0xc0>
   48dc4:	88800047 	ldb	r2,1(r17)
   48dc8:	8c400044 	addi	r17,r17,1
   48dcc:	10013326 	beq	r2,zero,4929c <___vfiprintf_internal_r+0x58c>
   48dd0:	10800958 	cmpnei	r2,r2,37
   48dd4:	103ffb1e 	bne	r2,zero,48dc4 <___vfiprintf_internal_r+0xb4>
   48dd8:	8d27c83a 	sub	r19,r17,r20
   48ddc:	8d01311e 	bne	r17,r20,492a4 <___vfiprintf_internal_r+0x594>
   48de0:	88800003 	ldbu	r2,0(r17)
   48de4:	10803fcc 	andi	r2,r2,255
   48de8:	1080201c 	xori	r2,r2,128
   48dec:	10bfe004 	addi	r2,r2,-128
   48df0:	1000da26 	beq	r2,zero,4915c <___vfiprintf_internal_r+0x44c>
   48df4:	88800047 	ldb	r2,1(r17)
   48df8:	8d000044 	addi	r20,r17,1
   48dfc:	d8000945 	stb	zero,37(sp)
   48e00:	000b883a 	mov	r5,zero
   48e04:	000d883a 	mov	r6,zero
   48e08:	023fffc4 	movi	r8,-1
   48e0c:	0023883a 	mov	r17,zero
   48e10:	001b883a 	mov	r13,zero
   48e14:	a5000044 	addi	r20,r20,1
   48e18:	10fff804 	addi	r3,r2,-32
   48e1c:	19001668 	cmpgeui	r4,r3,89
   48e20:	20006c1e 	bne	r4,zero,48fd4 <___vfiprintf_internal_r+0x2c4>
   48e24:	180690ba 	slli	r3,r3,2
   48e28:	01000174 	movhi	r4,5
   48e2c:	1909883a 	add	r4,r3,r4
   48e30:	20e38e17 	ldw	r3,-29128(r4)
   48e34:	1800683a 	jmp	r3
   48e38:	00049774 	movhi	zero,4701
   48e3c:	00048fd4 	movui	zero,4671
   48e40:	00048fd4 	movui	zero,4671
   48e44:	00049768 	cmpgeui	zero,zero,4701
   48e48:	00048fd4 	movui	zero,4671
   48e4c:	00048fd4 	movui	zero,4671
   48e50:	00048fd4 	movui	zero,4671
   48e54:	00048fd4 	movui	zero,4671
   48e58:	00048fd4 	movui	zero,4671
   48e5c:	00048fd4 	movui	zero,4671
   48e60:	00049740 	call	4974 <__alt_mem_onchip_memory-0x3b68c>
   48e64:	00049730 	cmpltui	zero,zero,4700
   48e68:	00048fd4 	movui	zero,4671
   48e6c:	00049718 	cmpnei	zero,zero,4700
   48e70:	000496cc 	andi	zero,zero,4699
   48e74:	00048fd4 	movui	zero,4671
   48e78:	000496c0 	call	496c <__alt_mem_onchip_memory-0x3b694>
   48e7c:	00048f9c 	xori	zero,zero,4670
   48e80:	00048f9c 	xori	zero,zero,4670
   48e84:	00048f9c 	xori	zero,zero,4670
   48e88:	00048f9c 	xori	zero,zero,4670
   48e8c:	00048f9c 	xori	zero,zero,4670
   48e90:	00048f9c 	xori	zero,zero,4670
   48e94:	00048f9c 	xori	zero,zero,4670
   48e98:	00048f9c 	xori	zero,zero,4670
   48e9c:	00048f9c 	xori	zero,zero,4670
   48ea0:	00048fd4 	movui	zero,4671
   48ea4:	00048fd4 	movui	zero,4671
   48ea8:	00048fd4 	movui	zero,4671
   48eac:	00048fd4 	movui	zero,4671
   48eb0:	00048fd4 	movui	zero,4671
   48eb4:	00048fd4 	movui	zero,4671
   48eb8:	00048fd4 	movui	zero,4671
   48ebc:	00048fd4 	movui	zero,4671
   48ec0:	00048fd4 	movui	zero,4671
   48ec4:	00048fd4 	movui	zero,4671
   48ec8:	000495bc 	xorhi	zero,zero,4694
   48ecc:	00048fd4 	movui	zero,4671
   48ed0:	00048fd4 	movui	zero,4671
   48ed4:	00048fd4 	movui	zero,4671
   48ed8:	00048fd4 	movui	zero,4671
   48edc:	00048fd4 	movui	zero,4671
   48ee0:	00048fd4 	movui	zero,4671
   48ee4:	00048fd4 	movui	zero,4671
   48ee8:	00048fd4 	movui	zero,4671
   48eec:	00048fd4 	movui	zero,4671
   48ef0:	00048fd4 	movui	zero,4671
   48ef4:	00049234 	movhi	zero,4680
   48ef8:	00048fd4 	movui	zero,4671
   48efc:	00048fd4 	movui	zero,4671
   48f00:	00048fd4 	movui	zero,4671
   48f04:	00048fd4 	movui	zero,4671
   48f08:	00048fd4 	movui	zero,4671
   48f0c:	0004920c 	andi	zero,zero,4680
   48f10:	00048fd4 	movui	zero,4671
   48f14:	00048fd4 	movui	zero,4671
   48f18:	000497c8 	cmpgei	zero,zero,4703
   48f1c:	00048fd4 	movui	zero,4671
   48f20:	00048fd4 	movui	zero,4671
   48f24:	00048fd4 	movui	zero,4671
   48f28:	00048fd4 	movui	zero,4671
   48f2c:	00048fd4 	movui	zero,4671
   48f30:	00048fd4 	movui	zero,4671
   48f34:	00048fd4 	movui	zero,4671
   48f38:	00048fd4 	movui	zero,4671
   48f3c:	00048fd4 	movui	zero,4671
   48f40:	00048fd4 	movui	zero,4671
   48f44:	000497a0 	cmpeqi	zero,zero,4702
   48f48:	00049454 	movui	zero,4689
   48f4c:	00048fd4 	movui	zero,4671
   48f50:	00048fd4 	movui	zero,4671
   48f54:	00048fd4 	movui	zero,4671
   48f58:	000494c8 	cmpgei	zero,zero,4691
   48f5c:	00049454 	movui	zero,4689
   48f60:	00048fd4 	movui	zero,4671
   48f64:	00048fd4 	movui	zero,4671
   48f68:	0004984c 	andi	zero,zero,4705
   48f6c:	00048fd4 	movui	zero,4671
   48f70:	00049810 	cmplti	zero,zero,4704
   48f74:	00049238 	rdprs	zero,zero,4680
   48f78:	00049580 	call	4958 <__alt_mem_onchip_memory-0x3b6a8>
   48f7c:	00049574 	movhi	zero,4693
   48f80:	00048fd4 	movui	zero,4671
   48f84:	0004951c 	xori	zero,zero,4692
   48f88:	00048fd4 	movui	zero,4671
   48f8c:	00049210 	cmplti	zero,zero,4680
   48f90:	00048fd4 	movui	zero,4671
   48f94:	00048fd4 	movui	zero,4671
   48f98:	000494d4 	movui	zero,4691
   48f9c:	0023883a 	mov	r17,zero
   48fa0:	113ff404 	addi	r4,r2,-48
   48fa4:	880690ba 	slli	r3,r17,2
   48fa8:	a0800007 	ldb	r2,0(r20)
   48fac:	a5000044 	addi	r20,r20,1
   48fb0:	1c63883a 	add	r17,r3,r17
   48fb4:	8c63883a 	add	r17,r17,r17
   48fb8:	2463883a 	add	r17,r4,r17
   48fbc:	113ff404 	addi	r4,r2,-48
   48fc0:	20c002b0 	cmpltui	r3,r4,10
   48fc4:	183ff71e 	bne	r3,zero,48fa4 <___vfiprintf_internal_r+0x294>
   48fc8:	10fff804 	addi	r3,r2,-32
   48fcc:	19001668 	cmpgeui	r4,r3,89
   48fd0:	203f9426 	beq	r4,zero,48e24 <___vfiprintf_internal_r+0x114>
   48fd4:	29403fcc 	andi	r5,r5,255
   48fd8:	2803ed1e 	bne	r5,zero,49f90 <___vfiprintf_internal_r+0x1280>
   48fdc:	10005f26 	beq	r2,zero,4915c <___vfiprintf_internal_r+0x44c>
   48fe0:	d8800d05 	stb	r2,52(sp)
   48fe4:	d8000945 	stb	zero,37(sp)
   48fe8:	05c00044 	movi	r23,1
   48fec:	07000044 	movi	fp,1
   48ff0:	dcc00d04 	addi	r19,sp,52
   48ff4:	db400015 	stw	r13,0(sp)
   48ff8:	0011883a 	mov	r8,zero
   48ffc:	d8800017 	ldw	r2,0(sp)
   49000:	1380008c 	andi	r14,r2,2
   49004:	70000126 	beq	r14,zero,4900c <___vfiprintf_internal_r+0x2fc>
   49008:	bdc00084 	addi	r23,r23,2
   4900c:	d8800017 	ldw	r2,0(sp)
   49010:	d9000b17 	ldw	r4,44(sp)
   49014:	1340210c 	andi	r13,r2,132
   49018:	21800044 	addi	r6,r4,1
   4901c:	d8800c17 	ldw	r2,48(sp)
   49020:	300b883a 	mov	r5,r6
   49024:	6800021e 	bne	r13,zero,49030 <___vfiprintf_internal_r+0x320>
   49028:	8dc7c83a 	sub	r3,r17,r23
   4902c:	00c2e216 	blt	zero,r3,49bb8 <___vfiprintf_internal_r+0xea8>
   49030:	d8c00947 	ldb	r3,37(sp)
   49034:	81800204 	addi	r6,r16,8
   49038:	18000d26 	beq	r3,zero,49070 <___vfiprintf_internal_r+0x360>
   4903c:	d8c00944 	addi	r3,sp,37
   49040:	10800044 	addi	r2,r2,1
   49044:	80c00015 	stw	r3,0(r16)
   49048:	00c00044 	movi	r3,1
   4904c:	80c00115 	stw	r3,4(r16)
   49050:	d8800c15 	stw	r2,48(sp)
   49054:	d9400b15 	stw	r5,44(sp)
   49058:	28c00208 	cmpgei	r3,r5,8
   4905c:	18029a1e 	bne	r3,zero,49ac8 <___vfiprintf_internal_r+0xdb8>
   49060:	2809883a 	mov	r4,r5
   49064:	3021883a 	mov	r16,r6
   49068:	29400044 	addi	r5,r5,1
   4906c:	31800204 	addi	r6,r6,8
   49070:	70001826 	beq	r14,zero,490d4 <___vfiprintf_internal_r+0x3c4>
   49074:	d8c00984 	addi	r3,sp,38
   49078:	10800084 	addi	r2,r2,2
   4907c:	80c00015 	stw	r3,0(r16)
   49080:	00c00084 	movi	r3,2
   49084:	80c00115 	stw	r3,4(r16)
   49088:	d8800c15 	stw	r2,48(sp)
   4908c:	d9400b15 	stw	r5,44(sp)
   49090:	28c00208 	cmpgei	r3,r5,8
   49094:	1802a426 	beq	r3,zero,49b28 <___vfiprintf_internal_r+0xe18>
   49098:	10032226 	beq	r2,zero,49d24 <___vfiprintf_internal_r+0x1014>
   4909c:	d9800a04 	addi	r6,sp,40
   490a0:	a80b883a 	mov	r5,r21
   490a4:	b009883a 	mov	r4,r22
   490a8:	da000315 	stw	r8,12(sp)
   490ac:	db400215 	stw	r13,8(sp)
   490b0:	0048c040 	call	48c04 <__sprint_r.part.0>
   490b4:	10002b1e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   490b8:	d9000b17 	ldw	r4,44(sp)
   490bc:	d8800c17 	ldw	r2,48(sp)
   490c0:	da000317 	ldw	r8,12(sp)
   490c4:	db400217 	ldw	r13,8(sp)
   490c8:	d9801904 	addi	r6,sp,100
   490cc:	21400044 	addi	r5,r4,1
   490d0:	9021883a 	mov	r16,r18
   490d4:	6b402018 	cmpnei	r13,r13,128
   490d8:	6801e526 	beq	r13,zero,49870 <___vfiprintf_internal_r+0xb60>
   490dc:	4711c83a 	sub	r8,r8,fp
   490e0:	02022416 	blt	zero,r8,49974 <___vfiprintf_internal_r+0xc64>
   490e4:	e085883a 	add	r2,fp,r2
   490e8:	d9400b15 	stw	r5,44(sp)
   490ec:	84c00015 	stw	r19,0(r16)
   490f0:	87000115 	stw	fp,4(r16)
   490f4:	d8800c15 	stw	r2,48(sp)
   490f8:	29400210 	cmplti	r5,r5,8
   490fc:	2800081e 	bne	r5,zero,49120 <___vfiprintf_internal_r+0x410>
   49100:	10009826 	beq	r2,zero,49364 <___vfiprintf_internal_r+0x654>
   49104:	d9800a04 	addi	r6,sp,40
   49108:	a80b883a 	mov	r5,r21
   4910c:	b009883a 	mov	r4,r22
   49110:	0048c040 	call	48c04 <__sprint_r.part.0>
   49114:	1000131e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   49118:	d8800c17 	ldw	r2,48(sp)
   4911c:	900d883a 	mov	r6,r18
   49120:	d8c00017 	ldw	r3,0(sp)
   49124:	1cc0010c 	andi	r19,r3,4
   49128:	98000226 	beq	r19,zero,49134 <___vfiprintf_internal_r+0x424>
   4912c:	8de1c83a 	sub	r16,r17,r23
   49130:	04009316 	blt	zero,r16,49380 <___vfiprintf_internal_r+0x670>
   49134:	8dc0010e 	bge	r17,r23,4913c <___vfiprintf_internal_r+0x42c>
   49138:	b823883a 	mov	r17,r23
   4913c:	d8c00117 	ldw	r3,4(sp)
   49140:	1c47883a 	add	r3,r3,r17
   49144:	d8c00115 	stw	r3,4(sp)
   49148:	1002551e 	bne	r2,zero,49aa0 <___vfiprintf_internal_r+0xd90>
   4914c:	a0800007 	ldb	r2,0(r20)
   49150:	d8000b15 	stw	zero,44(sp)
   49154:	9021883a 	mov	r16,r18
   49158:	103f181e 	bne	r2,zero,48dbc <___vfiprintf_internal_r+0xac>
   4915c:	d8800c17 	ldw	r2,48(sp)
   49160:	10038d1e 	bne	r2,zero,49f98 <___vfiprintf_internal_r+0x1288>
   49164:	a880030b 	ldhu	r2,12(r21)
   49168:	1080100c 	andi	r2,r2,64
   4916c:	1003a51e 	bne	r2,zero,4a004 <___vfiprintf_internal_r+0x12f4>
   49170:	d8800117 	ldw	r2,4(sp)
   49174:	dfc03017 	ldw	ra,192(sp)
   49178:	df002f17 	ldw	fp,188(sp)
   4917c:	ddc02e17 	ldw	r23,184(sp)
   49180:	dd802d17 	ldw	r22,180(sp)
   49184:	dd402c17 	ldw	r21,176(sp)
   49188:	dd002b17 	ldw	r20,172(sp)
   4918c:	dcc02a17 	ldw	r19,168(sp)
   49190:	dc802917 	ldw	r18,164(sp)
   49194:	dc402817 	ldw	r17,160(sp)
   49198:	dc002717 	ldw	r16,156(sp)
   4919c:	dec03104 	addi	sp,sp,196
   491a0:	f800283a 	ret
   491a4:	a80b883a 	mov	r5,r21
   491a8:	b009883a 	mov	r4,r22
   491ac:	0044fd00 	call	44fd0 <__swsetup_r>
   491b0:	1003941e 	bne	r2,zero,4a004 <___vfiprintf_internal_r+0x12f4>
   491b4:	a880030b 	ldhu	r2,12(r21)
   491b8:	1080068c 	andi	r2,r2,26
   491bc:	10800298 	cmpnei	r2,r2,10
   491c0:	103ef51e 	bne	r2,zero,48d98 <___vfiprintf_internal_r+0x88>
   491c4:	a880038f 	ldh	r2,14(r21)
   491c8:	103ef316 	blt	r2,zero,48d98 <___vfiprintf_internal_r+0x88>
   491cc:	d9c00417 	ldw	r7,16(sp)
   491d0:	a00d883a 	mov	r6,r20
   491d4:	a80b883a 	mov	r5,r21
   491d8:	b009883a 	mov	r4,r22
   491dc:	dfc03017 	ldw	ra,192(sp)
   491e0:	df002f17 	ldw	fp,188(sp)
   491e4:	ddc02e17 	ldw	r23,184(sp)
   491e8:	dd802d17 	ldw	r22,180(sp)
   491ec:	dd402c17 	ldw	r21,176(sp)
   491f0:	dd002b17 	ldw	r20,172(sp)
   491f4:	dcc02a17 	ldw	r19,168(sp)
   491f8:	dc802917 	ldw	r18,164(sp)
   491fc:	dc402817 	ldw	r17,160(sp)
   49200:	dc002717 	ldw	r16,156(sp)
   49204:	dec03104 	addi	sp,sp,196
   49208:	004a0701 	jmpi	4a070 <__sbprintf>
   4920c:	6b400414 	ori	r13,r13,16
   49210:	6880080c 	andi	r2,r13,32
   49214:	10004726 	beq	r2,zero,49334 <___vfiprintf_internal_r+0x624>
   49218:	d8c00417 	ldw	r3,16(sp)
   4921c:	00800044 	movi	r2,1
   49220:	1dc00017 	ldw	r23,0(r3)
   49224:	1f000117 	ldw	fp,4(r3)
   49228:	18c00204 	addi	r3,r3,8
   4922c:	d8c00415 	stw	r3,16(sp)
   49230:	00000906 	br	49258 <___vfiprintf_internal_r+0x548>
   49234:	6b400414 	ori	r13,r13,16
   49238:	6880080c 	andi	r2,r13,32
   4923c:	10003126 	beq	r2,zero,49304 <___vfiprintf_internal_r+0x5f4>
   49240:	d8c00417 	ldw	r3,16(sp)
   49244:	0005883a 	mov	r2,zero
   49248:	1dc00017 	ldw	r23,0(r3)
   4924c:	1f000117 	ldw	fp,4(r3)
   49250:	18c00204 	addi	r3,r3,8
   49254:	d8c00415 	stw	r3,16(sp)
   49258:	d8000945 	stb	zero,37(sp)
   4925c:	40ffffe0 	cmpeqi	r3,r8,-1
   49260:	001d883a 	mov	r14,zero
   49264:	1800f01e 	bne	r3,zero,49628 <___vfiprintf_internal_r+0x918>
   49268:	04ffdfc4 	movi	r19,-129
   4926c:	6cc8703a 	and	r4,r13,r19
   49270:	bf06b03a 	or	r3,r23,fp
   49274:	d9000015 	stw	r4,0(sp)
   49278:	1802301e 	bne	r3,zero,49b3c <___vfiprintf_internal_r+0xe2c>
   4927c:	4001f31e 	bne	r8,zero,49a4c <___vfiprintf_internal_r+0xd3c>
   49280:	10029e1e 	bne	r2,zero,49cfc <___vfiprintf_internal_r+0xfec>
   49284:	6f00004c 	andi	fp,r13,1
   49288:	e002bc26 	beq	fp,zero,49d7c <___vfiprintf_internal_r+0x106c>
   4928c:	00800c04 	movi	r2,48
   49290:	d88016c5 	stb	r2,91(sp)
   49294:	dcc016c4 	addi	r19,sp,91
   49298:	00010006 	br	4969c <___vfiprintf_internal_r+0x98c>
   4929c:	8d27c83a 	sub	r19,r17,r20
   492a0:	8d3fae26 	beq	r17,r20,4915c <___vfiprintf_internal_r+0x44c>
   492a4:	d8c00c17 	ldw	r3,48(sp)
   492a8:	d8800b17 	ldw	r2,44(sp)
   492ac:	85000015 	stw	r20,0(r16)
   492b0:	98c7883a 	add	r3,r19,r3
   492b4:	10800044 	addi	r2,r2,1
   492b8:	d8800b15 	stw	r2,44(sp)
   492bc:	84c00115 	stw	r19,4(r16)
   492c0:	d8c00c15 	stw	r3,48(sp)
   492c4:	10800208 	cmpgei	r2,r2,8
   492c8:	1000061e 	bne	r2,zero,492e4 <___vfiprintf_internal_r+0x5d4>
   492cc:	84000204 	addi	r16,r16,8
   492d0:	d8c00117 	ldw	r3,4(sp)
   492d4:	88800003 	ldbu	r2,0(r17)
   492d8:	1cc7883a 	add	r3,r3,r19
   492dc:	d8c00115 	stw	r3,4(sp)
   492e0:	003ec006 	br	48de4 <___vfiprintf_internal_r+0xd4>
   492e4:	18028126 	beq	r3,zero,49cec <___vfiprintf_internal_r+0xfdc>
   492e8:	d9800a04 	addi	r6,sp,40
   492ec:	a80b883a 	mov	r5,r21
   492f0:	b009883a 	mov	r4,r22
   492f4:	0048c040 	call	48c04 <__sprint_r.part.0>
   492f8:	103f9a1e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   492fc:	9021883a 	mov	r16,r18
   49300:	003ff306 	br	492d0 <___vfiprintf_internal_r+0x5c0>
   49304:	d9000417 	ldw	r4,16(sp)
   49308:	6880040c 	andi	r2,r13,16
   4930c:	20c00104 	addi	r3,r4,4
   49310:	1002ac1e 	bne	r2,zero,49dc4 <___vfiprintf_internal_r+0x10b4>
   49314:	6880100c 	andi	r2,r13,64
   49318:	1002fb26 	beq	r2,zero,49f08 <___vfiprintf_internal_r+0x11f8>
   4931c:	d8800417 	ldw	r2,16(sp)
   49320:	0039883a 	mov	fp,zero
   49324:	d8c00415 	stw	r3,16(sp)
   49328:	15c0000b 	ldhu	r23,0(r2)
   4932c:	0005883a 	mov	r2,zero
   49330:	003fc906 	br	49258 <___vfiprintf_internal_r+0x548>
   49334:	d9000417 	ldw	r4,16(sp)
   49338:	6880040c 	andi	r2,r13,16
   4933c:	20c00104 	addi	r3,r4,4
   49340:	1002af1e 	bne	r2,zero,49e00 <___vfiprintf_internal_r+0x10f0>
   49344:	6880100c 	andi	r2,r13,64
   49348:	1002fb26 	beq	r2,zero,49f38 <___vfiprintf_internal_r+0x1228>
   4934c:	d8800417 	ldw	r2,16(sp)
   49350:	0039883a 	mov	fp,zero
   49354:	d8c00415 	stw	r3,16(sp)
   49358:	15c0000b 	ldhu	r23,0(r2)
   4935c:	00800044 	movi	r2,1
   49360:	003fbd06 	br	49258 <___vfiprintf_internal_r+0x548>
   49364:	d8c00017 	ldw	r3,0(sp)
   49368:	d8000b15 	stw	zero,44(sp)
   4936c:	1cc0010c 	andi	r19,r3,4
   49370:	98024c26 	beq	r19,zero,49ca4 <___vfiprintf_internal_r+0xf94>
   49374:	8de1c83a 	sub	r16,r17,r23
   49378:	04024a0e 	bge	zero,r16,49ca4 <___vfiprintf_internal_r+0xf94>
   4937c:	900d883a 	mov	r6,r18
   49380:	80c00450 	cmplti	r3,r16,17
   49384:	d9000b17 	ldw	r4,44(sp)
   49388:	01c00174 	movhi	r7,5
   4938c:	18031a1e 	bne	r3,zero,49ff8 <___vfiprintf_internal_r+0x12e8>
   49390:	39c46504 	addi	r7,r7,4500
   49394:	04c00404 	movi	r19,16
   49398:	00000606 	br	493b4 <___vfiprintf_internal_r+0x6a4>
   4939c:	21400084 	addi	r5,r4,2
   493a0:	31800204 	addi	r6,r6,8
   493a4:	1809883a 	mov	r4,r3
   493a8:	843ffc04 	addi	r16,r16,-16
   493ac:	80c00448 	cmpgei	r3,r16,17
   493b0:	18001726 	beq	r3,zero,49410 <___vfiprintf_internal_r+0x700>
   493b4:	20c00044 	addi	r3,r4,1
   493b8:	10800404 	addi	r2,r2,16
   493bc:	31c00015 	stw	r7,0(r6)
   493c0:	34c00115 	stw	r19,4(r6)
   493c4:	d8800c15 	stw	r2,48(sp)
   493c8:	d8c00b15 	stw	r3,44(sp)
   493cc:	19400208 	cmpgei	r5,r3,8
   493d0:	283ff226 	beq	r5,zero,4939c <___vfiprintf_internal_r+0x68c>
   493d4:	d9800a04 	addi	r6,sp,40
   493d8:	a80b883a 	mov	r5,r21
   493dc:	b009883a 	mov	r4,r22
   493e0:	10011f26 	beq	r2,zero,49860 <___vfiprintf_internal_r+0xb50>
   493e4:	d9c00015 	stw	r7,0(sp)
   493e8:	0048c040 	call	48c04 <__sprint_r.part.0>
   493ec:	103f5d1e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   493f0:	d9000b17 	ldw	r4,44(sp)
   493f4:	843ffc04 	addi	r16,r16,-16
   493f8:	80c00448 	cmpgei	r3,r16,17
   493fc:	d8800c17 	ldw	r2,48(sp)
   49400:	d9c00017 	ldw	r7,0(sp)
   49404:	900d883a 	mov	r6,r18
   49408:	21400044 	addi	r5,r4,1
   4940c:	183fe91e 	bne	r3,zero,493b4 <___vfiprintf_internal_r+0x6a4>
   49410:	1405883a 	add	r2,r2,r16
   49414:	d9400b15 	stw	r5,44(sp)
   49418:	31c00015 	stw	r7,0(r6)
   4941c:	34000115 	stw	r16,4(r6)
   49420:	d8800c15 	stw	r2,48(sp)
   49424:	29400210 	cmplti	r5,r5,8
   49428:	283f421e 	bne	r5,zero,49134 <___vfiprintf_internal_r+0x424>
   4942c:	10021d26 	beq	r2,zero,49ca4 <___vfiprintf_internal_r+0xf94>
   49430:	d9800a04 	addi	r6,sp,40
   49434:	a80b883a 	mov	r5,r21
   49438:	b009883a 	mov	r4,r22
   4943c:	0048c040 	call	48c04 <__sprint_r.part.0>
   49440:	103f481e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   49444:	d8800c17 	ldw	r2,48(sp)
   49448:	003f3a06 	br	49134 <___vfiprintf_internal_r+0x424>
   4944c:	0040cc40 	call	40cc4 <__sinit>
   49450:	003e4106 	br	48d58 <___vfiprintf_internal_r+0x48>
   49454:	29403fcc 	andi	r5,r5,255
   49458:	2802da1e 	bne	r5,zero,49fc4 <___vfiprintf_internal_r+0x12b4>
   4945c:	6880080c 	andi	r2,r13,32
   49460:	10005b26 	beq	r2,zero,495d0 <___vfiprintf_internal_r+0x8c0>
   49464:	d8c00417 	ldw	r3,16(sp)
   49468:	18800117 	ldw	r2,4(r3)
   4946c:	1dc00017 	ldw	r23,0(r3)
   49470:	18c00204 	addi	r3,r3,8
   49474:	d8c00415 	stw	r3,16(sp)
   49478:	1039883a 	mov	fp,r2
   4947c:	10006016 	blt	r2,zero,49600 <___vfiprintf_internal_r+0x8f0>
   49480:	40bfffd8 	cmpnei	r2,r8,-1
   49484:	db800943 	ldbu	r14,37(sp)
   49488:	10000626 	beq	r2,zero,494a4 <___vfiprintf_internal_r+0x794>
   4948c:	04ffdfc4 	movi	r19,-129
   49490:	6cc6703a 	and	r3,r13,r19
   49494:	bf04b03a 	or	r2,r23,fp
   49498:	d8c00015 	stw	r3,0(sp)
   4949c:	10021626 	beq	r2,zero,49cf8 <___vfiprintf_internal_r+0xfe8>
   494a0:	db400017 	ldw	r13,0(sp)
   494a4:	e001a71e 	bne	fp,zero,49b44 <___vfiprintf_internal_r+0xe34>
   494a8:	b88002a8 	cmpgeui	r2,r23,10
   494ac:	1001a51e 	bne	r2,zero,49b44 <___vfiprintf_internal_r+0xe34>
   494b0:	bdc00c04 	addi	r23,r23,48
   494b4:	ddc016c5 	stb	r23,91(sp)
   494b8:	db400015 	stw	r13,0(sp)
   494bc:	07000044 	movi	fp,1
   494c0:	dcc016c4 	addi	r19,sp,91
   494c4:	00007506 	br	4969c <___vfiprintf_internal_r+0x98c>
   494c8:	a0800007 	ldb	r2,0(r20)
   494cc:	6b401014 	ori	r13,r13,64
   494d0:	003e5006 	br	48e14 <___vfiprintf_internal_r+0x104>
   494d4:	29403fcc 	andi	r5,r5,255
   494d8:	2802bc1e 	bne	r5,zero,49fcc <___vfiprintf_internal_r+0x12bc>
   494dc:	00c00174 	movhi	r3,5
   494e0:	18c3da04 	addi	r3,r3,3944
   494e4:	d8c00515 	stw	r3,20(sp)
   494e8:	68c0080c 	andi	r3,r13,32
   494ec:	1800bd26 	beq	r3,zero,497e4 <___vfiprintf_internal_r+0xad4>
   494f0:	d8c00417 	ldw	r3,16(sp)
   494f4:	1dc00017 	ldw	r23,0(r3)
   494f8:	1f000117 	ldw	fp,4(r3)
   494fc:	18c00204 	addi	r3,r3,8
   49500:	d8c00415 	stw	r3,16(sp)
   49504:	68c0004c 	andi	r3,r13,1
   49508:	18000226 	beq	r3,zero,49514 <___vfiprintf_internal_r+0x804>
   4950c:	bf06b03a 	or	r3,r23,fp
   49510:	1802261e 	bne	r3,zero,49dac <___vfiprintf_internal_r+0x109c>
   49514:	00800084 	movi	r2,2
   49518:	003f4f06 	br	49258 <___vfiprintf_internal_r+0x548>
   4951c:	d8800417 	ldw	r2,16(sp)
   49520:	d8000945 	stb	zero,37(sp)
   49524:	14c00017 	ldw	r19,0(r2)
   49528:	10c00104 	addi	r3,r2,4
   4952c:	98026926 	beq	r19,zero,49ed4 <___vfiprintf_internal_r+0x11c4>
   49530:	40bfffe0 	cmpeqi	r2,r8,-1
   49534:	1002411e 	bne	r2,zero,49e3c <___vfiprintf_internal_r+0x112c>
   49538:	400d883a 	mov	r6,r8
   4953c:	000b883a 	mov	r5,zero
   49540:	9809883a 	mov	r4,r19
   49544:	d8c00315 	stw	r3,12(sp)
   49548:	db400215 	stw	r13,8(sp)
   4954c:	da000015 	stw	r8,0(sp)
   49550:	00471500 	call	47150 <memchr>
   49554:	da000017 	ldw	r8,0(sp)
   49558:	db400217 	ldw	r13,8(sp)
   4955c:	d8c00317 	ldw	r3,12(sp)
   49560:	10029426 	beq	r2,zero,49fb4 <___vfiprintf_internal_r+0x12a4>
   49564:	14f9c83a 	sub	fp,r2,r19
   49568:	e02f883a 	mov	r23,fp
   4956c:	d8c00415 	stw	r3,16(sp)
   49570:	003ea006 	br	48ff4 <___vfiprintf_internal_r+0x2e4>
   49574:	a0800007 	ldb	r2,0(r20)
   49578:	6b400814 	ori	r13,r13,32
   4957c:	003e2506 	br	48e14 <___vfiprintf_internal_r+0x104>
   49580:	d8c00417 	ldw	r3,16(sp)
   49584:	00800c04 	movi	r2,48
   49588:	d8800985 	stb	r2,38(sp)
   4958c:	00801e04 	movi	r2,120
   49590:	01000174 	movhi	r4,5
   49594:	d88009c5 	stb	r2,39(sp)
   49598:	18800104 	addi	r2,r3,4
   4959c:	d8800415 	stw	r2,16(sp)
   495a0:	2083da04 	addi	r2,r4,3944
   495a4:	d8800515 	stw	r2,20(sp)
   495a8:	1dc00017 	ldw	r23,0(r3)
   495ac:	0039883a 	mov	fp,zero
   495b0:	6b400094 	ori	r13,r13,2
   495b4:	00800084 	movi	r2,2
   495b8:	003f2706 	br	49258 <___vfiprintf_internal_r+0x548>
   495bc:	29403fcc 	andi	r5,r5,255
   495c0:	2802841e 	bne	r5,zero,49fd4 <___vfiprintf_internal_r+0x12c4>
   495c4:	6b400414 	ori	r13,r13,16
   495c8:	6880080c 	andi	r2,r13,32
   495cc:	103fa51e 	bne	r2,zero,49464 <___vfiprintf_internal_r+0x754>
   495d0:	d9000417 	ldw	r4,16(sp)
   495d4:	6880040c 	andi	r2,r13,16
   495d8:	20c00104 	addi	r3,r4,4
   495dc:	1001ee1e 	bne	r2,zero,49d98 <___vfiprintf_internal_r+0x1088>
   495e0:	6880100c 	andi	r2,r13,64
   495e4:	10024e26 	beq	r2,zero,49f20 <___vfiprintf_internal_r+0x1210>
   495e8:	d8800417 	ldw	r2,16(sp)
   495ec:	d8c00415 	stw	r3,16(sp)
   495f0:	15c0000f 	ldh	r23,0(r2)
   495f4:	b839d7fa 	srai	fp,r23,31
   495f8:	e005883a 	mov	r2,fp
   495fc:	103fa00e 	bge	r2,zero,49480 <___vfiprintf_internal_r+0x770>
   49600:	b804c03a 	cmpne	r2,r23,zero
   49604:	0739c83a 	sub	fp,zero,fp
   49608:	e0b9c83a 	sub	fp,fp,r2
   4960c:	00800b44 	movi	r2,45
   49610:	d8800945 	stb	r2,37(sp)
   49614:	40ffffe0 	cmpeqi	r3,r8,-1
   49618:	05efc83a 	sub	r23,zero,r23
   4961c:	03800b44 	movi	r14,45
   49620:	00800044 	movi	r2,1
   49624:	183f1026 	beq	r3,zero,49268 <___vfiprintf_internal_r+0x558>
   49628:	10c00060 	cmpeqi	r3,r2,1
   4962c:	183f9d1e 	bne	r3,zero,494a4 <___vfiprintf_internal_r+0x794>
   49630:	108000a0 	cmpeqi	r2,r2,2
   49634:	10010a1e 	bne	r2,zero,49a60 <___vfiprintf_internal_r+0xd50>
   49638:	9027883a 	mov	r19,r18
   4963c:	e008977a 	slli	r4,fp,29
   49640:	b806d0fa 	srli	r3,r23,3
   49644:	e038d0fa 	srli	fp,fp,3
   49648:	b88001cc 	andi	r2,r23,7
   4964c:	10800c04 	addi	r2,r2,48
   49650:	20eeb03a 	or	r23,r4,r3
   49654:	98bfffc5 	stb	r2,-1(r19)
   49658:	bf06b03a 	or	r3,r23,fp
   4965c:	980b883a 	mov	r5,r19
   49660:	9cffffc4 	addi	r19,r19,-1
   49664:	183ff51e 	bne	r3,zero,4963c <___vfiprintf_internal_r+0x92c>
   49668:	68c0004c 	andi	r3,r13,1
   4966c:	18010926 	beq	r3,zero,49a94 <___vfiprintf_internal_r+0xd84>
   49670:	10803fcc 	andi	r2,r2,255
   49674:	1080201c 	xori	r2,r2,128
   49678:	10bfe004 	addi	r2,r2,-128
   4967c:	10800c18 	cmpnei	r2,r2,48
   49680:	10010426 	beq	r2,zero,49a94 <___vfiprintf_internal_r+0xd84>
   49684:	297fff84 	addi	r5,r5,-2
   49688:	00800c04 	movi	r2,48
   4968c:	98bfffc5 	stb	r2,-1(r19)
   49690:	9179c83a 	sub	fp,r18,r5
   49694:	db400015 	stw	r13,0(sp)
   49698:	2827883a 	mov	r19,r5
   4969c:	402f883a 	mov	r23,r8
   496a0:	4700010e 	bge	r8,fp,496a8 <___vfiprintf_internal_r+0x998>
   496a4:	e02f883a 	mov	r23,fp
   496a8:	73803fcc 	andi	r14,r14,255
   496ac:	7380201c 	xori	r14,r14,128
   496b0:	73bfe004 	addi	r14,r14,-128
   496b4:	703e5126 	beq	r14,zero,48ffc <___vfiprintf_internal_r+0x2ec>
   496b8:	bdc00044 	addi	r23,r23,1
   496bc:	003e4f06 	br	48ffc <___vfiprintf_internal_r+0x2ec>
   496c0:	a0800007 	ldb	r2,0(r20)
   496c4:	6b402014 	ori	r13,r13,128
   496c8:	003dd206 	br	48e14 <___vfiprintf_internal_r+0x104>
   496cc:	a0800007 	ldb	r2,0(r20)
   496d0:	a0c00044 	addi	r3,r20,1
   496d4:	11000aa0 	cmpeqi	r4,r2,42
   496d8:	2002521e 	bne	r4,zero,4a024 <___vfiprintf_internal_r+0x1314>
   496dc:	113ff404 	addi	r4,r2,-48
   496e0:	21c002b0 	cmpltui	r7,r4,10
   496e4:	1829883a 	mov	r20,r3
   496e8:	0011883a 	mov	r8,zero
   496ec:	383dca26 	beq	r7,zero,48e18 <___vfiprintf_internal_r+0x108>
   496f0:	400690ba 	slli	r3,r8,2
   496f4:	a0800007 	ldb	r2,0(r20)
   496f8:	a5000044 	addi	r20,r20,1
   496fc:	1a11883a 	add	r8,r3,r8
   49700:	4211883a 	add	r8,r8,r8
   49704:	4111883a 	add	r8,r8,r4
   49708:	113ff404 	addi	r4,r2,-48
   4970c:	20c002b0 	cmpltui	r3,r4,10
   49710:	183ff71e 	bne	r3,zero,496f0 <___vfiprintf_internal_r+0x9e0>
   49714:	003dc006 	br	48e18 <___vfiprintf_internal_r+0x108>
   49718:	a0800003 	ldbu	r2,0(r20)
   4971c:	10803fcc 	andi	r2,r2,255
   49720:	1080201c 	xori	r2,r2,128
   49724:	6b400114 	ori	r13,r13,4
   49728:	10bfe004 	addi	r2,r2,-128
   4972c:	003db906 	br	48e14 <___vfiprintf_internal_r+0x104>
   49730:	a0800007 	ldb	r2,0(r20)
   49734:	01400044 	movi	r5,1
   49738:	01800ac4 	movi	r6,43
   4973c:	003db506 	br	48e14 <___vfiprintf_internal_r+0x104>
   49740:	d8c00417 	ldw	r3,16(sp)
   49744:	a0800003 	ldbu	r2,0(r20)
   49748:	1c400017 	ldw	r17,0(r3)
   4974c:	18c00104 	addi	r3,r3,4
   49750:	8801b716 	blt	r17,zero,49e30 <___vfiprintf_internal_r+0x1120>
   49754:	d8c00415 	stw	r3,16(sp)
   49758:	10803fcc 	andi	r2,r2,255
   4975c:	1080201c 	xori	r2,r2,128
   49760:	10bfe004 	addi	r2,r2,-128
   49764:	003dab06 	br	48e14 <___vfiprintf_internal_r+0x104>
   49768:	a0800007 	ldb	r2,0(r20)
   4976c:	6b400054 	ori	r13,r13,1
   49770:	003da806 	br	48e14 <___vfiprintf_internal_r+0x104>
   49774:	30c03fcc 	andi	r3,r6,255
   49778:	18c0201c 	xori	r3,r3,128
   4977c:	18ffe004 	addi	r3,r3,-128
   49780:	a0800003 	ldbu	r2,0(r20)
   49784:	183ff41e 	bne	r3,zero,49758 <___vfiprintf_internal_r+0xa48>
   49788:	10803fcc 	andi	r2,r2,255
   4978c:	1080201c 	xori	r2,r2,128
   49790:	01400044 	movi	r5,1
   49794:	01800804 	movi	r6,32
   49798:	10bfe004 	addi	r2,r2,-128
   4979c:	003d9d06 	br	48e14 <___vfiprintf_internal_r+0x104>
   497a0:	d8c00417 	ldw	r3,16(sp)
   497a4:	d8000945 	stb	zero,37(sp)
   497a8:	05c00044 	movi	r23,1
   497ac:	18800017 	ldw	r2,0(r3)
   497b0:	18c00104 	addi	r3,r3,4
   497b4:	d8c00415 	stw	r3,16(sp)
   497b8:	d8800d05 	stb	r2,52(sp)
   497bc:	07000044 	movi	fp,1
   497c0:	dcc00d04 	addi	r19,sp,52
   497c4:	003e0b06 	br	48ff4 <___vfiprintf_internal_r+0x2e4>
   497c8:	29403fcc 	andi	r5,r5,255
   497cc:	2802061e 	bne	r5,zero,49fe8 <___vfiprintf_internal_r+0x12d8>
   497d0:	00c00174 	movhi	r3,5
   497d4:	18c3df04 	addi	r3,r3,3964
   497d8:	d8c00515 	stw	r3,20(sp)
   497dc:	68c0080c 	andi	r3,r13,32
   497e0:	183f431e 	bne	r3,zero,494f0 <___vfiprintf_internal_r+0x7e0>
   497e4:	d9400417 	ldw	r5,16(sp)
   497e8:	68c0040c 	andi	r3,r13,16
   497ec:	29000104 	addi	r4,r5,4
   497f0:	18017f1e 	bne	r3,zero,49df0 <___vfiprintf_internal_r+0x10e0>
   497f4:	68c0100c 	andi	r3,r13,64
   497f8:	1801be26 	beq	r3,zero,49ef4 <___vfiprintf_internal_r+0x11e4>
   497fc:	d8c00417 	ldw	r3,16(sp)
   49800:	0039883a 	mov	fp,zero
   49804:	d9000415 	stw	r4,16(sp)
   49808:	1dc0000b 	ldhu	r23,0(r3)
   4980c:	003f3d06 	br	49504 <___vfiprintf_internal_r+0x7f4>
   49810:	29403fcc 	andi	r5,r5,255
   49814:	2801f61e 	bne	r5,zero,49ff0 <___vfiprintf_internal_r+0x12e0>
   49818:	d9000417 	ldw	r4,16(sp)
   4981c:	6880080c 	andi	r2,r13,32
   49820:	20c00017 	ldw	r3,0(r4)
   49824:	21000104 	addi	r4,r4,4
   49828:	10016b1e 	bne	r2,zero,49dd8 <___vfiprintf_internal_r+0x10c8>
   4982c:	6880040c 	andi	r2,r13,16
   49830:	1001951e 	bne	r2,zero,49e88 <___vfiprintf_internal_r+0x1178>
   49834:	6b40100c 	andi	r13,r13,64
   49838:	68019326 	beq	r13,zero,49e88 <___vfiprintf_internal_r+0x1178>
   4983c:	d8800117 	ldw	r2,4(sp)
   49840:	d9000415 	stw	r4,16(sp)
   49844:	1880000d 	sth	r2,0(r3)
   49848:	003d5a06 	br	48db4 <___vfiprintf_internal_r+0xa4>
   4984c:	a0800007 	ldb	r2,0(r20)
   49850:	10c01b18 	cmpnei	r3,r2,108
   49854:	18019826 	beq	r3,zero,49eb8 <___vfiprintf_internal_r+0x11a8>
   49858:	6b400414 	ori	r13,r13,16
   4985c:	003d6d06 	br	48e14 <___vfiprintf_internal_r+0x104>
   49860:	01400044 	movi	r5,1
   49864:	0009883a 	mov	r4,zero
   49868:	900d883a 	mov	r6,r18
   4986c:	003ece06 	br	493a8 <___vfiprintf_internal_r+0x698>
   49870:	8dc7c83a 	sub	r3,r17,r23
   49874:	00fe190e 	bge	zero,r3,490dc <___vfiprintf_internal_r+0x3cc>
   49878:	19c00450 	cmplti	r7,r3,17
   4987c:	3801e41e 	bne	r7,zero,4a010 <___vfiprintf_internal_r+0x1300>
   49880:	01c00174 	movhi	r7,5
   49884:	39c46104 	addi	r7,r7,4484
   49888:	03400404 	movi	r13,16
   4988c:	00000606 	br	498a8 <___vfiprintf_internal_r+0xb98>
   49890:	23800084 	addi	r14,r4,2
   49894:	84000204 	addi	r16,r16,8
   49898:	2809883a 	mov	r4,r5
   4989c:	18fffc04 	addi	r3,r3,-16
   498a0:	19400448 	cmpgei	r5,r3,17
   498a4:	28001c26 	beq	r5,zero,49918 <___vfiprintf_internal_r+0xc08>
   498a8:	21400044 	addi	r5,r4,1
   498ac:	10800404 	addi	r2,r2,16
   498b0:	81c00015 	stw	r7,0(r16)
   498b4:	83400115 	stw	r13,4(r16)
   498b8:	d8800c15 	stw	r2,48(sp)
   498bc:	d9400b15 	stw	r5,44(sp)
   498c0:	29800208 	cmpgei	r6,r5,8
   498c4:	303ff226 	beq	r6,zero,49890 <___vfiprintf_internal_r+0xb80>
   498c8:	d9800a04 	addi	r6,sp,40
   498cc:	a80b883a 	mov	r5,r21
   498d0:	b009883a 	mov	r4,r22
   498d4:	10007826 	beq	r2,zero,49ab8 <___vfiprintf_internal_r+0xda8>
   498d8:	d9c00615 	stw	r7,24(sp)
   498dc:	d8c00315 	stw	r3,12(sp)
   498e0:	da000215 	stw	r8,8(sp)
   498e4:	0048c040 	call	48c04 <__sprint_r.part.0>
   498e8:	103e1e1e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   498ec:	d8c00317 	ldw	r3,12(sp)
   498f0:	d9000b17 	ldw	r4,44(sp)
   498f4:	d8800c17 	ldw	r2,48(sp)
   498f8:	18fffc04 	addi	r3,r3,-16
   498fc:	19400448 	cmpgei	r5,r3,17
   49900:	d9c00617 	ldw	r7,24(sp)
   49904:	da000217 	ldw	r8,8(sp)
   49908:	9021883a 	mov	r16,r18
   4990c:	23800044 	addi	r14,r4,1
   49910:	03400404 	movi	r13,16
   49914:	283fe41e 	bne	r5,zero,498a8 <___vfiprintf_internal_r+0xb98>
   49918:	83400204 	addi	r13,r16,8
   4991c:	10c5883a 	add	r2,r2,r3
   49920:	80c00115 	stw	r3,4(r16)
   49924:	81c00015 	stw	r7,0(r16)
   49928:	d8800c15 	stw	r2,48(sp)
   4992c:	db800b15 	stw	r14,44(sp)
   49930:	70c00208 	cmpgei	r3,r14,8
   49934:	18011326 	beq	r3,zero,49d84 <___vfiprintf_internal_r+0x1074>
   49938:	10018826 	beq	r2,zero,49f5c <___vfiprintf_internal_r+0x124c>
   4993c:	d9800a04 	addi	r6,sp,40
   49940:	a80b883a 	mov	r5,r21
   49944:	b009883a 	mov	r4,r22
   49948:	da000215 	stw	r8,8(sp)
   4994c:	0048c040 	call	48c04 <__sprint_r.part.0>
   49950:	103e041e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   49954:	da000217 	ldw	r8,8(sp)
   49958:	d9000b17 	ldw	r4,44(sp)
   4995c:	d8800c17 	ldw	r2,48(sp)
   49960:	4711c83a 	sub	r8,r8,fp
   49964:	d9801904 	addi	r6,sp,100
   49968:	21400044 	addi	r5,r4,1
   4996c:	9021883a 	mov	r16,r18
   49970:	023ddc0e 	bge	zero,r8,490e4 <___vfiprintf_internal_r+0x3d4>
   49974:	40c00450 	cmplti	r3,r8,17
   49978:	01c00174 	movhi	r7,5
   4997c:	1801741e 	bne	r3,zero,49f50 <___vfiprintf_internal_r+0x1240>
   49980:	39c46104 	addi	r7,r7,4484
   49984:	03400404 	movi	r13,16
   49988:	00000606 	br	499a4 <___vfiprintf_internal_r+0xc94>
   4998c:	21400084 	addi	r5,r4,2
   49990:	84000204 	addi	r16,r16,8
   49994:	1809883a 	mov	r4,r3
   49998:	423ffc04 	addi	r8,r8,-16
   4999c:	40c00448 	cmpgei	r3,r8,17
   499a0:	18001a26 	beq	r3,zero,49a0c <___vfiprintf_internal_r+0xcfc>
   499a4:	20c00044 	addi	r3,r4,1
   499a8:	10800404 	addi	r2,r2,16
   499ac:	81c00015 	stw	r7,0(r16)
   499b0:	83400115 	stw	r13,4(r16)
   499b4:	d8800c15 	stw	r2,48(sp)
   499b8:	d8c00b15 	stw	r3,44(sp)
   499bc:	19400208 	cmpgei	r5,r3,8
   499c0:	283ff226 	beq	r5,zero,4998c <___vfiprintf_internal_r+0xc7c>
   499c4:	d9800a04 	addi	r6,sp,40
   499c8:	a80b883a 	mov	r5,r21
   499cc:	b009883a 	mov	r4,r22
   499d0:	10001a26 	beq	r2,zero,49a3c <___vfiprintf_internal_r+0xd2c>
   499d4:	d9c00315 	stw	r7,12(sp)
   499d8:	da000215 	stw	r8,8(sp)
   499dc:	0048c040 	call	48c04 <__sprint_r.part.0>
   499e0:	103de01e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   499e4:	da000217 	ldw	r8,8(sp)
   499e8:	d9000b17 	ldw	r4,44(sp)
   499ec:	d8800c17 	ldw	r2,48(sp)
   499f0:	423ffc04 	addi	r8,r8,-16
   499f4:	40c00448 	cmpgei	r3,r8,17
   499f8:	d9c00317 	ldw	r7,12(sp)
   499fc:	9021883a 	mov	r16,r18
   49a00:	21400044 	addi	r5,r4,1
   49a04:	03400404 	movi	r13,16
   49a08:	183fe61e 	bne	r3,zero,499a4 <___vfiprintf_internal_r+0xc94>
   49a0c:	81000204 	addi	r4,r16,8
   49a10:	1205883a 	add	r2,r2,r8
   49a14:	81c00015 	stw	r7,0(r16)
   49a18:	82000115 	stw	r8,4(r16)
   49a1c:	d8800c15 	stw	r2,48(sp)
   49a20:	d9400b15 	stw	r5,44(sp)
   49a24:	28c00208 	cmpgei	r3,r5,8
   49a28:	1800a41e 	bne	r3,zero,49cbc <___vfiprintf_internal_r+0xfac>
   49a2c:	29400044 	addi	r5,r5,1
   49a30:	21800204 	addi	r6,r4,8
   49a34:	2021883a 	mov	r16,r4
   49a38:	003daa06 	br	490e4 <___vfiprintf_internal_r+0x3d4>
   49a3c:	01400044 	movi	r5,1
   49a40:	0009883a 	mov	r4,zero
   49a44:	9021883a 	mov	r16,r18
   49a48:	003fd306 	br	49998 <___vfiprintf_internal_r+0xc88>
   49a4c:	10c00060 	cmpeqi	r3,r2,1
   49a50:	1801561e 	bne	r3,zero,49fac <___vfiprintf_internal_r+0x129c>
   49a54:	108000a0 	cmpeqi	r2,r2,2
   49a58:	db400017 	ldw	r13,0(sp)
   49a5c:	103ef626 	beq	r2,zero,49638 <___vfiprintf_internal_r+0x928>
   49a60:	9027883a 	mov	r19,r18
   49a64:	d9000517 	ldw	r4,20(sp)
   49a68:	b88003cc 	andi	r2,r23,15
   49a6c:	e006973a 	slli	r3,fp,28
   49a70:	b82ed13a 	srli	r23,r23,4
   49a74:	2085883a 	add	r2,r4,r2
   49a78:	10800003 	ldbu	r2,0(r2)
   49a7c:	e038d13a 	srli	fp,fp,4
   49a80:	1deeb03a 	or	r23,r3,r23
   49a84:	98bfffc5 	stb	r2,-1(r19)
   49a88:	bf04b03a 	or	r2,r23,fp
   49a8c:	9cffffc4 	addi	r19,r19,-1
   49a90:	103ff41e 	bne	r2,zero,49a64 <___vfiprintf_internal_r+0xd54>
   49a94:	94f9c83a 	sub	fp,r18,r19
   49a98:	db400015 	stw	r13,0(sp)
   49a9c:	003eff06 	br	4969c <___vfiprintf_internal_r+0x98c>
   49aa0:	d9800a04 	addi	r6,sp,40
   49aa4:	a80b883a 	mov	r5,r21
   49aa8:	b009883a 	mov	r4,r22
   49aac:	0048c040 	call	48c04 <__sprint_r.part.0>
   49ab0:	103da626 	beq	r2,zero,4914c <___vfiprintf_internal_r+0x43c>
   49ab4:	003dab06 	br	49164 <___vfiprintf_internal_r+0x454>
   49ab8:	03800044 	movi	r14,1
   49abc:	0009883a 	mov	r4,zero
   49ac0:	9021883a 	mov	r16,r18
   49ac4:	003f7506 	br	4989c <___vfiprintf_internal_r+0xb8c>
   49ac8:	10009026 	beq	r2,zero,49d0c <___vfiprintf_internal_r+0xffc>
   49acc:	d9800a04 	addi	r6,sp,40
   49ad0:	a80b883a 	mov	r5,r21
   49ad4:	b009883a 	mov	r4,r22
   49ad8:	da000615 	stw	r8,24(sp)
   49adc:	db400315 	stw	r13,12(sp)
   49ae0:	db800215 	stw	r14,8(sp)
   49ae4:	0048c040 	call	48c04 <__sprint_r.part.0>
   49ae8:	103d9e1e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   49aec:	d9000b17 	ldw	r4,44(sp)
   49af0:	d8800c17 	ldw	r2,48(sp)
   49af4:	da000617 	ldw	r8,24(sp)
   49af8:	db400317 	ldw	r13,12(sp)
   49afc:	db800217 	ldw	r14,8(sp)
   49b00:	d9801904 	addi	r6,sp,100
   49b04:	21400044 	addi	r5,r4,1
   49b08:	9021883a 	mov	r16,r18
   49b0c:	003d5806 	br	49070 <___vfiprintf_internal_r+0x360>
   49b10:	d8800984 	addi	r2,sp,38
   49b14:	d8801715 	stw	r2,92(sp)
   49b18:	00800084 	movi	r2,2
   49b1c:	d8801815 	stw	r2,96(sp)
   49b20:	d9801904 	addi	r6,sp,100
   49b24:	01400044 	movi	r5,1
   49b28:	3021883a 	mov	r16,r6
   49b2c:	2809883a 	mov	r4,r5
   49b30:	21400044 	addi	r5,r4,1
   49b34:	81800204 	addi	r6,r16,8
   49b38:	003d6606 	br	490d4 <___vfiprintf_internal_r+0x3c4>
   49b3c:	db400017 	ldw	r13,0(sp)
   49b40:	003eb906 	br	49628 <___vfiprintf_internal_r+0x918>
   49b44:	9027883a 	mov	r19,r18
   49b48:	b809883a 	mov	r4,r23
   49b4c:	e00b883a 	mov	r5,fp
   49b50:	01800284 	movi	r6,10
   49b54:	000f883a 	mov	r7,zero
   49b58:	db800315 	stw	r14,12(sp)
   49b5c:	da000215 	stw	r8,8(sp)
   49b60:	db400015 	stw	r13,0(sp)
   49b64:	004b4dc0 	call	4b4dc <__umoddi3>
   49b68:	10800c04 	addi	r2,r2,48
   49b6c:	b809883a 	mov	r4,r23
   49b70:	e00b883a 	mov	r5,fp
   49b74:	98bfffc5 	stb	r2,-1(r19)
   49b78:	01800284 	movi	r6,10
   49b7c:	000f883a 	mov	r7,zero
   49b80:	004aebc0 	call	4aebc <__udivdi3>
   49b84:	e009883a 	mov	r4,fp
   49b88:	b80b883a 	mov	r5,r23
   49b8c:	db400017 	ldw	r13,0(sp)
   49b90:	da000217 	ldw	r8,8(sp)
   49b94:	db800317 	ldw	r14,12(sp)
   49b98:	9cffffc4 	addi	r19,r19,-1
   49b9c:	102f883a 	mov	r23,r2
   49ba0:	1839883a 	mov	fp,r3
   49ba4:	203fe81e 	bne	r4,zero,49b48 <___vfiprintf_internal_r+0xe38>
   49ba8:	294002a8 	cmpgeui	r5,r5,10
   49bac:	283fe61e 	bne	r5,zero,49b48 <___vfiprintf_internal_r+0xe38>
   49bb0:	94f9c83a 	sub	fp,r18,r19
   49bb4:	003eb906 	br	4969c <___vfiprintf_internal_r+0x98c>
   49bb8:	19400450 	cmplti	r5,r3,17
   49bbc:	01c00174 	movhi	r7,5
   49bc0:	2801061e 	bne	r5,zero,49fdc <___vfiprintf_internal_r+0x12cc>
   49bc4:	39c46504 	addi	r7,r7,4500
   49bc8:	03c00404 	movi	r15,16
   49bcc:	00000706 	br	49bec <___vfiprintf_internal_r+0xedc>
   49bd0:	27c00084 	addi	ra,r4,2
   49bd4:	84000204 	addi	r16,r16,8
   49bd8:	3009883a 	mov	r4,r6
   49bdc:	18fffc04 	addi	r3,r3,-16
   49be0:	19400448 	cmpgei	r5,r3,17
   49be4:	28002026 	beq	r5,zero,49c68 <___vfiprintf_internal_r+0xf58>
   49be8:	21800044 	addi	r6,r4,1
   49bec:	10800404 	addi	r2,r2,16
   49bf0:	81c00015 	stw	r7,0(r16)
   49bf4:	83c00115 	stw	r15,4(r16)
   49bf8:	d8800c15 	stw	r2,48(sp)
   49bfc:	d9800b15 	stw	r6,44(sp)
   49c00:	31400208 	cmpgei	r5,r6,8
   49c04:	283ff226 	beq	r5,zero,49bd0 <___vfiprintf_internal_r+0xec0>
   49c08:	d9800a04 	addi	r6,sp,40
   49c0c:	a80b883a 	mov	r5,r21
   49c10:	b009883a 	mov	r4,r22
   49c14:	10001f26 	beq	r2,zero,49c94 <___vfiprintf_internal_r+0xf84>
   49c18:	d9c00815 	stw	r7,32(sp)
   49c1c:	d8c00715 	stw	r3,28(sp)
   49c20:	da000615 	stw	r8,24(sp)
   49c24:	db400315 	stw	r13,12(sp)
   49c28:	db800215 	stw	r14,8(sp)
   49c2c:	0048c040 	call	48c04 <__sprint_r.part.0>
   49c30:	103d4c1e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   49c34:	d8c00717 	ldw	r3,28(sp)
   49c38:	d9000b17 	ldw	r4,44(sp)
   49c3c:	d8800c17 	ldw	r2,48(sp)
   49c40:	18fffc04 	addi	r3,r3,-16
   49c44:	19400448 	cmpgei	r5,r3,17
   49c48:	d9c00817 	ldw	r7,32(sp)
   49c4c:	da000617 	ldw	r8,24(sp)
   49c50:	db400317 	ldw	r13,12(sp)
   49c54:	db800217 	ldw	r14,8(sp)
   49c58:	9021883a 	mov	r16,r18
   49c5c:	27c00044 	addi	ra,r4,1
   49c60:	03c00404 	movi	r15,16
   49c64:	283fe01e 	bne	r5,zero,49be8 <___vfiprintf_internal_r+0xed8>
   49c68:	10c5883a 	add	r2,r2,r3
   49c6c:	80c00115 	stw	r3,4(r16)
   49c70:	81c00015 	stw	r7,0(r16)
   49c74:	d8800c15 	stw	r2,48(sp)
   49c78:	dfc00b15 	stw	ra,44(sp)
   49c7c:	f8c00208 	cmpgei	r3,ra,8
   49c80:	18002d1e 	bne	r3,zero,49d38 <___vfiprintf_internal_r+0x1028>
   49c84:	84000204 	addi	r16,r16,8
   49c88:	f9400044 	addi	r5,ra,1
   49c8c:	f809883a 	mov	r4,ra
   49c90:	003ce706 	br	49030 <___vfiprintf_internal_r+0x320>
   49c94:	0009883a 	mov	r4,zero
   49c98:	07c00044 	movi	ra,1
   49c9c:	9021883a 	mov	r16,r18
   49ca0:	003fce06 	br	49bdc <___vfiprintf_internal_r+0xecc>
   49ca4:	8dc0010e 	bge	r17,r23,49cac <___vfiprintf_internal_r+0xf9c>
   49ca8:	b823883a 	mov	r17,r23
   49cac:	d8800117 	ldw	r2,4(sp)
   49cb0:	1445883a 	add	r2,r2,r17
   49cb4:	d8800115 	stw	r2,4(sp)
   49cb8:	003d2406 	br	4914c <___vfiprintf_internal_r+0x43c>
   49cbc:	10007626 	beq	r2,zero,49e98 <___vfiprintf_internal_r+0x1188>
   49cc0:	d9800a04 	addi	r6,sp,40
   49cc4:	a80b883a 	mov	r5,r21
   49cc8:	b009883a 	mov	r4,r22
   49ccc:	0048c040 	call	48c04 <__sprint_r.part.0>
   49cd0:	103d241e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   49cd4:	d9400b17 	ldw	r5,44(sp)
   49cd8:	d8800c17 	ldw	r2,48(sp)
   49cdc:	d9801904 	addi	r6,sp,100
   49ce0:	29400044 	addi	r5,r5,1
   49ce4:	9021883a 	mov	r16,r18
   49ce8:	003cfe06 	br	490e4 <___vfiprintf_internal_r+0x3d4>
   49cec:	d8000b15 	stw	zero,44(sp)
   49cf0:	9021883a 	mov	r16,r18
   49cf4:	003d7606 	br	492d0 <___vfiprintf_internal_r+0x5c0>
   49cf8:	4000ac1e 	bne	r8,zero,49fac <___vfiprintf_internal_r+0x129c>
   49cfc:	0011883a 	mov	r8,zero
   49d00:	0039883a 	mov	fp,zero
   49d04:	9027883a 	mov	r19,r18
   49d08:	003e6406 	br	4969c <___vfiprintf_internal_r+0x98c>
   49d0c:	7000411e 	bne	r14,zero,49e14 <___vfiprintf_internal_r+0x1104>
   49d10:	0009883a 	mov	r4,zero
   49d14:	d9801904 	addi	r6,sp,100
   49d18:	01400044 	movi	r5,1
   49d1c:	9021883a 	mov	r16,r18
   49d20:	003cec06 	br	490d4 <___vfiprintf_internal_r+0x3c4>
   49d24:	d9801904 	addi	r6,sp,100
   49d28:	01400044 	movi	r5,1
   49d2c:	0009883a 	mov	r4,zero
   49d30:	9021883a 	mov	r16,r18
   49d34:	003ce706 	br	490d4 <___vfiprintf_internal_r+0x3c4>
   49d38:	10004a26 	beq	r2,zero,49e64 <___vfiprintf_internal_r+0x1154>
   49d3c:	d9800a04 	addi	r6,sp,40
   49d40:	a80b883a 	mov	r5,r21
   49d44:	b009883a 	mov	r4,r22
   49d48:	da000615 	stw	r8,24(sp)
   49d4c:	db400315 	stw	r13,12(sp)
   49d50:	db800215 	stw	r14,8(sp)
   49d54:	0048c040 	call	48c04 <__sprint_r.part.0>
   49d58:	103d021e 	bne	r2,zero,49164 <___vfiprintf_internal_r+0x454>
   49d5c:	d9000b17 	ldw	r4,44(sp)
   49d60:	d8800c17 	ldw	r2,48(sp)
   49d64:	da000617 	ldw	r8,24(sp)
   49d68:	db400317 	ldw	r13,12(sp)
   49d6c:	db800217 	ldw	r14,8(sp)
   49d70:	9021883a 	mov	r16,r18
   49d74:	21400044 	addi	r5,r4,1
   49d78:	003cad06 	br	49030 <___vfiprintf_internal_r+0x320>
   49d7c:	9027883a 	mov	r19,r18
   49d80:	003e4606 	br	4969c <___vfiprintf_internal_r+0x98c>
   49d84:	71400044 	addi	r5,r14,1
   49d88:	69800204 	addi	r6,r13,8
   49d8c:	7009883a 	mov	r4,r14
   49d90:	6821883a 	mov	r16,r13
   49d94:	003cd106 	br	490dc <___vfiprintf_internal_r+0x3cc>
   49d98:	25c00017 	ldw	r23,0(r4)
   49d9c:	d8c00415 	stw	r3,16(sp)
   49da0:	b839d7fa 	srai	fp,r23,31
   49da4:	e005883a 	mov	r2,fp
   49da8:	003db406 	br	4947c <___vfiprintf_internal_r+0x76c>
   49dac:	00c00c04 	movi	r3,48
   49db0:	d88009c5 	stb	r2,39(sp)
   49db4:	d8c00985 	stb	r3,38(sp)
   49db8:	6b400094 	ori	r13,r13,2
   49dbc:	00800084 	movi	r2,2
   49dc0:	003d2506 	br	49258 <___vfiprintf_internal_r+0x548>
   49dc4:	25c00017 	ldw	r23,0(r4)
   49dc8:	0039883a 	mov	fp,zero
   49dcc:	d8c00415 	stw	r3,16(sp)
   49dd0:	0005883a 	mov	r2,zero
   49dd4:	003d2006 	br	49258 <___vfiprintf_internal_r+0x548>
   49dd8:	d9400117 	ldw	r5,4(sp)
   49ddc:	d9000415 	stw	r4,16(sp)
   49de0:	2805d7fa 	srai	r2,r5,31
   49de4:	19400015 	stw	r5,0(r3)
   49de8:	18800115 	stw	r2,4(r3)
   49dec:	003bf106 	br	48db4 <___vfiprintf_internal_r+0xa4>
   49df0:	2dc00017 	ldw	r23,0(r5)
   49df4:	0039883a 	mov	fp,zero
   49df8:	d9000415 	stw	r4,16(sp)
   49dfc:	003dc106 	br	49504 <___vfiprintf_internal_r+0x7f4>
   49e00:	25c00017 	ldw	r23,0(r4)
   49e04:	0039883a 	mov	fp,zero
   49e08:	d8c00415 	stw	r3,16(sp)
   49e0c:	00800044 	movi	r2,1
   49e10:	003d1106 	br	49258 <___vfiprintf_internal_r+0x548>
   49e14:	d8800984 	addi	r2,sp,38
   49e18:	d8801715 	stw	r2,92(sp)
   49e1c:	00800084 	movi	r2,2
   49e20:	d8801815 	stw	r2,96(sp)
   49e24:	dc001904 	addi	r16,sp,100
   49e28:	01000044 	movi	r4,1
   49e2c:	003f4006 	br	49b30 <___vfiprintf_internal_r+0xe20>
   49e30:	0463c83a 	sub	r17,zero,r17
   49e34:	d8c00415 	stw	r3,16(sp)
   49e38:	003e3806 	br	4971c <___vfiprintf_internal_r+0xa0c>
   49e3c:	9809883a 	mov	r4,r19
   49e40:	d8c00215 	stw	r3,8(sp)
   49e44:	db400015 	stw	r13,0(sp)
   49e48:	0042cf40 	call	42cf4 <strlen>
   49e4c:	d8c00217 	ldw	r3,8(sp)
   49e50:	db400017 	ldw	r13,0(sp)
   49e54:	1039883a 	mov	fp,r2
   49e58:	102f883a 	mov	r23,r2
   49e5c:	d8c00415 	stw	r3,16(sp)
   49e60:	003c6406 	br	48ff4 <___vfiprintf_internal_r+0x2e4>
   49e64:	d8c00947 	ldb	r3,37(sp)
   49e68:	18004326 	beq	r3,zero,49f78 <___vfiprintf_internal_r+0x1268>
   49e6c:	d8800944 	addi	r2,sp,37
   49e70:	d8801715 	stw	r2,92(sp)
   49e74:	00800044 	movi	r2,1
   49e78:	d8801815 	stw	r2,96(sp)
   49e7c:	d9801904 	addi	r6,sp,100
   49e80:	01400044 	movi	r5,1
   49e84:	003c7606 	br	49060 <___vfiprintf_internal_r+0x350>
   49e88:	d8800117 	ldw	r2,4(sp)
   49e8c:	18800015 	stw	r2,0(r3)
   49e90:	d9000415 	stw	r4,16(sp)
   49e94:	003bc706 	br	48db4 <___vfiprintf_internal_r+0xa4>
   49e98:	00c00044 	movi	r3,1
   49e9c:	e005883a 	mov	r2,fp
   49ea0:	dcc01715 	stw	r19,92(sp)
   49ea4:	df001815 	stw	fp,96(sp)
   49ea8:	df000c15 	stw	fp,48(sp)
   49eac:	d8c00b15 	stw	r3,44(sp)
   49eb0:	d9801904 	addi	r6,sp,100
   49eb4:	003c9a06 	br	49120 <___vfiprintf_internal_r+0x410>
   49eb8:	a0800043 	ldbu	r2,1(r20)
   49ebc:	6b400814 	ori	r13,r13,32
   49ec0:	a5000044 	addi	r20,r20,1
   49ec4:	10803fcc 	andi	r2,r2,255
   49ec8:	1080201c 	xori	r2,r2,128
   49ecc:	10bfe004 	addi	r2,r2,-128
   49ed0:	003bd006 	br	48e14 <___vfiprintf_internal_r+0x104>
   49ed4:	408001f0 	cmpltui	r2,r8,7
   49ed8:	4039883a 	mov	fp,r8
   49edc:	10002426 	beq	r2,zero,49f70 <___vfiprintf_internal_r+0x1260>
   49ee0:	04c00174 	movhi	r19,5
   49ee4:	e02f883a 	mov	r23,fp
   49ee8:	d8c00415 	stw	r3,16(sp)
   49eec:	9cc3e404 	addi	r19,r19,3984
   49ef0:	003c4006 	br	48ff4 <___vfiprintf_internal_r+0x2e4>
   49ef4:	d8c00417 	ldw	r3,16(sp)
   49ef8:	0039883a 	mov	fp,zero
   49efc:	d9000415 	stw	r4,16(sp)
   49f00:	1dc00017 	ldw	r23,0(r3)
   49f04:	003d7f06 	br	49504 <___vfiprintf_internal_r+0x7f4>
   49f08:	d8800417 	ldw	r2,16(sp)
   49f0c:	0039883a 	mov	fp,zero
   49f10:	d8c00415 	stw	r3,16(sp)
   49f14:	15c00017 	ldw	r23,0(r2)
   49f18:	0005883a 	mov	r2,zero
   49f1c:	003cce06 	br	49258 <___vfiprintf_internal_r+0x548>
   49f20:	d8800417 	ldw	r2,16(sp)
   49f24:	d8c00415 	stw	r3,16(sp)
   49f28:	15c00017 	ldw	r23,0(r2)
   49f2c:	b839d7fa 	srai	fp,r23,31
   49f30:	e005883a 	mov	r2,fp
   49f34:	003d5106 	br	4947c <___vfiprintf_internal_r+0x76c>
   49f38:	d8800417 	ldw	r2,16(sp)
   49f3c:	0039883a 	mov	fp,zero
   49f40:	d8c00415 	stw	r3,16(sp)
   49f44:	15c00017 	ldw	r23,0(r2)
   49f48:	00800044 	movi	r2,1
   49f4c:	003cc206 	br	49258 <___vfiprintf_internal_r+0x548>
   49f50:	3009883a 	mov	r4,r6
   49f54:	39c46104 	addi	r7,r7,4484
   49f58:	003ead06 	br	49a10 <___vfiprintf_internal_r+0xd00>
   49f5c:	d9801904 	addi	r6,sp,100
   49f60:	01400044 	movi	r5,1
   49f64:	0009883a 	mov	r4,zero
   49f68:	9021883a 	mov	r16,r18
   49f6c:	003c5b06 	br	490dc <___vfiprintf_internal_r+0x3cc>
   49f70:	07000184 	movi	fp,6
   49f74:	003fda06 	br	49ee0 <___vfiprintf_internal_r+0x11d0>
   49f78:	703ee51e 	bne	r14,zero,49b10 <___vfiprintf_internal_r+0xe00>
   49f7c:	0009883a 	mov	r4,zero
   49f80:	d9801904 	addi	r6,sp,100
   49f84:	01400044 	movi	r5,1
   49f88:	9021883a 	mov	r16,r18
   49f8c:	003c5306 	br	490dc <___vfiprintf_internal_r+0x3cc>
   49f90:	d9800945 	stb	r6,37(sp)
   49f94:	003c1106 	br	48fdc <___vfiprintf_internal_r+0x2cc>
   49f98:	d9800a04 	addi	r6,sp,40
   49f9c:	a80b883a 	mov	r5,r21
   49fa0:	b009883a 	mov	r4,r22
   49fa4:	0048c040 	call	48c04 <__sprint_r.part.0>
   49fa8:	003c6e06 	br	49164 <___vfiprintf_internal_r+0x454>
   49fac:	db400017 	ldw	r13,0(sp)
   49fb0:	003d3f06 	br	494b0 <___vfiprintf_internal_r+0x7a0>
   49fb4:	402f883a 	mov	r23,r8
   49fb8:	d8c00415 	stw	r3,16(sp)
   49fbc:	4039883a 	mov	fp,r8
   49fc0:	003c0c06 	br	48ff4 <___vfiprintf_internal_r+0x2e4>
   49fc4:	d9800945 	stb	r6,37(sp)
   49fc8:	003d2406 	br	4945c <___vfiprintf_internal_r+0x74c>
   49fcc:	d9800945 	stb	r6,37(sp)
   49fd0:	003d4206 	br	494dc <___vfiprintf_internal_r+0x7cc>
   49fd4:	d9800945 	stb	r6,37(sp)
   49fd8:	003d7a06 	br	495c4 <___vfiprintf_internal_r+0x8b4>
   49fdc:	303f883a 	mov	ra,r6
   49fe0:	39c46504 	addi	r7,r7,4500
   49fe4:	003f2006 	br	49c68 <___vfiprintf_internal_r+0xf58>
   49fe8:	d9800945 	stb	r6,37(sp)
   49fec:	003df806 	br	497d0 <___vfiprintf_internal_r+0xac0>
   49ff0:	d9800945 	stb	r6,37(sp)
   49ff4:	003e0806 	br	49818 <___vfiprintf_internal_r+0xb08>
   49ff8:	21400044 	addi	r5,r4,1
   49ffc:	39c46504 	addi	r7,r7,4500
   4a000:	003d0306 	br	49410 <___vfiprintf_internal_r+0x700>
   4a004:	00bfffc4 	movi	r2,-1
   4a008:	d8800115 	stw	r2,4(sp)
   4a00c:	003c5806 	br	49170 <___vfiprintf_internal_r+0x460>
   4a010:	01c00174 	movhi	r7,5
   4a014:	301b883a 	mov	r13,r6
   4a018:	281d883a 	mov	r14,r5
   4a01c:	39c46104 	addi	r7,r7,4484
   4a020:	003e3e06 	br	4991c <___vfiprintf_internal_r+0xc0c>
   4a024:	d8800417 	ldw	r2,16(sp)
   4a028:	12000017 	ldw	r8,0(r2)
   4a02c:	11000104 	addi	r4,r2,4
   4a030:	4000010e 	bge	r8,zero,4a038 <___vfiprintf_internal_r+0x1328>
   4a034:	023fffc4 	movi	r8,-1
   4a038:	a0800043 	ldbu	r2,1(r20)
   4a03c:	d9000415 	stw	r4,16(sp)
   4a040:	1829883a 	mov	r20,r3
   4a044:	10803fcc 	andi	r2,r2,255
   4a048:	1080201c 	xori	r2,r2,128
   4a04c:	10bfe004 	addi	r2,r2,-128
   4a050:	003b7006 	br	48e14 <___vfiprintf_internal_r+0x104>

0004a054 <__vfiprintf_internal>:
   4a054:	00c00174 	movhi	r3,5
   4a058:	2005883a 	mov	r2,r4
   4a05c:	190c6317 	ldw	r4,12684(r3)
   4a060:	300f883a 	mov	r7,r6
   4a064:	280d883a 	mov	r6,r5
   4a068:	100b883a 	mov	r5,r2
   4a06c:	0048d101 	jmpi	48d10 <___vfiprintf_internal_r>

0004a070 <__sbprintf>:
   4a070:	2880030b 	ldhu	r2,12(r5)
   4a074:	2b001917 	ldw	r12,100(r5)
   4a078:	2ac0038b 	ldhu	r11,14(r5)
   4a07c:	2a800717 	ldw	r10,28(r5)
   4a080:	2a400917 	ldw	r9,36(r5)
   4a084:	defee204 	addi	sp,sp,-1144
   4a088:	da001a04 	addi	r8,sp,104
   4a08c:	00c10004 	movi	r3,1024
   4a090:	dc011a15 	stw	r16,1128(sp)
   4a094:	10bfff4c 	andi	r2,r2,65533
   4a098:	2821883a 	mov	r16,r5
   4a09c:	d80b883a 	mov	r5,sp
   4a0a0:	dc811c15 	stw	r18,1136(sp)
   4a0a4:	dc411b15 	stw	r17,1132(sp)
   4a0a8:	dfc11d15 	stw	ra,1140(sp)
   4a0ac:	2025883a 	mov	r18,r4
   4a0b0:	d880030d 	sth	r2,12(sp)
   4a0b4:	db001915 	stw	r12,100(sp)
   4a0b8:	dac0038d 	sth	r11,14(sp)
   4a0bc:	da800715 	stw	r10,28(sp)
   4a0c0:	da400915 	stw	r9,36(sp)
   4a0c4:	da000015 	stw	r8,0(sp)
   4a0c8:	da000415 	stw	r8,16(sp)
   4a0cc:	d8c00215 	stw	r3,8(sp)
   4a0d0:	d8c00515 	stw	r3,20(sp)
   4a0d4:	d8000615 	stw	zero,24(sp)
   4a0d8:	0048d100 	call	48d10 <___vfiprintf_internal_r>
   4a0dc:	1023883a 	mov	r17,r2
   4a0e0:	10000d0e 	bge	r2,zero,4a118 <__sbprintf+0xa8>
   4a0e4:	d880030b 	ldhu	r2,12(sp)
   4a0e8:	1080100c 	andi	r2,r2,64
   4a0ec:	10000326 	beq	r2,zero,4a0fc <__sbprintf+0x8c>
   4a0f0:	8080030b 	ldhu	r2,12(r16)
   4a0f4:	10801014 	ori	r2,r2,64
   4a0f8:	8080030d 	sth	r2,12(r16)
   4a0fc:	8805883a 	mov	r2,r17
   4a100:	dfc11d17 	ldw	ra,1140(sp)
   4a104:	dc811c17 	ldw	r18,1136(sp)
   4a108:	dc411b17 	ldw	r17,1132(sp)
   4a10c:	dc011a17 	ldw	r16,1128(sp)
   4a110:	dec11e04 	addi	sp,sp,1144
   4a114:	f800283a 	ret
   4a118:	d80b883a 	mov	r5,sp
   4a11c:	9009883a 	mov	r4,r18
   4a120:	004087c0 	call	4087c <_fflush_r>
   4a124:	103fef26 	beq	r2,zero,4a0e4 <__sbprintf+0x74>
   4a128:	047fffc4 	movi	r17,-1
   4a12c:	003fed06 	br	4a0e4 <__sbprintf+0x74>

0004a130 <__assert_func>:
   4a130:	00800174 	movhi	r2,5
   4a134:	120c6317 	ldw	r8,12684(r2)
   4a138:	defffc04 	addi	sp,sp,-16
   4a13c:	3807883a 	mov	r3,r7
   4a140:	3005883a 	mov	r2,r6
   4a144:	dfc00315 	stw	ra,12(sp)
   4a148:	42400317 	ldw	r9,12(r8)
   4a14c:	200f883a 	mov	r7,r4
   4a150:	2811883a 	mov	r8,r5
   4a154:	180d883a 	mov	r6,r3
   4a158:	10000a26 	beq	r2,zero,4a184 <__assert_func+0x54>
   4a15c:	00c00174 	movhi	r3,5
   4a160:	18c46904 	addi	r3,r3,4516
   4a164:	01400174 	movhi	r5,5
   4a168:	29446d04 	addi	r5,r5,4532
   4a16c:	4809883a 	mov	r4,r9
   4a170:	d8c00115 	stw	r3,4(sp)
   4a174:	da000015 	stw	r8,0(sp)
   4a178:	d8800215 	stw	r2,8(sp)
   4a17c:	004a28c0 	call	4a28c <fiprintf>
   4a180:	004a9540 	call	4a954 <abort>
   4a184:	00c00174 	movhi	r3,5
   4a188:	18c46c04 	addi	r3,r3,4528
   4a18c:	1805883a 	mov	r2,r3
   4a190:	003ff406 	br	4a164 <__assert_func+0x34>

0004a194 <__assert>:
   4a194:	deffff04 	addi	sp,sp,-4
   4a198:	300f883a 	mov	r7,r6
   4a19c:	000d883a 	mov	r6,zero
   4a1a0:	dfc00015 	stw	ra,0(sp)
   4a1a4:	004a1300 	call	4a130 <__assert_func>

0004a1a8 <_calloc_r>:
   4a1a8:	defffe04 	addi	sp,sp,-8
   4a1ac:	dc000015 	stw	r16,0(sp)
   4a1b0:	2021883a 	mov	r16,r4
   4a1b4:	2809883a 	mov	r4,r5
   4a1b8:	300b883a 	mov	r5,r6
   4a1bc:	dfc00115 	stw	ra,4(sp)
   4a1c0:	004bc540 	call	4bc54 <__mulsi3>
   4a1c4:	8009883a 	mov	r4,r16
   4a1c8:	100b883a 	mov	r5,r2
   4a1cc:	0041e740 	call	41e74 <_malloc_r>
   4a1d0:	1009883a 	mov	r4,r2
   4a1d4:	10000c26 	beq	r2,zero,4a208 <_calloc_r+0x60>
   4a1d8:	11bfff17 	ldw	r6,-4(r2)
   4a1dc:	00bfff04 	movi	r2,-4
   4a1e0:	308c703a 	and	r6,r6,r2
   4a1e4:	31bfff04 	addi	r6,r6,-4
   4a1e8:	30800968 	cmpgeui	r2,r6,37
   4a1ec:	1000151e 	bne	r2,zero,4a244 <_calloc_r+0x9c>
   4a1f0:	30800530 	cmpltui	r2,r6,20
   4a1f4:	10000926 	beq	r2,zero,4a21c <_calloc_r+0x74>
   4a1f8:	2005883a 	mov	r2,r4
   4a1fc:	10000015 	stw	zero,0(r2)
   4a200:	10000115 	stw	zero,4(r2)
   4a204:	10000215 	stw	zero,8(r2)
   4a208:	2005883a 	mov	r2,r4
   4a20c:	dfc00117 	ldw	ra,4(sp)
   4a210:	dc000017 	ldw	r16,0(sp)
   4a214:	dec00204 	addi	sp,sp,8
   4a218:	f800283a 	ret
   4a21c:	20000015 	stw	zero,0(r4)
   4a220:	20000115 	stw	zero,4(r4)
   4a224:	30800728 	cmpgeui	r2,r6,28
   4a228:	10000a26 	beq	r2,zero,4a254 <_calloc_r+0xac>
   4a22c:	20000215 	stw	zero,8(r4)
   4a230:	20000315 	stw	zero,12(r4)
   4a234:	31800920 	cmpeqi	r6,r6,36
   4a238:	3000081e 	bne	r6,zero,4a25c <_calloc_r+0xb4>
   4a23c:	20800404 	addi	r2,r4,16
   4a240:	003fee06 	br	4a1fc <_calloc_r+0x54>
   4a244:	000b883a 	mov	r5,zero
   4a248:	00426540 	call	42654 <memset>
   4a24c:	1009883a 	mov	r4,r2
   4a250:	003fed06 	br	4a208 <_calloc_r+0x60>
   4a254:	20800204 	addi	r2,r4,8
   4a258:	003fe806 	br	4a1fc <_calloc_r+0x54>
   4a25c:	20000415 	stw	zero,16(r4)
   4a260:	20800604 	addi	r2,r4,24
   4a264:	20000515 	stw	zero,20(r4)
   4a268:	003fe406 	br	4a1fc <_calloc_r+0x54>

0004a26c <_fiprintf_r>:
   4a26c:	defffe04 	addi	sp,sp,-8
   4a270:	dfc00015 	stw	ra,0(sp)
   4a274:	d9c00115 	stw	r7,4(sp)
   4a278:	d9c00104 	addi	r7,sp,4
   4a27c:	004a6c00 	call	4a6c0 <_vfiprintf_r>
   4a280:	dfc00017 	ldw	ra,0(sp)
   4a284:	dec00204 	addi	sp,sp,8
   4a288:	f800283a 	ret

0004a28c <fiprintf>:
   4a28c:	defffd04 	addi	sp,sp,-12
   4a290:	2005883a 	mov	r2,r4
   4a294:	dfc00015 	stw	ra,0(sp)
   4a298:	d9800115 	stw	r6,4(sp)
   4a29c:	d9c00215 	stw	r7,8(sp)
   4a2a0:	00c00174 	movhi	r3,5
   4a2a4:	190c6317 	ldw	r4,12684(r3)
   4a2a8:	280d883a 	mov	r6,r5
   4a2ac:	d9c00104 	addi	r7,sp,4
   4a2b0:	100b883a 	mov	r5,r2
   4a2b4:	004a6c00 	call	4a6c0 <_vfiprintf_r>
   4a2b8:	dfc00017 	ldw	ra,0(sp)
   4a2bc:	dec00304 	addi	sp,sp,12
   4a2c0:	f800283a 	ret

0004a2c4 <__fputwc>:
   4a2c4:	defff904 	addi	sp,sp,-28
   4a2c8:	dcc00415 	stw	r19,16(sp)
   4a2cc:	dc800315 	stw	r18,12(sp)
   4a2d0:	dc000115 	stw	r16,4(sp)
   4a2d4:	dfc00615 	stw	ra,24(sp)
   4a2d8:	dd000515 	stw	r20,20(sp)
   4a2dc:	dc400215 	stw	r17,8(sp)
   4a2e0:	2025883a 	mov	r18,r4
   4a2e4:	2827883a 	mov	r19,r5
   4a2e8:	3021883a 	mov	r16,r6
   4a2ec:	004a5380 	call	4a538 <__locale_mb_cur_max>
   4a2f0:	10800058 	cmpnei	r2,r2,1
   4a2f4:	1000071e 	bne	r2,zero,4a314 <__fputwc+0x50>
   4a2f8:	98bfffc4 	addi	r2,r19,-1
   4a2fc:	10803fe8 	cmpgeui	r2,r2,255
   4a300:	1000041e 	bne	r2,zero,4a314 <__fputwc+0x50>
   4a304:	980b883a 	mov	r5,r19
   4a308:	dcc000c5 	stb	r19,3(sp)
   4a30c:	05000044 	movi	r20,1
   4a310:	00000a06 	br	4a33c <__fputwc+0x78>
   4a314:	81c01704 	addi	r7,r16,92
   4a318:	980d883a 	mov	r6,r19
   4a31c:	d94000c4 	addi	r5,sp,3
   4a320:	9009883a 	mov	r4,r18
   4a324:	004a8240 	call	4a824 <_wcrtomb_r>
   4a328:	1029883a 	mov	r20,r2
   4a32c:	10bfffd8 	cmpnei	r2,r2,-1
   4a330:	10003926 	beq	r2,zero,4a418 <__fputwc+0x154>
   4a334:	a0001f26 	beq	r20,zero,4a3b4 <__fputwc+0xf0>
   4a338:	d94000c3 	ldbu	r5,3(sp)
   4a33c:	0023883a 	mov	r17,zero
   4a340:	00000a06 	br	4a36c <__fputwc+0xa8>
   4a344:	80800017 	ldw	r2,0(r16)
   4a348:	11400005 	stb	r5,0(r2)
   4a34c:	80c00017 	ldw	r3,0(r16)
   4a350:	18c00044 	addi	r3,r3,1
   4a354:	80c00015 	stw	r3,0(r16)
   4a358:	8c400044 	addi	r17,r17,1
   4a35c:	d88000c4 	addi	r2,sp,3
   4a360:	1447883a 	add	r3,r2,r17
   4a364:	8d00132e 	bgeu	r17,r20,4a3b4 <__fputwc+0xf0>
   4a368:	19400003 	ldbu	r5,0(r3)
   4a36c:	80c00217 	ldw	r3,8(r16)
   4a370:	18ffffc4 	addi	r3,r3,-1
   4a374:	80c00215 	stw	r3,8(r16)
   4a378:	183ff20e 	bge	r3,zero,4a344 <__fputwc+0x80>
   4a37c:	80800617 	ldw	r2,24(r16)
   4a380:	18801616 	blt	r3,r2,4a3dc <__fputwc+0x118>
   4a384:	80800017 	ldw	r2,0(r16)
   4a388:	11400005 	stb	r5,0(r2)
   4a38c:	80800017 	ldw	r2,0(r16)
   4a390:	10c00003 	ldbu	r3,0(r2)
   4a394:	10800044 	addi	r2,r2,1
   4a398:	18c002a0 	cmpeqi	r3,r3,10
   4a39c:	1800171e 	bne	r3,zero,4a3fc <__fputwc+0x138>
   4a3a0:	80800015 	stw	r2,0(r16)
   4a3a4:	8c400044 	addi	r17,r17,1
   4a3a8:	d88000c4 	addi	r2,sp,3
   4a3ac:	1447883a 	add	r3,r2,r17
   4a3b0:	8d3fed36 	bltu	r17,r20,4a368 <__fputwc+0xa4>
   4a3b4:	9829883a 	mov	r20,r19
   4a3b8:	a005883a 	mov	r2,r20
   4a3bc:	dfc00617 	ldw	ra,24(sp)
   4a3c0:	dd000517 	ldw	r20,20(sp)
   4a3c4:	dcc00417 	ldw	r19,16(sp)
   4a3c8:	dc800317 	ldw	r18,12(sp)
   4a3cc:	dc400217 	ldw	r17,8(sp)
   4a3d0:	dc000117 	ldw	r16,4(sp)
   4a3d4:	dec00704 	addi	sp,sp,28
   4a3d8:	f800283a 	ret
   4a3dc:	29403fcc 	andi	r5,r5,255
   4a3e0:	800d883a 	mov	r6,r16
   4a3e4:	9009883a 	mov	r4,r18
   4a3e8:	004a6c40 	call	4a6c4 <__swbuf_r>
   4a3ec:	10bfffe0 	cmpeqi	r2,r2,-1
   4a3f0:	103fd926 	beq	r2,zero,4a358 <__fputwc+0x94>
   4a3f4:	053fffc4 	movi	r20,-1
   4a3f8:	003fef06 	br	4a3b8 <__fputwc+0xf4>
   4a3fc:	800d883a 	mov	r6,r16
   4a400:	01400284 	movi	r5,10
   4a404:	9009883a 	mov	r4,r18
   4a408:	004a6c40 	call	4a6c4 <__swbuf_r>
   4a40c:	10bfffe0 	cmpeqi	r2,r2,-1
   4a410:	103fd126 	beq	r2,zero,4a358 <__fputwc+0x94>
   4a414:	003ff706 	br	4a3f4 <__fputwc+0x130>
   4a418:	8080030b 	ldhu	r2,12(r16)
   4a41c:	10801014 	ori	r2,r2,64
   4a420:	8080030d 	sth	r2,12(r16)
   4a424:	003fe406 	br	4a3b8 <__fputwc+0xf4>

0004a428 <_fputwc_r>:
   4a428:	3080030b 	ldhu	r2,12(r6)
   4a42c:	10c8000c 	andi	r3,r2,8192
   4a430:	1800051e 	bne	r3,zero,4a448 <_fputwc_r+0x20>
   4a434:	30c01917 	ldw	r3,100(r6)
   4a438:	10880014 	ori	r2,r2,8192
   4a43c:	3080030d 	sth	r2,12(r6)
   4a440:	18880014 	ori	r2,r3,8192
   4a444:	30801915 	stw	r2,100(r6)
   4a448:	004a2c41 	jmpi	4a2c4 <__fputwc>

0004a44c <fputwc>:
   4a44c:	defffc04 	addi	sp,sp,-16
   4a450:	00800174 	movhi	r2,5
   4a454:	dc000215 	stw	r16,8(sp)
   4a458:	140c6317 	ldw	r16,12684(r2)
   4a45c:	dfc00315 	stw	ra,12(sp)
   4a460:	280d883a 	mov	r6,r5
   4a464:	200b883a 	mov	r5,r4
   4a468:	80000226 	beq	r16,zero,4a474 <fputwc+0x28>
   4a46c:	80800e17 	ldw	r2,56(r16)
   4a470:	10000d26 	beq	r2,zero,4a4a8 <fputwc+0x5c>
   4a474:	3080030b 	ldhu	r2,12(r6)
   4a478:	10c8000c 	andi	r3,r2,8192
   4a47c:	1800051e 	bne	r3,zero,4a494 <fputwc+0x48>
   4a480:	30c01917 	ldw	r3,100(r6)
   4a484:	10880014 	ori	r2,r2,8192
   4a488:	3080030d 	sth	r2,12(r6)
   4a48c:	18880014 	ori	r2,r3,8192
   4a490:	30801915 	stw	r2,100(r6)
   4a494:	8009883a 	mov	r4,r16
   4a498:	dfc00317 	ldw	ra,12(sp)
   4a49c:	dc000217 	ldw	r16,8(sp)
   4a4a0:	dec00404 	addi	sp,sp,16
   4a4a4:	004a2c41 	jmpi	4a2c4 <__fputwc>
   4a4a8:	d9000015 	stw	r4,0(sp)
   4a4ac:	8009883a 	mov	r4,r16
   4a4b0:	d9800115 	stw	r6,4(sp)
   4a4b4:	0040cc40 	call	40cc4 <__sinit>
   4a4b8:	d9800117 	ldw	r6,4(sp)
   4a4bc:	d9400017 	ldw	r5,0(sp)
   4a4c0:	003fec06 	br	4a474 <fputwc+0x28>

0004a4c4 <_setlocale_r>:
   4a4c4:	30001626 	beq	r6,zero,4a520 <_setlocale_r+0x5c>
   4a4c8:	01400174 	movhi	r5,5
   4a4cc:	defffe04 	addi	sp,sp,-8
   4a4d0:	29447a04 	addi	r5,r5,4584
   4a4d4:	3009883a 	mov	r4,r6
   4a4d8:	dc000015 	stw	r16,0(sp)
   4a4dc:	dfc00115 	stw	ra,4(sp)
   4a4e0:	3021883a 	mov	r16,r6
   4a4e4:	004a6080 	call	4a608 <strcmp>
   4a4e8:	1000061e 	bne	r2,zero,4a504 <_setlocale_r+0x40>
   4a4ec:	00800174 	movhi	r2,5
   4a4f0:	10847904 	addi	r2,r2,4580
   4a4f4:	dfc00117 	ldw	ra,4(sp)
   4a4f8:	dc000017 	ldw	r16,0(sp)
   4a4fc:	dec00204 	addi	sp,sp,8
   4a500:	f800283a 	ret
   4a504:	80800003 	ldbu	r2,0(r16)
   4a508:	10bfef44 	addi	r2,r2,-67
   4a50c:	10000726 	beq	r2,zero,4a52c <_setlocale_r+0x68>
   4a510:	80800003 	ldbu	r2,0(r16)
   4a514:	103ff526 	beq	r2,zero,4a4ec <_setlocale_r+0x28>
   4a518:	0005883a 	mov	r2,zero
   4a51c:	003ff506 	br	4a4f4 <_setlocale_r+0x30>
   4a520:	00800174 	movhi	r2,5
   4a524:	10847904 	addi	r2,r2,4580
   4a528:	f800283a 	ret
   4a52c:	80800043 	ldbu	r2,1(r16)
   4a530:	103fee26 	beq	r2,zero,4a4ec <_setlocale_r+0x28>
   4a534:	003ff606 	br	4a510 <_setlocale_r+0x4c>

0004a538 <__locale_mb_cur_max>:
   4a538:	00800174 	movhi	r2,5
   4a53c:	1087c407 	ldb	r2,7952(r2)
   4a540:	f800283a 	ret

0004a544 <setlocale>:
   4a544:	28001626 	beq	r5,zero,4a5a0 <setlocale+0x5c>
   4a548:	defffe04 	addi	sp,sp,-8
   4a54c:	dc000015 	stw	r16,0(sp)
   4a550:	2821883a 	mov	r16,r5
   4a554:	01400174 	movhi	r5,5
   4a558:	29447a04 	addi	r5,r5,4584
   4a55c:	8009883a 	mov	r4,r16
   4a560:	dfc00115 	stw	ra,4(sp)
   4a564:	004a6080 	call	4a608 <strcmp>
   4a568:	1000061e 	bne	r2,zero,4a584 <setlocale+0x40>
   4a56c:	00800174 	movhi	r2,5
   4a570:	10847904 	addi	r2,r2,4580
   4a574:	dfc00117 	ldw	ra,4(sp)
   4a578:	dc000017 	ldw	r16,0(sp)
   4a57c:	dec00204 	addi	sp,sp,8
   4a580:	f800283a 	ret
   4a584:	80800003 	ldbu	r2,0(r16)
   4a588:	10bfef44 	addi	r2,r2,-67
   4a58c:	10000726 	beq	r2,zero,4a5ac <setlocale+0x68>
   4a590:	80800003 	ldbu	r2,0(r16)
   4a594:	103ff526 	beq	r2,zero,4a56c <setlocale+0x28>
   4a598:	0005883a 	mov	r2,zero
   4a59c:	003ff506 	br	4a574 <setlocale+0x30>
   4a5a0:	00800174 	movhi	r2,5
   4a5a4:	10847904 	addi	r2,r2,4580
   4a5a8:	f800283a 	ret
   4a5ac:	80800043 	ldbu	r2,1(r16)
   4a5b0:	103fee26 	beq	r2,zero,4a56c <setlocale+0x28>
   4a5b4:	003ff606 	br	4a590 <setlocale+0x4c>

0004a5b8 <_mbtowc_r>:
   4a5b8:	00800174 	movhi	r2,5
   4a5bc:	1087b317 	ldw	r2,7884(r2)
   4a5c0:	1000683a 	jmp	r2

0004a5c4 <__ascii_mbtowc>:
   4a5c4:	deffff04 	addi	sp,sp,-4
   4a5c8:	28000826 	beq	r5,zero,4a5ec <__ascii_mbtowc+0x28>
   4a5cc:	30000926 	beq	r6,zero,4a5f4 <__ascii_mbtowc+0x30>
   4a5d0:	38000b26 	beq	r7,zero,4a600 <__ascii_mbtowc+0x3c>
   4a5d4:	30800003 	ldbu	r2,0(r6)
   4a5d8:	28800015 	stw	r2,0(r5)
   4a5dc:	30800003 	ldbu	r2,0(r6)
   4a5e0:	1004c03a 	cmpne	r2,r2,zero
   4a5e4:	dec00104 	addi	sp,sp,4
   4a5e8:	f800283a 	ret
   4a5ec:	d80b883a 	mov	r5,sp
   4a5f0:	303ff71e 	bne	r6,zero,4a5d0 <__ascii_mbtowc+0xc>
   4a5f4:	0005883a 	mov	r2,zero
   4a5f8:	dec00104 	addi	sp,sp,4
   4a5fc:	f800283a 	ret
   4a600:	00bfff84 	movi	r2,-2
   4a604:	003ff706 	br	4a5e4 <__ascii_mbtowc+0x20>

0004a608 <strcmp>:
   4a608:	2144b03a 	or	r2,r4,r5
   4a60c:	108000cc 	andi	r2,r2,3
   4a610:	1000141e 	bne	r2,zero,4a664 <strcmp+0x5c>
   4a614:	20800017 	ldw	r2,0(r4)
   4a618:	28c00017 	ldw	r3,0(r5)
   4a61c:	10c0111e 	bne	r2,r3,4a664 <strcmp+0x5c>
   4a620:	01ffbff4 	movhi	r7,65279
   4a624:	01a02074 	movhi	r6,32897
   4a628:	39ffbfc4 	addi	r7,r7,-257
   4a62c:	31a02004 	addi	r6,r6,-32640
   4a630:	00000306 	br	4a640 <strcmp+0x38>
   4a634:	20800017 	ldw	r2,0(r4)
   4a638:	28c00017 	ldw	r3,0(r5)
   4a63c:	10c0091e 	bne	r2,r3,4a664 <strcmp+0x5c>
   4a640:	11c7883a 	add	r3,r2,r7
   4a644:	0084303a 	nor	r2,zero,r2
   4a648:	1884703a 	and	r2,r3,r2
   4a64c:	1184703a 	and	r2,r2,r6
   4a650:	21000104 	addi	r4,r4,4
   4a654:	29400104 	addi	r5,r5,4
   4a658:	103ff626 	beq	r2,zero,4a634 <strcmp+0x2c>
   4a65c:	0005883a 	mov	r2,zero
   4a660:	f800283a 	ret
   4a664:	20c00003 	ldbu	r3,0(r4)
   4a668:	18803fcc 	andi	r2,r3,255
   4a66c:	1080201c 	xori	r2,r2,128
   4a670:	10bfe004 	addi	r2,r2,-128
   4a674:	1000071e 	bne	r2,zero,4a694 <strcmp+0x8c>
   4a678:	00000a06 	br	4a6a4 <strcmp+0x9c>
   4a67c:	20c00003 	ldbu	r3,0(r4)
   4a680:	29400044 	addi	r5,r5,1
   4a684:	18803fcc 	andi	r2,r3,255
   4a688:	1080201c 	xori	r2,r2,128
   4a68c:	10bfe004 	addi	r2,r2,-128
   4a690:	10000726 	beq	r2,zero,4a6b0 <strcmp+0xa8>
   4a694:	29800007 	ldb	r6,0(r5)
   4a698:	21000044 	addi	r4,r4,1
   4a69c:	30bff726 	beq	r6,r2,4a67c <strcmp+0x74>
   4a6a0:	18803fcc 	andi	r2,r3,255
   4a6a4:	28c00003 	ldbu	r3,0(r5)
   4a6a8:	10c5c83a 	sub	r2,r2,r3
   4a6ac:	f800283a 	ret
   4a6b0:	28c00003 	ldbu	r3,0(r5)
   4a6b4:	0005883a 	mov	r2,zero
   4a6b8:	10c5c83a 	sub	r2,r2,r3
   4a6bc:	f800283a 	ret

0004a6c0 <_vfiprintf_r>:
   4a6c0:	0048d101 	jmpi	48d10 <___vfiprintf_internal_r>

0004a6c4 <__swbuf_r>:
   4a6c4:	defffb04 	addi	sp,sp,-20
   4a6c8:	dcc00315 	stw	r19,12(sp)
   4a6cc:	dc400115 	stw	r17,4(sp)
   4a6d0:	dc000015 	stw	r16,0(sp)
   4a6d4:	dfc00415 	stw	ra,16(sp)
   4a6d8:	dc800215 	stw	r18,8(sp)
   4a6dc:	2027883a 	mov	r19,r4
   4a6e0:	2823883a 	mov	r17,r5
   4a6e4:	3021883a 	mov	r16,r6
   4a6e8:	20000226 	beq	r4,zero,4a6f4 <__swbuf_r+0x30>
   4a6ec:	20800e17 	ldw	r2,56(r4)
   4a6f0:	10003e26 	beq	r2,zero,4a7ec <__swbuf_r+0x128>
   4a6f4:	80800617 	ldw	r2,24(r16)
   4a6f8:	80c0030b 	ldhu	r3,12(r16)
   4a6fc:	80800215 	stw	r2,8(r16)
   4a700:	1880020c 	andi	r2,r3,8
   4a704:	10001f26 	beq	r2,zero,4a784 <__swbuf_r+0xc0>
   4a708:	80800417 	ldw	r2,16(r16)
   4a70c:	10001d26 	beq	r2,zero,4a784 <__swbuf_r+0xc0>
   4a710:	1948000c 	andi	r5,r3,8192
   4a714:	8c803fcc 	andi	r18,r17,255
   4a718:	28002326 	beq	r5,zero,4a7a8 <__swbuf_r+0xe4>
   4a71c:	80c00017 	ldw	r3,0(r16)
   4a720:	81000517 	ldw	r4,20(r16)
   4a724:	1885c83a 	sub	r2,r3,r2
   4a728:	1100290e 	bge	r2,r4,4a7d0 <__swbuf_r+0x10c>
   4a72c:	10800044 	addi	r2,r2,1
   4a730:	81400217 	ldw	r5,8(r16)
   4a734:	19000044 	addi	r4,r3,1
   4a738:	81000015 	stw	r4,0(r16)
   4a73c:	297fffc4 	addi	r5,r5,-1
   4a740:	81400215 	stw	r5,8(r16)
   4a744:	1c400005 	stb	r17,0(r3)
   4a748:	80c00517 	ldw	r3,20(r16)
   4a74c:	18802926 	beq	r3,r2,4a7f4 <__swbuf_r+0x130>
   4a750:	8080030b 	ldhu	r2,12(r16)
   4a754:	1080004c 	andi	r2,r2,1
   4a758:	10000226 	beq	r2,zero,4a764 <__swbuf_r+0xa0>
   4a75c:	90800298 	cmpnei	r2,r18,10
   4a760:	10002426 	beq	r2,zero,4a7f4 <__swbuf_r+0x130>
   4a764:	9005883a 	mov	r2,r18
   4a768:	dfc00417 	ldw	ra,16(sp)
   4a76c:	dcc00317 	ldw	r19,12(sp)
   4a770:	dc800217 	ldw	r18,8(sp)
   4a774:	dc400117 	ldw	r17,4(sp)
   4a778:	dc000017 	ldw	r16,0(sp)
   4a77c:	dec00504 	addi	sp,sp,20
   4a780:	f800283a 	ret
   4a784:	800b883a 	mov	r5,r16
   4a788:	9809883a 	mov	r4,r19
   4a78c:	0044fd00 	call	44fd0 <__swsetup_r>
   4a790:	10001c1e 	bne	r2,zero,4a804 <__swbuf_r+0x140>
   4a794:	80c0030b 	ldhu	r3,12(r16)
   4a798:	80800417 	ldw	r2,16(r16)
   4a79c:	8c803fcc 	andi	r18,r17,255
   4a7a0:	1948000c 	andi	r5,r3,8192
   4a7a4:	283fdd1e 	bne	r5,zero,4a71c <__swbuf_r+0x58>
   4a7a8:	81001917 	ldw	r4,100(r16)
   4a7ac:	18c80014 	ori	r3,r3,8192
   4a7b0:	0177ffc4 	movi	r5,-8193
   4a7b4:	2148703a 	and	r4,r4,r5
   4a7b8:	80c0030d 	sth	r3,12(r16)
   4a7bc:	80c00017 	ldw	r3,0(r16)
   4a7c0:	81001915 	stw	r4,100(r16)
   4a7c4:	81000517 	ldw	r4,20(r16)
   4a7c8:	1885c83a 	sub	r2,r3,r2
   4a7cc:	113fd716 	blt	r2,r4,4a72c <__swbuf_r+0x68>
   4a7d0:	800b883a 	mov	r5,r16
   4a7d4:	9809883a 	mov	r4,r19
   4a7d8:	004087c0 	call	4087c <_fflush_r>
   4a7dc:	1000091e 	bne	r2,zero,4a804 <__swbuf_r+0x140>
   4a7e0:	80c00017 	ldw	r3,0(r16)
   4a7e4:	00800044 	movi	r2,1
   4a7e8:	003fd106 	br	4a730 <__swbuf_r+0x6c>
   4a7ec:	0040cc40 	call	40cc4 <__sinit>
   4a7f0:	003fc006 	br	4a6f4 <__swbuf_r+0x30>
   4a7f4:	800b883a 	mov	r5,r16
   4a7f8:	9809883a 	mov	r4,r19
   4a7fc:	004087c0 	call	4087c <_fflush_r>
   4a800:	103fd826 	beq	r2,zero,4a764 <__swbuf_r+0xa0>
   4a804:	04bfffc4 	movi	r18,-1
   4a808:	003fd606 	br	4a764 <__swbuf_r+0xa0>

0004a80c <__swbuf>:
   4a80c:	00c00174 	movhi	r3,5
   4a810:	2005883a 	mov	r2,r4
   4a814:	190c6317 	ldw	r4,12684(r3)
   4a818:	280d883a 	mov	r6,r5
   4a81c:	100b883a 	mov	r5,r2
   4a820:	004a6c41 	jmpi	4a6c4 <__swbuf_r>

0004a824 <_wcrtomb_r>:
   4a824:	defffa04 	addi	sp,sp,-24
   4a828:	dc400415 	stw	r17,16(sp)
   4a82c:	dc000315 	stw	r16,12(sp)
   4a830:	00800174 	movhi	r2,5
   4a834:	dfc00515 	stw	ra,20(sp)
   4a838:	1087b217 	ldw	r2,7880(r2)
   4a83c:	2023883a 	mov	r17,r4
   4a840:	3821883a 	mov	r16,r7
   4a844:	28000826 	beq	r5,zero,4a868 <_wcrtomb_r+0x44>
   4a848:	103ee83a 	callr	r2
   4a84c:	10ffffd8 	cmpnei	r3,r2,-1
   4a850:	18000a26 	beq	r3,zero,4a87c <_wcrtomb_r+0x58>
   4a854:	dfc00517 	ldw	ra,20(sp)
   4a858:	dc400417 	ldw	r17,16(sp)
   4a85c:	dc000317 	ldw	r16,12(sp)
   4a860:	dec00604 	addi	sp,sp,24
   4a864:	f800283a 	ret
   4a868:	000d883a 	mov	r6,zero
   4a86c:	d9400084 	addi	r5,sp,2
   4a870:	103ee83a 	callr	r2
   4a874:	10ffffd8 	cmpnei	r3,r2,-1
   4a878:	183ff61e 	bne	r3,zero,4a854 <_wcrtomb_r+0x30>
   4a87c:	00802284 	movi	r2,138
   4a880:	80000015 	stw	zero,0(r16)
   4a884:	88800015 	stw	r2,0(r17)
   4a888:	00bfffc4 	movi	r2,-1
   4a88c:	003ff106 	br	4a854 <_wcrtomb_r+0x30>

0004a890 <wcrtomb>:
   4a890:	defffa04 	addi	sp,sp,-24
   4a894:	00c00174 	movhi	r3,5
   4a898:	dc400415 	stw	r17,16(sp)
   4a89c:	dc000315 	stw	r16,12(sp)
   4a8a0:	1c4c6317 	ldw	r17,12684(r3)
   4a8a4:	dfc00515 	stw	ra,20(sp)
   4a8a8:	00c00174 	movhi	r3,5
   4a8ac:	18c7b217 	ldw	r3,7880(r3)
   4a8b0:	3021883a 	mov	r16,r6
   4a8b4:	20000c26 	beq	r4,zero,4a8e8 <wcrtomb+0x58>
   4a8b8:	280d883a 	mov	r6,r5
   4a8bc:	800f883a 	mov	r7,r16
   4a8c0:	200b883a 	mov	r5,r4
   4a8c4:	8809883a 	mov	r4,r17
   4a8c8:	183ee83a 	callr	r3
   4a8cc:	10ffffd8 	cmpnei	r3,r2,-1
   4a8d0:	18000c26 	beq	r3,zero,4a904 <wcrtomb+0x74>
   4a8d4:	dfc00517 	ldw	ra,20(sp)
   4a8d8:	dc400417 	ldw	r17,16(sp)
   4a8dc:	dc000317 	ldw	r16,12(sp)
   4a8e0:	dec00604 	addi	sp,sp,24
   4a8e4:	f800283a 	ret
   4a8e8:	300f883a 	mov	r7,r6
   4a8ec:	d9400084 	addi	r5,sp,2
   4a8f0:	000d883a 	mov	r6,zero
   4a8f4:	8809883a 	mov	r4,r17
   4a8f8:	183ee83a 	callr	r3
   4a8fc:	10ffffd8 	cmpnei	r3,r2,-1
   4a900:	183ff41e 	bne	r3,zero,4a8d4 <wcrtomb+0x44>
   4a904:	00802284 	movi	r2,138
   4a908:	80000015 	stw	zero,0(r16)
   4a90c:	88800015 	stw	r2,0(r17)
   4a910:	00bfffc4 	movi	r2,-1
   4a914:	003fef06 	br	4a8d4 <wcrtomb+0x44>

0004a918 <_wctomb_r>:
   4a918:	00800174 	movhi	r2,5
   4a91c:	1087b217 	ldw	r2,7880(r2)
   4a920:	1000683a 	jmp	r2

0004a924 <__ascii_wctomb>:
   4a924:	28000926 	beq	r5,zero,4a94c <__ascii_wctomb+0x28>
   4a928:	30804030 	cmpltui	r2,r6,256
   4a92c:	10000326 	beq	r2,zero,4a93c <__ascii_wctomb+0x18>
   4a930:	29800005 	stb	r6,0(r5)
   4a934:	00800044 	movi	r2,1
   4a938:	f800283a 	ret
   4a93c:	00802284 	movi	r2,138
   4a940:	20800015 	stw	r2,0(r4)
   4a944:	00bfffc4 	movi	r2,-1
   4a948:	f800283a 	ret
   4a94c:	0005883a 	mov	r2,zero
   4a950:	f800283a 	ret

0004a954 <abort>:
   4a954:	deffff04 	addi	sp,sp,-4
   4a958:	01000184 	movi	r4,6
   4a95c:	dfc00015 	stw	ra,0(sp)
   4a960:	004abe00 	call	4abe0 <raise>
   4a964:	01000044 	movi	r4,1
   4a968:	004e5000 	call	4e500 <_exit>

0004a96c <_init_signal_r>:
   4a96c:	2080b717 	ldw	r2,732(r4)
   4a970:	10000226 	beq	r2,zero,4a97c <_init_signal_r+0x10>
   4a974:	0005883a 	mov	r2,zero
   4a978:	f800283a 	ret
   4a97c:	defffe04 	addi	sp,sp,-8
   4a980:	01402004 	movi	r5,128
   4a984:	dc000015 	stw	r16,0(sp)
   4a988:	dfc00115 	stw	ra,4(sp)
   4a98c:	2021883a 	mov	r16,r4
   4a990:	0041e740 	call	41e74 <_malloc_r>
   4a994:	8080b715 	stw	r2,732(r16)
   4a998:	1009883a 	mov	r4,r2
   4a99c:	10000826 	beq	r2,zero,4a9c0 <_init_signal_r+0x54>
   4a9a0:	01802004 	movi	r6,128
   4a9a4:	000b883a 	mov	r5,zero
   4a9a8:	00426540 	call	42654 <memset>
   4a9ac:	0005883a 	mov	r2,zero
   4a9b0:	dfc00117 	ldw	ra,4(sp)
   4a9b4:	dc000017 	ldw	r16,0(sp)
   4a9b8:	dec00204 	addi	sp,sp,8
   4a9bc:	f800283a 	ret
   4a9c0:	00bfffc4 	movi	r2,-1
   4a9c4:	003ffa06 	br	4a9b0 <_init_signal_r+0x44>

0004a9c8 <_signal_r>:
   4a9c8:	defffc04 	addi	sp,sp,-16
   4a9cc:	dc400115 	stw	r17,4(sp)
   4a9d0:	dfc00315 	stw	ra,12(sp)
   4a9d4:	dc800215 	stw	r18,8(sp)
   4a9d8:	dc000015 	stw	r16,0(sp)
   4a9dc:	28800830 	cmpltui	r2,r5,32
   4a9e0:	2023883a 	mov	r17,r4
   4a9e4:	10000e26 	beq	r2,zero,4aa20 <_signal_r+0x58>
   4a9e8:	20c0b717 	ldw	r3,732(r4)
   4a9ec:	2821883a 	mov	r16,r5
   4a9f0:	3025883a 	mov	r18,r6
   4a9f4:	18000e26 	beq	r3,zero,4aa30 <_signal_r+0x68>
   4a9f8:	802090ba 	slli	r16,r16,2
   4a9fc:	1c21883a 	add	r16,r3,r16
   4aa00:	80800017 	ldw	r2,0(r16)
   4aa04:	84800015 	stw	r18,0(r16)
   4aa08:	dfc00317 	ldw	ra,12(sp)
   4aa0c:	dc800217 	ldw	r18,8(sp)
   4aa10:	dc400117 	ldw	r17,4(sp)
   4aa14:	dc000017 	ldw	r16,0(sp)
   4aa18:	dec00404 	addi	sp,sp,16
   4aa1c:	f800283a 	ret
   4aa20:	00800584 	movi	r2,22
   4aa24:	20800015 	stw	r2,0(r4)
   4aa28:	00bfffc4 	movi	r2,-1
   4aa2c:	003ff606 	br	4aa08 <_signal_r+0x40>
   4aa30:	01402004 	movi	r5,128
   4aa34:	0041e740 	call	41e74 <_malloc_r>
   4aa38:	8880b715 	stw	r2,732(r17)
   4aa3c:	10000626 	beq	r2,zero,4aa58 <_signal_r+0x90>
   4aa40:	01802004 	movi	r6,128
   4aa44:	000b883a 	mov	r5,zero
   4aa48:	1009883a 	mov	r4,r2
   4aa4c:	00426540 	call	42654 <memset>
   4aa50:	1007883a 	mov	r3,r2
   4aa54:	003fe806 	br	4a9f8 <_signal_r+0x30>
   4aa58:	00bfffc4 	movi	r2,-1
   4aa5c:	003fea06 	br	4aa08 <_signal_r+0x40>

0004aa60 <_raise_r>:
   4aa60:	28800830 	cmpltui	r2,r5,32
   4aa64:	10002b26 	beq	r2,zero,4ab14 <_raise_r+0xb4>
   4aa68:	2080b717 	ldw	r2,732(r4)
   4aa6c:	defffd04 	addi	sp,sp,-12
   4aa70:	dc000115 	stw	r16,4(sp)
   4aa74:	dfc00215 	stw	ra,8(sp)
   4aa78:	2821883a 	mov	r16,r5
   4aa7c:	10001026 	beq	r2,zero,4aac0 <_raise_r+0x60>
   4aa80:	280690ba 	slli	r3,r5,2
   4aa84:	10c5883a 	add	r2,r2,r3
   4aa88:	10c00017 	ldw	r3,0(r2)
   4aa8c:	18000c26 	beq	r3,zero,4aac0 <_raise_r+0x60>
   4aa90:	19400060 	cmpeqi	r5,r3,1
   4aa94:	28001a1e 	bne	r5,zero,4ab00 <_raise_r+0xa0>
   4aa98:	197fffd8 	cmpnei	r5,r3,-1
   4aa9c:	28001126 	beq	r5,zero,4aae4 <_raise_r+0x84>
   4aaa0:	10000015 	stw	zero,0(r2)
   4aaa4:	8009883a 	mov	r4,r16
   4aaa8:	183ee83a 	callr	r3
   4aaac:	0005883a 	mov	r2,zero
   4aab0:	dfc00217 	ldw	ra,8(sp)
   4aab4:	dc000117 	ldw	r16,4(sp)
   4aab8:	dec00304 	addi	sp,sp,12
   4aabc:	f800283a 	ret
   4aac0:	d9000015 	stw	r4,0(sp)
   4aac4:	004aeb80 	call	4aeb8 <_getpid_r>
   4aac8:	d9000017 	ldw	r4,0(sp)
   4aacc:	800d883a 	mov	r6,r16
   4aad0:	100b883a 	mov	r5,r2
   4aad4:	dfc00217 	ldw	ra,8(sp)
   4aad8:	dc000117 	ldw	r16,4(sp)
   4aadc:	dec00304 	addi	sp,sp,12
   4aae0:	004ae581 	jmpi	4ae58 <_kill_r>
   4aae4:	00800584 	movi	r2,22
   4aae8:	20800015 	stw	r2,0(r4)
   4aaec:	00800044 	movi	r2,1
   4aaf0:	dfc00217 	ldw	ra,8(sp)
   4aaf4:	dc000117 	ldw	r16,4(sp)
   4aaf8:	dec00304 	addi	sp,sp,12
   4aafc:	f800283a 	ret
   4ab00:	0005883a 	mov	r2,zero
   4ab04:	dfc00217 	ldw	ra,8(sp)
   4ab08:	dc000117 	ldw	r16,4(sp)
   4ab0c:	dec00304 	addi	sp,sp,12
   4ab10:	f800283a 	ret
   4ab14:	00800584 	movi	r2,22
   4ab18:	20800015 	stw	r2,0(r4)
   4ab1c:	00bfffc4 	movi	r2,-1
   4ab20:	f800283a 	ret

0004ab24 <__sigtramp_r>:
   4ab24:	28800830 	cmpltui	r2,r5,32
   4ab28:	10002b26 	beq	r2,zero,4abd8 <__sigtramp_r+0xb4>
   4ab2c:	20c0b717 	ldw	r3,732(r4)
   4ab30:	defffd04 	addi	sp,sp,-12
   4ab34:	dc400115 	stw	r17,4(sp)
   4ab38:	dc000015 	stw	r16,0(sp)
   4ab3c:	dfc00215 	stw	ra,8(sp)
   4ab40:	2821883a 	mov	r16,r5
   4ab44:	2023883a 	mov	r17,r4
   4ab48:	18001326 	beq	r3,zero,4ab98 <__sigtramp_r+0x74>
   4ab4c:	800490ba 	slli	r2,r16,2
   4ab50:	1887883a 	add	r3,r3,r2
   4ab54:	18800017 	ldw	r2,0(r3)
   4ab58:	10000d26 	beq	r2,zero,4ab90 <__sigtramp_r+0x6c>
   4ab5c:	113fffe0 	cmpeqi	r4,r2,-1
   4ab60:	2000191e 	bne	r4,zero,4abc8 <__sigtramp_r+0xa4>
   4ab64:	11000060 	cmpeqi	r4,r2,1
   4ab68:	2000151e 	bne	r4,zero,4abc0 <__sigtramp_r+0x9c>
   4ab6c:	18000015 	stw	zero,0(r3)
   4ab70:	8009883a 	mov	r4,r16
   4ab74:	103ee83a 	callr	r2
   4ab78:	0005883a 	mov	r2,zero
   4ab7c:	dfc00217 	ldw	ra,8(sp)
   4ab80:	dc400117 	ldw	r17,4(sp)
   4ab84:	dc000017 	ldw	r16,0(sp)
   4ab88:	dec00304 	addi	sp,sp,12
   4ab8c:	f800283a 	ret
   4ab90:	00800044 	movi	r2,1
   4ab94:	003ff906 	br	4ab7c <__sigtramp_r+0x58>
   4ab98:	01402004 	movi	r5,128
   4ab9c:	0041e740 	call	41e74 <_malloc_r>
   4aba0:	8880b715 	stw	r2,732(r17)
   4aba4:	10000a26 	beq	r2,zero,4abd0 <__sigtramp_r+0xac>
   4aba8:	01802004 	movi	r6,128
   4abac:	000b883a 	mov	r5,zero
   4abb0:	1009883a 	mov	r4,r2
   4abb4:	00426540 	call	42654 <memset>
   4abb8:	1007883a 	mov	r3,r2
   4abbc:	003fe306 	br	4ab4c <__sigtramp_r+0x28>
   4abc0:	008000c4 	movi	r2,3
   4abc4:	003fed06 	br	4ab7c <__sigtramp_r+0x58>
   4abc8:	00800084 	movi	r2,2
   4abcc:	003feb06 	br	4ab7c <__sigtramp_r+0x58>
   4abd0:	00bfffc4 	movi	r2,-1
   4abd4:	003fe906 	br	4ab7c <__sigtramp_r+0x58>
   4abd8:	00bfffc4 	movi	r2,-1
   4abdc:	f800283a 	ret

0004abe0 <raise>:
   4abe0:	defffd04 	addi	sp,sp,-12
   4abe4:	dc400115 	stw	r17,4(sp)
   4abe8:	00c00174 	movhi	r3,5
   4abec:	dfc00215 	stw	ra,8(sp)
   4abf0:	dc000015 	stw	r16,0(sp)
   4abf4:	20800830 	cmpltui	r2,r4,32
   4abf8:	1c4c6317 	ldw	r17,12684(r3)
   4abfc:	10002326 	beq	r2,zero,4ac8c <raise+0xac>
   4ac00:	8880b717 	ldw	r2,732(r17)
   4ac04:	2021883a 	mov	r16,r4
   4ac08:	10001026 	beq	r2,zero,4ac4c <raise+0x6c>
   4ac0c:	200690ba 	slli	r3,r4,2
   4ac10:	10c5883a 	add	r2,r2,r3
   4ac14:	10c00017 	ldw	r3,0(r2)
   4ac18:	18000c26 	beq	r3,zero,4ac4c <raise+0x6c>
   4ac1c:	19400060 	cmpeqi	r5,r3,1
   4ac20:	2800181e 	bne	r5,zero,4ac84 <raise+0xa4>
   4ac24:	197fffd8 	cmpnei	r5,r3,-1
   4ac28:	28001226 	beq	r5,zero,4ac74 <raise+0x94>
   4ac2c:	10000015 	stw	zero,0(r2)
   4ac30:	183ee83a 	callr	r3
   4ac34:	0005883a 	mov	r2,zero
   4ac38:	dfc00217 	ldw	ra,8(sp)
   4ac3c:	dc400117 	ldw	r17,4(sp)
   4ac40:	dc000017 	ldw	r16,0(sp)
   4ac44:	dec00304 	addi	sp,sp,12
   4ac48:	f800283a 	ret
   4ac4c:	8809883a 	mov	r4,r17
   4ac50:	004aeb80 	call	4aeb8 <_getpid_r>
   4ac54:	800d883a 	mov	r6,r16
   4ac58:	100b883a 	mov	r5,r2
   4ac5c:	8809883a 	mov	r4,r17
   4ac60:	dfc00217 	ldw	ra,8(sp)
   4ac64:	dc400117 	ldw	r17,4(sp)
   4ac68:	dc000017 	ldw	r16,0(sp)
   4ac6c:	dec00304 	addi	sp,sp,12
   4ac70:	004ae581 	jmpi	4ae58 <_kill_r>
   4ac74:	00800584 	movi	r2,22
   4ac78:	88800015 	stw	r2,0(r17)
   4ac7c:	00800044 	movi	r2,1
   4ac80:	003fed06 	br	4ac38 <raise+0x58>
   4ac84:	0005883a 	mov	r2,zero
   4ac88:	003feb06 	br	4ac38 <raise+0x58>
   4ac8c:	00800584 	movi	r2,22
   4ac90:	88800015 	stw	r2,0(r17)
   4ac94:	00bfffc4 	movi	r2,-1
   4ac98:	003fe706 	br	4ac38 <raise+0x58>

0004ac9c <signal>:
   4ac9c:	defffc04 	addi	sp,sp,-16
   4aca0:	dc800215 	stw	r18,8(sp)
   4aca4:	00c00174 	movhi	r3,5
   4aca8:	dfc00315 	stw	ra,12(sp)
   4acac:	dc400115 	stw	r17,4(sp)
   4acb0:	dc000015 	stw	r16,0(sp)
   4acb4:	20800830 	cmpltui	r2,r4,32
   4acb8:	1c8c6317 	ldw	r18,12684(r3)
   4acbc:	10000e26 	beq	r2,zero,4acf8 <signal+0x5c>
   4acc0:	2021883a 	mov	r16,r4
   4acc4:	9100b717 	ldw	r4,732(r18)
   4acc8:	2823883a 	mov	r17,r5
   4accc:	20000e26 	beq	r4,zero,4ad08 <signal+0x6c>
   4acd0:	802090ba 	slli	r16,r16,2
   4acd4:	2421883a 	add	r16,r4,r16
   4acd8:	80800017 	ldw	r2,0(r16)
   4acdc:	84400015 	stw	r17,0(r16)
   4ace0:	dfc00317 	ldw	ra,12(sp)
   4ace4:	dc800217 	ldw	r18,8(sp)
   4ace8:	dc400117 	ldw	r17,4(sp)
   4acec:	dc000017 	ldw	r16,0(sp)
   4acf0:	dec00404 	addi	sp,sp,16
   4acf4:	f800283a 	ret
   4acf8:	00800584 	movi	r2,22
   4acfc:	90800015 	stw	r2,0(r18)
   4ad00:	00bfffc4 	movi	r2,-1
   4ad04:	003ff606 	br	4ace0 <signal+0x44>
   4ad08:	9009883a 	mov	r4,r18
   4ad0c:	01402004 	movi	r5,128
   4ad10:	0041e740 	call	41e74 <_malloc_r>
   4ad14:	9080b715 	stw	r2,732(r18)
   4ad18:	1009883a 	mov	r4,r2
   4ad1c:	10000526 	beq	r2,zero,4ad34 <signal+0x98>
   4ad20:	01802004 	movi	r6,128
   4ad24:	000b883a 	mov	r5,zero
   4ad28:	00426540 	call	42654 <memset>
   4ad2c:	1009883a 	mov	r4,r2
   4ad30:	003fe706 	br	4acd0 <signal+0x34>
   4ad34:	00bfffc4 	movi	r2,-1
   4ad38:	003fe906 	br	4ace0 <signal+0x44>

0004ad3c <_init_signal>:
   4ad3c:	defffe04 	addi	sp,sp,-8
   4ad40:	00800174 	movhi	r2,5
   4ad44:	dc000015 	stw	r16,0(sp)
   4ad48:	140c6317 	ldw	r16,12684(r2)
   4ad4c:	dfc00115 	stw	ra,4(sp)
   4ad50:	8080b717 	ldw	r2,732(r16)
   4ad54:	10000526 	beq	r2,zero,4ad6c <_init_signal+0x30>
   4ad58:	0005883a 	mov	r2,zero
   4ad5c:	dfc00117 	ldw	ra,4(sp)
   4ad60:	dc000017 	ldw	r16,0(sp)
   4ad64:	dec00204 	addi	sp,sp,8
   4ad68:	f800283a 	ret
   4ad6c:	8009883a 	mov	r4,r16
   4ad70:	01402004 	movi	r5,128
   4ad74:	0041e740 	call	41e74 <_malloc_r>
   4ad78:	8080b715 	stw	r2,732(r16)
   4ad7c:	1009883a 	mov	r4,r2
   4ad80:	10000426 	beq	r2,zero,4ad94 <_init_signal+0x58>
   4ad84:	01802004 	movi	r6,128
   4ad88:	000b883a 	mov	r5,zero
   4ad8c:	00426540 	call	42654 <memset>
   4ad90:	003ff106 	br	4ad58 <_init_signal+0x1c>
   4ad94:	00bfffc4 	movi	r2,-1
   4ad98:	003ff006 	br	4ad5c <_init_signal+0x20>

0004ad9c <__sigtramp>:
   4ad9c:	defffd04 	addi	sp,sp,-12
   4ada0:	dc400115 	stw	r17,4(sp)
   4ada4:	00c00174 	movhi	r3,5
   4ada8:	dfc00215 	stw	ra,8(sp)
   4adac:	dc000015 	stw	r16,0(sp)
   4adb0:	20800830 	cmpltui	r2,r4,32
   4adb4:	1c4c6317 	ldw	r17,12684(r3)
   4adb8:	10002526 	beq	r2,zero,4ae50 <__sigtramp+0xb4>
   4adbc:	88c0b717 	ldw	r3,732(r17)
   4adc0:	2021883a 	mov	r16,r4
   4adc4:	18001326 	beq	r3,zero,4ae14 <__sigtramp+0x78>
   4adc8:	800890ba 	slli	r4,r16,2
   4adcc:	1907883a 	add	r3,r3,r4
   4add0:	18800017 	ldw	r2,0(r3)
   4add4:	10000d26 	beq	r2,zero,4ae0c <__sigtramp+0x70>
   4add8:	113fffe0 	cmpeqi	r4,r2,-1
   4addc:	20001a1e 	bne	r4,zero,4ae48 <__sigtramp+0xac>
   4ade0:	11000060 	cmpeqi	r4,r2,1
   4ade4:	2000161e 	bne	r4,zero,4ae40 <__sigtramp+0xa4>
   4ade8:	18000015 	stw	zero,0(r3)
   4adec:	8009883a 	mov	r4,r16
   4adf0:	103ee83a 	callr	r2
   4adf4:	0005883a 	mov	r2,zero
   4adf8:	dfc00217 	ldw	ra,8(sp)
   4adfc:	dc400117 	ldw	r17,4(sp)
   4ae00:	dc000017 	ldw	r16,0(sp)
   4ae04:	dec00304 	addi	sp,sp,12
   4ae08:	f800283a 	ret
   4ae0c:	00800044 	movi	r2,1
   4ae10:	003ff906 	br	4adf8 <__sigtramp+0x5c>
   4ae14:	01402004 	movi	r5,128
   4ae18:	8809883a 	mov	r4,r17
   4ae1c:	0041e740 	call	41e74 <_malloc_r>
   4ae20:	8880b715 	stw	r2,732(r17)
   4ae24:	10000a26 	beq	r2,zero,4ae50 <__sigtramp+0xb4>
   4ae28:	01802004 	movi	r6,128
   4ae2c:	000b883a 	mov	r5,zero
   4ae30:	1009883a 	mov	r4,r2
   4ae34:	00426540 	call	42654 <memset>
   4ae38:	1007883a 	mov	r3,r2
   4ae3c:	003fe206 	br	4adc8 <__sigtramp+0x2c>
   4ae40:	008000c4 	movi	r2,3
   4ae44:	003fec06 	br	4adf8 <__sigtramp+0x5c>
   4ae48:	00800084 	movi	r2,2
   4ae4c:	003fea06 	br	4adf8 <__sigtramp+0x5c>
   4ae50:	00bfffc4 	movi	r2,-1
   4ae54:	003fe806 	br	4adf8 <__sigtramp+0x5c>

0004ae58 <_kill_r>:
   4ae58:	2807883a 	mov	r3,r5
   4ae5c:	defffe04 	addi	sp,sp,-8
   4ae60:	dc000015 	stw	r16,0(sp)
   4ae64:	00800174 	movhi	r2,5
   4ae68:	300b883a 	mov	r5,r6
   4ae6c:	2021883a 	mov	r16,r4
   4ae70:	1809883a 	mov	r4,r3
   4ae74:	dfc00115 	stw	ra,4(sp)
   4ae78:	10137115 	stw	zero,19908(r2)
   4ae7c:	004e7780 	call	4e778 <kill>
   4ae80:	10ffffd8 	cmpnei	r3,r2,-1
   4ae84:	18000426 	beq	r3,zero,4ae98 <_kill_r+0x40>
   4ae88:	dfc00117 	ldw	ra,4(sp)
   4ae8c:	dc000017 	ldw	r16,0(sp)
   4ae90:	dec00204 	addi	sp,sp,8
   4ae94:	f800283a 	ret
   4ae98:	00c00174 	movhi	r3,5
   4ae9c:	18d37117 	ldw	r3,19908(r3)
   4aea0:	183ff926 	beq	r3,zero,4ae88 <_kill_r+0x30>
   4aea4:	80c00015 	stw	r3,0(r16)
   4aea8:	dfc00117 	ldw	ra,4(sp)
   4aeac:	dc000017 	ldw	r16,0(sp)
   4aeb0:	dec00204 	addi	sp,sp,8
   4aeb4:	f800283a 	ret

0004aeb8 <_getpid_r>:
   4aeb8:	004e6301 	jmpi	4e630 <getpid>

0004aebc <__udivdi3>:
   4aebc:	defff504 	addi	sp,sp,-44
   4aec0:	dd000515 	stw	r20,20(sp)
   4aec4:	dc800315 	stw	r18,12(sp)
   4aec8:	dfc00a15 	stw	ra,40(sp)
   4aecc:	df000915 	stw	fp,36(sp)
   4aed0:	ddc00815 	stw	r23,32(sp)
   4aed4:	dd800715 	stw	r22,28(sp)
   4aed8:	dd400615 	stw	r21,24(sp)
   4aedc:	dcc00415 	stw	r19,16(sp)
   4aee0:	dc400215 	stw	r17,8(sp)
   4aee4:	dc000115 	stw	r16,4(sp)
   4aee8:	2029883a 	mov	r20,r4
   4aeec:	2825883a 	mov	r18,r5
   4aef0:	3800461e 	bne	r7,zero,4b00c <__udivdi3+0x150>
   4aef4:	3823883a 	mov	r17,r7
   4aef8:	3021883a 	mov	r16,r6
   4aefc:	2027883a 	mov	r19,r4
   4af00:	2980622e 	bgeu	r5,r6,4b08c <__udivdi3+0x1d0>
   4af04:	00bfffd4 	movui	r2,65535
   4af08:	282b883a 	mov	r21,r5
   4af0c:	1180aa2e 	bgeu	r2,r6,4b1b8 <__udivdi3+0x2fc>
   4af10:	00804034 	movhi	r2,256
   4af14:	30815a36 	bltu	r6,r2,4b480 <__udivdi3+0x5c4>
   4af18:	3006d63a 	srli	r3,r6,24
   4af1c:	04400604 	movi	r17,24
   4af20:	00800174 	movhi	r2,5
   4af24:	1885883a 	add	r2,r3,r2
   4af28:	10851e03 	ldbu	r2,5240(r2)
   4af2c:	00c00804 	movi	r3,32
   4af30:	1463883a 	add	r17,r2,r17
   4af34:	1c45c83a 	sub	r2,r3,r17
   4af38:	1c400526 	beq	r3,r17,4af50 <__udivdi3+0x94>
   4af3c:	9086983a 	sll	r3,r18,r2
   4af40:	a462d83a 	srl	r17,r20,r17
   4af44:	30a0983a 	sll	r16,r6,r2
   4af48:	a0a6983a 	sll	r19,r20,r2
   4af4c:	88eab03a 	or	r21,r17,r3
   4af50:	802cd43a 	srli	r22,r16,16
   4af54:	a809883a 	mov	r4,r21
   4af58:	853fffcc 	andi	r20,r16,65535
   4af5c:	b00b883a 	mov	r5,r22
   4af60:	004bbf80 	call	4bbf8 <__umodsi3>
   4af64:	a809883a 	mov	r4,r21
   4af68:	b00b883a 	mov	r5,r22
   4af6c:	1025883a 	mov	r18,r2
   4af70:	004bb940 	call	4bb94 <__udivsi3>
   4af74:	a009883a 	mov	r4,r20
   4af78:	100b883a 	mov	r5,r2
   4af7c:	102b883a 	mov	r21,r2
   4af80:	004bc540 	call	4bc54 <__mulsi3>
   4af84:	9024943a 	slli	r18,r18,16
   4af88:	9808d43a 	srli	r4,r19,16
   4af8c:	9108b03a 	or	r4,r18,r4
   4af90:	2080052e 	bgeu	r4,r2,4afa8 <__udivdi3+0xec>
   4af94:	2409883a 	add	r4,r4,r16
   4af98:	a8ffffc4 	addi	r3,r21,-1
   4af9c:	24000136 	bltu	r4,r16,4afa4 <__udivdi3+0xe8>
   4afa0:	20814836 	bltu	r4,r2,4b4c4 <__udivdi3+0x608>
   4afa4:	182b883a 	mov	r21,r3
   4afa8:	20a3c83a 	sub	r17,r4,r2
   4afac:	8809883a 	mov	r4,r17
   4afb0:	b00b883a 	mov	r5,r22
   4afb4:	004bbf80 	call	4bbf8 <__umodsi3>
   4afb8:	8809883a 	mov	r4,r17
   4afbc:	1023883a 	mov	r17,r2
   4afc0:	b00b883a 	mov	r5,r22
   4afc4:	8822943a 	slli	r17,r17,16
   4afc8:	004bb940 	call	4bb94 <__udivsi3>
   4afcc:	100b883a 	mov	r5,r2
   4afd0:	a009883a 	mov	r4,r20
   4afd4:	9cffffcc 	andi	r19,r19,65535
   4afd8:	1025883a 	mov	r18,r2
   4afdc:	8ce6b03a 	or	r19,r17,r19
   4afe0:	004bc540 	call	4bc54 <__mulsi3>
   4afe4:	9880052e 	bgeu	r19,r2,4affc <__udivdi3+0x140>
   4afe8:	84e7883a 	add	r19,r16,r19
   4afec:	90ffffc4 	addi	r3,r18,-1
   4aff0:	9c000136 	bltu	r19,r16,4aff8 <__udivdi3+0x13c>
   4aff4:	98813136 	bltu	r19,r2,4b4bc <__udivdi3+0x600>
   4aff8:	1825883a 	mov	r18,r3
   4affc:	a80c943a 	slli	r6,r21,16
   4b000:	0007883a 	mov	r3,zero
   4b004:	3484b03a 	or	r2,r6,r18
   4b008:	00000306 	br	4b018 <__udivdi3+0x15c>
   4b00c:	29c00e2e 	bgeu	r5,r7,4b048 <__udivdi3+0x18c>
   4b010:	0007883a 	mov	r3,zero
   4b014:	0005883a 	mov	r2,zero
   4b018:	dfc00a17 	ldw	ra,40(sp)
   4b01c:	df000917 	ldw	fp,36(sp)
   4b020:	ddc00817 	ldw	r23,32(sp)
   4b024:	dd800717 	ldw	r22,28(sp)
   4b028:	dd400617 	ldw	r21,24(sp)
   4b02c:	dd000517 	ldw	r20,20(sp)
   4b030:	dcc00417 	ldw	r19,16(sp)
   4b034:	dc800317 	ldw	r18,12(sp)
   4b038:	dc400217 	ldw	r17,8(sp)
   4b03c:	dc000117 	ldw	r16,4(sp)
   4b040:	dec00b04 	addi	sp,sp,44
   4b044:	f800283a 	ret
   4b048:	00bfffd4 	movui	r2,65535
   4b04c:	11c05f2e 	bgeu	r2,r7,4b1cc <__udivdi3+0x310>
   4b050:	00804034 	movhi	r2,256
   4b054:	3880fc36 	bltu	r7,r2,4b448 <__udivdi3+0x58c>
   4b058:	3804d63a 	srli	r2,r7,24
   4b05c:	01000604 	movi	r4,24
   4b060:	00c00174 	movhi	r3,5
   4b064:	10c7883a 	add	r3,r2,r3
   4b068:	18851e03 	ldbu	r2,5240(r3)
   4b06c:	00c00804 	movi	r3,32
   4b070:	1105883a 	add	r2,r2,r4
   4b074:	18a3c83a 	sub	r17,r3,r2
   4b078:	1880901e 	bne	r3,r2,4b2bc <__udivdi3+0x400>
   4b07c:	3c80f736 	bltu	r7,r18,4b45c <__udivdi3+0x5a0>
   4b080:	a185403a 	cmpgeu	r2,r20,r6
   4b084:	0007883a 	mov	r3,zero
   4b088:	003fe306 	br	4b018 <__udivdi3+0x15c>
   4b08c:	3000041e 	bne	r6,zero,4b0a0 <__udivdi3+0x1e4>
   4b090:	000b883a 	mov	r5,zero
   4b094:	01000044 	movi	r4,1
   4b098:	004bb940 	call	4bb94 <__udivsi3>
   4b09c:	1021883a 	mov	r16,r2
   4b0a0:	00bfffd4 	movui	r2,65535
   4b0a4:	14003f2e 	bgeu	r2,r16,4b1a4 <__udivdi3+0x2e8>
   4b0a8:	00804034 	movhi	r2,256
   4b0ac:	8080f136 	bltu	r16,r2,4b474 <__udivdi3+0x5b8>
   4b0b0:	8006d63a 	srli	r3,r16,24
   4b0b4:	04400604 	movi	r17,24
   4b0b8:	00800174 	movhi	r2,5
   4b0bc:	1885883a 	add	r2,r3,r2
   4b0c0:	10851e03 	ldbu	r2,5240(r2)
   4b0c4:	00c00804 	movi	r3,32
   4b0c8:	1463883a 	add	r17,r2,r17
   4b0cc:	1c45c83a 	sub	r2,r3,r17
   4b0d0:	1c40431e 	bne	r3,r17,4b1e0 <__udivdi3+0x324>
   4b0d4:	802cd43a 	srli	r22,r16,16
   4b0d8:	9423c83a 	sub	r17,r18,r16
   4b0dc:	853fffcc 	andi	r20,r16,65535
   4b0e0:	00c00044 	movi	r3,1
   4b0e4:	b00b883a 	mov	r5,r22
   4b0e8:	8809883a 	mov	r4,r17
   4b0ec:	d8c00015 	stw	r3,0(sp)
   4b0f0:	004bbf80 	call	4bbf8 <__umodsi3>
   4b0f4:	b00b883a 	mov	r5,r22
   4b0f8:	8809883a 	mov	r4,r17
   4b0fc:	1025883a 	mov	r18,r2
   4b100:	004bb940 	call	4bb94 <__udivsi3>
   4b104:	1009883a 	mov	r4,r2
   4b108:	a00b883a 	mov	r5,r20
   4b10c:	102b883a 	mov	r21,r2
   4b110:	004bc540 	call	4bc54 <__mulsi3>
   4b114:	9024943a 	slli	r18,r18,16
   4b118:	9808d43a 	srli	r4,r19,16
   4b11c:	d8c00017 	ldw	r3,0(sp)
   4b120:	9108b03a 	or	r4,r18,r4
   4b124:	2080052e 	bgeu	r4,r2,4b13c <__udivdi3+0x280>
   4b128:	2409883a 	add	r4,r4,r16
   4b12c:	a97fffc4 	addi	r5,r21,-1
   4b130:	24000136 	bltu	r4,r16,4b138 <__udivdi3+0x27c>
   4b134:	2080e636 	bltu	r4,r2,4b4d0 <__udivdi3+0x614>
   4b138:	282b883a 	mov	r21,r5
   4b13c:	20a3c83a 	sub	r17,r4,r2
   4b140:	8809883a 	mov	r4,r17
   4b144:	b00b883a 	mov	r5,r22
   4b148:	d8c00015 	stw	r3,0(sp)
   4b14c:	004bbf80 	call	4bbf8 <__umodsi3>
   4b150:	8809883a 	mov	r4,r17
   4b154:	1023883a 	mov	r17,r2
   4b158:	b00b883a 	mov	r5,r22
   4b15c:	8822943a 	slli	r17,r17,16
   4b160:	004bb940 	call	4bb94 <__udivsi3>
   4b164:	a00b883a 	mov	r5,r20
   4b168:	1009883a 	mov	r4,r2
   4b16c:	9cffffcc 	andi	r19,r19,65535
   4b170:	1025883a 	mov	r18,r2
   4b174:	8ce6b03a 	or	r19,r17,r19
   4b178:	004bc540 	call	4bc54 <__mulsi3>
   4b17c:	d8c00017 	ldw	r3,0(sp)
   4b180:	9880052e 	bgeu	r19,r2,4b198 <__udivdi3+0x2dc>
   4b184:	84e7883a 	add	r19,r16,r19
   4b188:	913fffc4 	addi	r4,r18,-1
   4b18c:	9c000136 	bltu	r19,r16,4b194 <__udivdi3+0x2d8>
   4b190:	9880c836 	bltu	r19,r2,4b4b4 <__udivdi3+0x5f8>
   4b194:	2025883a 	mov	r18,r4
   4b198:	a80c943a 	slli	r6,r21,16
   4b19c:	3484b03a 	or	r2,r6,r18
   4b1a0:	003f9d06 	br	4b018 <__udivdi3+0x15c>
   4b1a4:	80804030 	cmpltui	r2,r16,256
   4b1a8:	1000b81e 	bne	r2,zero,4b48c <__udivdi3+0x5d0>
   4b1ac:	8006d23a 	srli	r3,r16,8
   4b1b0:	04400204 	movi	r17,8
   4b1b4:	003fc006 	br	4b0b8 <__udivdi3+0x1fc>
   4b1b8:	30804030 	cmpltui	r2,r6,256
   4b1bc:	1000a51e 	bne	r2,zero,4b454 <__udivdi3+0x598>
   4b1c0:	3006d23a 	srli	r3,r6,8
   4b1c4:	04400204 	movi	r17,8
   4b1c8:	003f5506 	br	4af20 <__udivdi3+0x64>
   4b1cc:	38804030 	cmpltui	r2,r7,256
   4b1d0:	1000a51e 	bne	r2,zero,4b468 <__udivdi3+0x5ac>
   4b1d4:	3804d23a 	srli	r2,r7,8
   4b1d8:	01000204 	movi	r4,8
   4b1dc:	003fa006 	br	4b060 <__udivdi3+0x1a4>
   4b1e0:	80a0983a 	sll	r16,r16,r2
   4b1e4:	946ed83a 	srl	r23,r18,r17
   4b1e8:	9086983a 	sll	r3,r18,r2
   4b1ec:	802cd43a 	srli	r22,r16,16
   4b1f0:	a462d83a 	srl	r17,r20,r17
   4b1f4:	b809883a 	mov	r4,r23
   4b1f8:	b00b883a 	mov	r5,r22
   4b1fc:	88eab03a 	or	r21,r17,r3
   4b200:	a0a6983a 	sll	r19,r20,r2
   4b204:	004bbf80 	call	4bbf8 <__umodsi3>
   4b208:	b809883a 	mov	r4,r23
   4b20c:	b00b883a 	mov	r5,r22
   4b210:	1025883a 	mov	r18,r2
   4b214:	853fffcc 	andi	r20,r16,65535
   4b218:	004bb940 	call	4bb94 <__udivsi3>
   4b21c:	a009883a 	mov	r4,r20
   4b220:	100b883a 	mov	r5,r2
   4b224:	102f883a 	mov	r23,r2
   4b228:	004bc540 	call	4bc54 <__mulsi3>
   4b22c:	9024943a 	slli	r18,r18,16
   4b230:	a808d43a 	srli	r4,r21,16
   4b234:	9108b03a 	or	r4,r18,r4
   4b238:	2080062e 	bgeu	r4,r2,4b254 <__udivdi3+0x398>
   4b23c:	2409883a 	add	r4,r4,r16
   4b240:	b8ffffc4 	addi	r3,r23,-1
   4b244:	24009936 	bltu	r4,r16,4b4ac <__udivdi3+0x5f0>
   4b248:	2080982e 	bgeu	r4,r2,4b4ac <__udivdi3+0x5f0>
   4b24c:	bdffff84 	addi	r23,r23,-2
   4b250:	2409883a 	add	r4,r4,r16
   4b254:	20a3c83a 	sub	r17,r4,r2
   4b258:	8809883a 	mov	r4,r17
   4b25c:	b00b883a 	mov	r5,r22
   4b260:	004bbf80 	call	4bbf8 <__umodsi3>
   4b264:	1025883a 	mov	r18,r2
   4b268:	8809883a 	mov	r4,r17
   4b26c:	b00b883a 	mov	r5,r22
   4b270:	9024943a 	slli	r18,r18,16
   4b274:	004bb940 	call	4bb94 <__udivsi3>
   4b278:	100b883a 	mov	r5,r2
   4b27c:	a009883a 	mov	r4,r20
   4b280:	ac7fffcc 	andi	r17,r21,65535
   4b284:	1039883a 	mov	fp,r2
   4b288:	9462b03a 	or	r17,r18,r17
   4b28c:	004bc540 	call	4bc54 <__mulsi3>
   4b290:	8880062e 	bgeu	r17,r2,4b2ac <__udivdi3+0x3f0>
   4b294:	8c23883a 	add	r17,r17,r16
   4b298:	e0ffffc4 	addi	r3,fp,-1
   4b29c:	8c007f36 	bltu	r17,r16,4b49c <__udivdi3+0x5e0>
   4b2a0:	88807e2e 	bgeu	r17,r2,4b49c <__udivdi3+0x5e0>
   4b2a4:	e73fff84 	addi	fp,fp,-2
   4b2a8:	8c23883a 	add	r17,r17,r16
   4b2ac:	b806943a 	slli	r3,r23,16
   4b2b0:	88a3c83a 	sub	r17,r17,r2
   4b2b4:	1f06b03a 	or	r3,r3,fp
   4b2b8:	003f8a06 	br	4b0e4 <__udivdi3+0x228>
   4b2bc:	30a6d83a 	srl	r19,r6,r2
   4b2c0:	3c4e983a 	sll	r7,r7,r17
   4b2c4:	90a0d83a 	srl	r16,r18,r2
   4b2c8:	9446983a 	sll	r3,r18,r17
   4b2cc:	99e6b03a 	or	r19,r19,r7
   4b2d0:	a084d83a 	srl	r2,r20,r2
   4b2d4:	9838d43a 	srli	fp,r19,16
   4b2d8:	8009883a 	mov	r4,r16
   4b2dc:	10eab03a 	or	r21,r2,r3
   4b2e0:	e00b883a 	mov	r5,fp
   4b2e4:	346c983a 	sll	r22,r6,r17
   4b2e8:	dd400015 	stw	r21,0(sp)
   4b2ec:	004bbf80 	call	4bbf8 <__umodsi3>
   4b2f0:	8009883a 	mov	r4,r16
   4b2f4:	e00b883a 	mov	r5,fp
   4b2f8:	102f883a 	mov	r23,r2
   4b2fc:	9cbfffcc 	andi	r18,r19,65535
   4b300:	004bb940 	call	4bb94 <__udivsi3>
   4b304:	9009883a 	mov	r4,r18
   4b308:	100b883a 	mov	r5,r2
   4b30c:	1021883a 	mov	r16,r2
   4b310:	004bc540 	call	4bc54 <__mulsi3>
   4b314:	b82e943a 	slli	r23,r23,16
   4b318:	a808d43a 	srli	r4,r21,16
   4b31c:	b908b03a 	or	r4,r23,r4
   4b320:	2080062e 	bgeu	r4,r2,4b33c <__udivdi3+0x480>
   4b324:	24c9883a 	add	r4,r4,r19
   4b328:	817fffc4 	addi	r5,r16,-1
   4b32c:	24c05d36 	bltu	r4,r19,4b4a4 <__udivdi3+0x5e8>
   4b330:	20805c2e 	bgeu	r4,r2,4b4a4 <__udivdi3+0x5e8>
   4b334:	843fff84 	addi	r16,r16,-2
   4b338:	24c9883a 	add	r4,r4,r19
   4b33c:	20abc83a 	sub	r21,r4,r2
   4b340:	a809883a 	mov	r4,r21
   4b344:	e00b883a 	mov	r5,fp
   4b348:	004bbf80 	call	4bbf8 <__umodsi3>
   4b34c:	a809883a 	mov	r4,r21
   4b350:	e00b883a 	mov	r5,fp
   4b354:	102b883a 	mov	r21,r2
   4b358:	004bb940 	call	4bb94 <__udivsi3>
   4b35c:	9009883a 	mov	r4,r18
   4b360:	100b883a 	mov	r5,r2
   4b364:	102f883a 	mov	r23,r2
   4b368:	004bc540 	call	4bc54 <__mulsi3>
   4b36c:	d8c00017 	ldw	r3,0(sp)
   4b370:	a82a943a 	slli	r21,r21,16
   4b374:	100d883a 	mov	r6,r2
   4b378:	1cbfffcc 	andi	r18,r3,65535
   4b37c:	aca4b03a 	or	r18,r21,r18
   4b380:	9080062e 	bgeu	r18,r2,4b39c <__udivdi3+0x4e0>
   4b384:	94e5883a 	add	r18,r18,r19
   4b388:	b8bfffc4 	addi	r2,r23,-1
   4b38c:	94c04136 	bltu	r18,r19,4b494 <__udivdi3+0x5d8>
   4b390:	9180402e 	bgeu	r18,r6,4b494 <__udivdi3+0x5d8>
   4b394:	bdffff84 	addi	r23,r23,-2
   4b398:	94e5883a 	add	r18,r18,r19
   4b39c:	8004943a 	slli	r2,r16,16
   4b3a0:	bd7fffcc 	andi	r21,r23,65535
   4b3a4:	b73fffcc 	andi	fp,r22,65535
   4b3a8:	15e0b03a 	or	r16,r2,r23
   4b3ac:	8026d43a 	srli	r19,r16,16
   4b3b0:	a809883a 	mov	r4,r21
   4b3b4:	e00b883a 	mov	r5,fp
   4b3b8:	91a5c83a 	sub	r18,r18,r6
   4b3bc:	b02cd43a 	srli	r22,r22,16
   4b3c0:	004bc540 	call	4bc54 <__mulsi3>
   4b3c4:	9809883a 	mov	r4,r19
   4b3c8:	e00b883a 	mov	r5,fp
   4b3cc:	102f883a 	mov	r23,r2
   4b3d0:	004bc540 	call	4bc54 <__mulsi3>
   4b3d4:	9809883a 	mov	r4,r19
   4b3d8:	b00b883a 	mov	r5,r22
   4b3dc:	1027883a 	mov	r19,r2
   4b3e0:	004bc540 	call	4bc54 <__mulsi3>
   4b3e4:	a809883a 	mov	r4,r21
   4b3e8:	b00b883a 	mov	r5,r22
   4b3ec:	102b883a 	mov	r21,r2
   4b3f0:	004bc540 	call	4bc54 <__mulsi3>
   4b3f4:	b806d43a 	srli	r3,r23,16
   4b3f8:	14c5883a 	add	r2,r2,r19
   4b3fc:	1887883a 	add	r3,r3,r2
   4b400:	1cc0022e 	bgeu	r3,r19,4b40c <__udivdi3+0x550>
   4b404:	00800074 	movhi	r2,1
   4b408:	a8ab883a 	add	r21,r21,r2
   4b40c:	1804d43a 	srli	r2,r3,16
   4b410:	156b883a 	add	r21,r2,r21
   4b414:	95400936 	bltu	r18,r21,4b43c <__udivdi3+0x580>
   4b418:	95400326 	beq	r18,r21,4b428 <__udivdi3+0x56c>
   4b41c:	8005883a 	mov	r2,r16
   4b420:	0007883a 	mov	r3,zero
   4b424:	003efc06 	br	4b018 <__udivdi3+0x15c>
   4b428:	1806943a 	slli	r3,r3,16
   4b42c:	a44c983a 	sll	r6,r20,r17
   4b430:	bdffffcc 	andi	r23,r23,65535
   4b434:	1dc7883a 	add	r3,r3,r23
   4b438:	30fff82e 	bgeu	r6,r3,4b41c <__udivdi3+0x560>
   4b43c:	80bfffc4 	addi	r2,r16,-1
   4b440:	0007883a 	mov	r3,zero
   4b444:	003ef406 	br	4b018 <__udivdi3+0x15c>
   4b448:	3804d43a 	srli	r2,r7,16
   4b44c:	01000404 	movi	r4,16
   4b450:	003f0306 	br	4b060 <__udivdi3+0x1a4>
   4b454:	3007883a 	mov	r3,r6
   4b458:	003eb106 	br	4af20 <__udivdi3+0x64>
   4b45c:	0007883a 	mov	r3,zero
   4b460:	00800044 	movi	r2,1
   4b464:	003eec06 	br	4b018 <__udivdi3+0x15c>
   4b468:	3805883a 	mov	r2,r7
   4b46c:	0009883a 	mov	r4,zero
   4b470:	003efb06 	br	4b060 <__udivdi3+0x1a4>
   4b474:	8006d43a 	srli	r3,r16,16
   4b478:	04400404 	movi	r17,16
   4b47c:	003f0e06 	br	4b0b8 <__udivdi3+0x1fc>
   4b480:	3006d43a 	srli	r3,r6,16
   4b484:	04400404 	movi	r17,16
   4b488:	003ea506 	br	4af20 <__udivdi3+0x64>
   4b48c:	8007883a 	mov	r3,r16
   4b490:	003f0906 	br	4b0b8 <__udivdi3+0x1fc>
   4b494:	102f883a 	mov	r23,r2
   4b498:	003fc006 	br	4b39c <__udivdi3+0x4e0>
   4b49c:	1839883a 	mov	fp,r3
   4b4a0:	003f8206 	br	4b2ac <__udivdi3+0x3f0>
   4b4a4:	2821883a 	mov	r16,r5
   4b4a8:	003fa406 	br	4b33c <__udivdi3+0x480>
   4b4ac:	182f883a 	mov	r23,r3
   4b4b0:	003f6806 	br	4b254 <__udivdi3+0x398>
   4b4b4:	94bfff84 	addi	r18,r18,-2
   4b4b8:	003f3706 	br	4b198 <__udivdi3+0x2dc>
   4b4bc:	94bfff84 	addi	r18,r18,-2
   4b4c0:	003ece06 	br	4affc <__udivdi3+0x140>
   4b4c4:	ad7fff84 	addi	r21,r21,-2
   4b4c8:	2409883a 	add	r4,r4,r16
   4b4cc:	003eb606 	br	4afa8 <__udivdi3+0xec>
   4b4d0:	ad7fff84 	addi	r21,r21,-2
   4b4d4:	2409883a 	add	r4,r4,r16
   4b4d8:	003f1806 	br	4b13c <__udivdi3+0x280>

0004b4dc <__umoddi3>:
   4b4dc:	defff304 	addi	sp,sp,-52
   4b4e0:	dc400415 	stw	r17,16(sp)
   4b4e4:	dc000315 	stw	r16,12(sp)
   4b4e8:	dfc00c15 	stw	ra,48(sp)
   4b4ec:	df000b15 	stw	fp,44(sp)
   4b4f0:	ddc00a15 	stw	r23,40(sp)
   4b4f4:	dd800915 	stw	r22,36(sp)
   4b4f8:	dd400815 	stw	r21,32(sp)
   4b4fc:	dd000715 	stw	r20,28(sp)
   4b500:	dcc00615 	stw	r19,24(sp)
   4b504:	dc800515 	stw	r18,20(sp)
   4b508:	2823883a 	mov	r17,r5
   4b50c:	2021883a 	mov	r16,r4
   4b510:	38003b1e 	bne	r7,zero,4b600 <__umoddi3+0x124>
   4b514:	3825883a 	mov	r18,r7
   4b518:	3029883a 	mov	r20,r6
   4b51c:	2027883a 	mov	r19,r4
   4b520:	29805b2e 	bgeu	r5,r6,4b690 <__umoddi3+0x1b4>
   4b524:	00bfffd4 	movui	r2,65535
   4b528:	282d883a 	mov	r22,r5
   4b52c:	11809a2e 	bgeu	r2,r6,4b798 <__umoddi3+0x2bc>
   4b530:	00804034 	movhi	r2,256
   4b534:	30814436 	bltu	r6,r2,4ba48 <__umoddi3+0x56c>
   4b538:	3006d63a 	srli	r3,r6,24
   4b53c:	04800604 	movi	r18,24
   4b540:	00800174 	movhi	r2,5
   4b544:	1885883a 	add	r2,r3,r2
   4b548:	10851e03 	ldbu	r2,5240(r2)
   4b54c:	00c00804 	movi	r3,32
   4b550:	1485883a 	add	r2,r2,r18
   4b554:	18a5c83a 	sub	r18,r3,r2
   4b558:	18800526 	beq	r3,r2,4b570 <__umoddi3+0x94>
   4b55c:	8ca2983a 	sll	r17,r17,r18
   4b560:	8084d83a 	srl	r2,r16,r2
   4b564:	34a8983a 	sll	r20,r6,r18
   4b568:	84a6983a 	sll	r19,r16,r18
   4b56c:	146cb03a 	or	r22,r2,r17
   4b570:	a02ed43a 	srli	r23,r20,16
   4b574:	b009883a 	mov	r4,r22
   4b578:	a57fffcc 	andi	r21,r20,65535
   4b57c:	b80b883a 	mov	r5,r23
   4b580:	004bbf80 	call	4bbf8 <__umodsi3>
   4b584:	b80b883a 	mov	r5,r23
   4b588:	b009883a 	mov	r4,r22
   4b58c:	1023883a 	mov	r17,r2
   4b590:	004bb940 	call	4bb94 <__udivsi3>
   4b594:	a809883a 	mov	r4,r21
   4b598:	100b883a 	mov	r5,r2
   4b59c:	004bc540 	call	4bc54 <__mulsi3>
   4b5a0:	8822943a 	slli	r17,r17,16
   4b5a4:	9808d43a 	srli	r4,r19,16
   4b5a8:	8908b03a 	or	r4,r17,r4
   4b5ac:	2080042e 	bgeu	r4,r2,4b5c0 <__umoddi3+0xe4>
   4b5b0:	2509883a 	add	r4,r4,r20
   4b5b4:	25000236 	bltu	r4,r20,4b5c0 <__umoddi3+0xe4>
   4b5b8:	2080012e 	bgeu	r4,r2,4b5c0 <__umoddi3+0xe4>
   4b5bc:	2509883a 	add	r4,r4,r20
   4b5c0:	20a1c83a 	sub	r16,r4,r2
   4b5c4:	b80b883a 	mov	r5,r23
   4b5c8:	8009883a 	mov	r4,r16
   4b5cc:	004bbf80 	call	4bbf8 <__umodsi3>
   4b5d0:	b80b883a 	mov	r5,r23
   4b5d4:	8009883a 	mov	r4,r16
   4b5d8:	1023883a 	mov	r17,r2
   4b5dc:	004bb940 	call	4bb94 <__udivsi3>
   4b5e0:	8822943a 	slli	r17,r17,16
   4b5e4:	100b883a 	mov	r5,r2
   4b5e8:	a809883a 	mov	r4,r21
   4b5ec:	004bc540 	call	4bc54 <__mulsi3>
   4b5f0:	98ffffcc 	andi	r3,r19,65535
   4b5f4:	88c6b03a 	or	r3,r17,r3
   4b5f8:	18805e2e 	bgeu	r3,r2,4b774 <__umoddi3+0x298>
   4b5fc:	00005906 	br	4b764 <__umoddi3+0x288>
   4b600:	2005883a 	mov	r2,r4
   4b604:	29c00d2e 	bgeu	r5,r7,4b63c <__umoddi3+0x160>
   4b608:	2807883a 	mov	r3,r5
   4b60c:	dfc00c17 	ldw	ra,48(sp)
   4b610:	df000b17 	ldw	fp,44(sp)
   4b614:	ddc00a17 	ldw	r23,40(sp)
   4b618:	dd800917 	ldw	r22,36(sp)
   4b61c:	dd400817 	ldw	r21,32(sp)
   4b620:	dd000717 	ldw	r20,28(sp)
   4b624:	dcc00617 	ldw	r19,24(sp)
   4b628:	dc800517 	ldw	r18,20(sp)
   4b62c:	dc400417 	ldw	r17,16(sp)
   4b630:	dc000317 	ldw	r16,12(sp)
   4b634:	dec00d04 	addi	sp,sp,52
   4b638:	f800283a 	ret
   4b63c:	013fffd4 	movui	r4,65535
   4b640:	2807883a 	mov	r3,r5
   4b644:	21c0592e 	bgeu	r4,r7,4b7ac <__umoddi3+0x2d0>
   4b648:	01004034 	movhi	r4,256
   4b64c:	39010336 	bltu	r7,r4,4ba5c <__umoddi3+0x580>
   4b650:	3808d63a 	srli	r4,r7,24
   4b654:	02000604 	movi	r8,24
   4b658:	01400174 	movhi	r5,5
   4b65c:	214b883a 	add	r5,r4,r5
   4b660:	2d051e03 	ldbu	r20,5240(r5)
   4b664:	01000804 	movi	r4,32
   4b668:	a229883a 	add	r20,r20,r8
   4b66c:	252bc83a 	sub	r21,r4,r20
   4b670:	2500531e 	bne	r4,r20,4b7c0 <__umoddi3+0x2e4>
   4b674:	3c400136 	bltu	r7,r17,4b67c <__umoddi3+0x1a0>
   4b678:	81bfe436 	bltu	r16,r6,4b60c <__umoddi3+0x130>
   4b67c:	8185c83a 	sub	r2,r16,r6
   4b680:	89cfc83a 	sub	r7,r17,r7
   4b684:	8087803a 	cmpltu	r3,r16,r2
   4b688:	38c7c83a 	sub	r3,r7,r3
   4b68c:	003fdf06 	br	4b60c <__umoddi3+0x130>
   4b690:	3000041e 	bne	r6,zero,4b6a4 <__umoddi3+0x1c8>
   4b694:	000b883a 	mov	r5,zero
   4b698:	01000044 	movi	r4,1
   4b69c:	004bb940 	call	4bb94 <__udivsi3>
   4b6a0:	1029883a 	mov	r20,r2
   4b6a4:	00bfffd4 	movui	r2,65535
   4b6a8:	1500362e 	bgeu	r2,r20,4b784 <__umoddi3+0x2a8>
   4b6ac:	00804034 	movhi	r2,256
   4b6b0:	a080ed36 	bltu	r20,r2,4ba68 <__umoddi3+0x58c>
   4b6b4:	a006d63a 	srli	r3,r20,24
   4b6b8:	04800604 	movi	r18,24
   4b6bc:	00800174 	movhi	r2,5
   4b6c0:	1885883a 	add	r2,r3,r2
   4b6c4:	15851e03 	ldbu	r22,5240(r2)
   4b6c8:	00800804 	movi	r2,32
   4b6cc:	b4ad883a 	add	r22,r22,r18
   4b6d0:	15a5c83a 	sub	r18,r2,r22
   4b6d4:	1580a51e 	bne	r2,r22,4b96c <__umoddi3+0x490>
   4b6d8:	a02ed43a 	srli	r23,r20,16
   4b6dc:	8d23c83a 	sub	r17,r17,r20
   4b6e0:	a57fffcc 	andi	r21,r20,65535
   4b6e4:	8809883a 	mov	r4,r17
   4b6e8:	b80b883a 	mov	r5,r23
   4b6ec:	004bbf80 	call	4bbf8 <__umodsi3>
   4b6f0:	8809883a 	mov	r4,r17
   4b6f4:	b80b883a 	mov	r5,r23
   4b6f8:	1023883a 	mov	r17,r2
   4b6fc:	004bb940 	call	4bb94 <__udivsi3>
   4b700:	1009883a 	mov	r4,r2
   4b704:	a80b883a 	mov	r5,r21
   4b708:	004bc540 	call	4bc54 <__mulsi3>
   4b70c:	8822943a 	slli	r17,r17,16
   4b710:	9808d43a 	srli	r4,r19,16
   4b714:	8908b03a 	or	r4,r17,r4
   4b718:	2080032e 	bgeu	r4,r2,4b728 <__umoddi3+0x24c>
   4b71c:	2509883a 	add	r4,r4,r20
   4b720:	25000136 	bltu	r4,r20,4b728 <__umoddi3+0x24c>
   4b724:	2080dc36 	bltu	r4,r2,4ba98 <__umoddi3+0x5bc>
   4b728:	20a1c83a 	sub	r16,r4,r2
   4b72c:	b80b883a 	mov	r5,r23
   4b730:	8009883a 	mov	r4,r16
   4b734:	004bbf80 	call	4bbf8 <__umodsi3>
   4b738:	b80b883a 	mov	r5,r23
   4b73c:	8009883a 	mov	r4,r16
   4b740:	1023883a 	mov	r17,r2
   4b744:	8822943a 	slli	r17,r17,16
   4b748:	004bb940 	call	4bb94 <__udivsi3>
   4b74c:	a80b883a 	mov	r5,r21
   4b750:	1009883a 	mov	r4,r2
   4b754:	004bc540 	call	4bc54 <__mulsi3>
   4b758:	9cffffcc 	andi	r19,r19,65535
   4b75c:	8cc6b03a 	or	r3,r17,r19
   4b760:	1880042e 	bgeu	r3,r2,4b774 <__umoddi3+0x298>
   4b764:	1d07883a 	add	r3,r3,r20
   4b768:	1d000236 	bltu	r3,r20,4b774 <__umoddi3+0x298>
   4b76c:	1880012e 	bgeu	r3,r2,4b774 <__umoddi3+0x298>
   4b770:	1d07883a 	add	r3,r3,r20
   4b774:	1885c83a 	sub	r2,r3,r2
   4b778:	1484d83a 	srl	r2,r2,r18
   4b77c:	0007883a 	mov	r3,zero
   4b780:	003fa206 	br	4b60c <__umoddi3+0x130>
   4b784:	a0804030 	cmpltui	r2,r20,256
   4b788:	1000ba1e 	bne	r2,zero,4ba74 <__umoddi3+0x598>
   4b78c:	a006d23a 	srli	r3,r20,8
   4b790:	04800204 	movi	r18,8
   4b794:	003fc906 	br	4b6bc <__umoddi3+0x1e0>
   4b798:	30804030 	cmpltui	r2,r6,256
   4b79c:	1000ad1e 	bne	r2,zero,4ba54 <__umoddi3+0x578>
   4b7a0:	3006d23a 	srli	r3,r6,8
   4b7a4:	04800204 	movi	r18,8
   4b7a8:	003f6506 	br	4b540 <__umoddi3+0x64>
   4b7ac:	39004030 	cmpltui	r4,r7,256
   4b7b0:	2000b21e 	bne	r4,zero,4ba7c <__umoddi3+0x5a0>
   4b7b4:	3808d23a 	srli	r4,r7,8
   4b7b8:	02000204 	movi	r8,8
   4b7bc:	003fa606 	br	4b658 <__umoddi3+0x17c>
   4b7c0:	3d4e983a 	sll	r7,r7,r21
   4b7c4:	3508d83a 	srl	r4,r6,r20
   4b7c8:	8d2cd83a 	srl	r22,r17,r20
   4b7cc:	8504d83a 	srl	r2,r16,r20
   4b7d0:	21e4b03a 	or	r18,r4,r7
   4b7d4:	8d62983a 	sll	r17,r17,r21
   4b7d8:	9026d43a 	srli	r19,r18,16
   4b7dc:	354c983a 	sll	r6,r6,r21
   4b7e0:	1444b03a 	or	r2,r2,r17
   4b7e4:	b009883a 	mov	r4,r22
   4b7e8:	980b883a 	mov	r5,r19
   4b7ec:	d9800115 	stw	r6,4(sp)
   4b7f0:	d8800015 	stw	r2,0(sp)
   4b7f4:	004bbf80 	call	4bbf8 <__umodsi3>
   4b7f8:	980b883a 	mov	r5,r19
   4b7fc:	b009883a 	mov	r4,r22
   4b800:	102f883a 	mov	r23,r2
   4b804:	947fffcc 	andi	r17,r18,65535
   4b808:	004bb940 	call	4bb94 <__udivsi3>
   4b80c:	8809883a 	mov	r4,r17
   4b810:	100b883a 	mov	r5,r2
   4b814:	1039883a 	mov	fp,r2
   4b818:	004bc540 	call	4bc54 <__mulsi3>
   4b81c:	d8c00017 	ldw	r3,0(sp)
   4b820:	b82e943a 	slli	r23,r23,16
   4b824:	8560983a 	sll	r16,r16,r21
   4b828:	1808d43a 	srli	r4,r3,16
   4b82c:	b908b03a 	or	r4,r23,r4
   4b830:	2080062e 	bgeu	r4,r2,4b84c <__umoddi3+0x370>
   4b834:	2489883a 	add	r4,r4,r18
   4b838:	e17fffc4 	addi	r5,fp,-1
   4b83c:	24809436 	bltu	r4,r18,4ba90 <__umoddi3+0x5b4>
   4b840:	2080932e 	bgeu	r4,r2,4ba90 <__umoddi3+0x5b4>
   4b844:	e73fff84 	addi	fp,fp,-2
   4b848:	2489883a 	add	r4,r4,r18
   4b84c:	20adc83a 	sub	r22,r4,r2
   4b850:	980b883a 	mov	r5,r19
   4b854:	b009883a 	mov	r4,r22
   4b858:	004bbf80 	call	4bbf8 <__umodsi3>
   4b85c:	980b883a 	mov	r5,r19
   4b860:	b009883a 	mov	r4,r22
   4b864:	102f883a 	mov	r23,r2
   4b868:	004bb940 	call	4bb94 <__udivsi3>
   4b86c:	100b883a 	mov	r5,r2
   4b870:	8809883a 	mov	r4,r17
   4b874:	d8800215 	stw	r2,8(sp)
   4b878:	004bc540 	call	4bc54 <__mulsi3>
   4b87c:	d8c00017 	ldw	r3,0(sp)
   4b880:	b82e943a 	slli	r23,r23,16
   4b884:	d9400217 	ldw	r5,8(sp)
   4b888:	1c7fffcc 	andi	r17,r3,65535
   4b88c:	bc62b03a 	or	r17,r23,r17
   4b890:	8880062e 	bgeu	r17,r2,4b8ac <__umoddi3+0x3d0>
   4b894:	8ca3883a 	add	r17,r17,r18
   4b898:	28ffffc4 	addi	r3,r5,-1
   4b89c:	8c807a36 	bltu	r17,r18,4ba88 <__umoddi3+0x5ac>
   4b8a0:	8880792e 	bgeu	r17,r2,4ba88 <__umoddi3+0x5ac>
   4b8a4:	297fff84 	addi	r5,r5,-2
   4b8a8:	8ca3883a 	add	r17,r17,r18
   4b8ac:	e02c943a 	slli	r22,fp,16
   4b8b0:	d9c00117 	ldw	r7,4(sp)
   4b8b4:	29bfffcc 	andi	r6,r5,65535
   4b8b8:	b16cb03a 	or	r22,r22,r5
   4b8bc:	38ffffcc 	andi	r3,r7,65535
   4b8c0:	b02cd43a 	srli	r22,r22,16
   4b8c4:	180b883a 	mov	r5,r3
   4b8c8:	3009883a 	mov	r4,r6
   4b8cc:	3838d43a 	srli	fp,r7,16
   4b8d0:	182f883a 	mov	r23,r3
   4b8d4:	d9800015 	stw	r6,0(sp)
   4b8d8:	88a3c83a 	sub	r17,r17,r2
   4b8dc:	004bc540 	call	4bc54 <__mulsi3>
   4b8e0:	b80b883a 	mov	r5,r23
   4b8e4:	b009883a 	mov	r4,r22
   4b8e8:	102f883a 	mov	r23,r2
   4b8ec:	004bc540 	call	4bc54 <__mulsi3>
   4b8f0:	e00b883a 	mov	r5,fp
   4b8f4:	b009883a 	mov	r4,r22
   4b8f8:	102d883a 	mov	r22,r2
   4b8fc:	004bc540 	call	4bc54 <__mulsi3>
   4b900:	d9800017 	ldw	r6,0(sp)
   4b904:	e00b883a 	mov	r5,fp
   4b908:	1039883a 	mov	fp,r2
   4b90c:	3009883a 	mov	r4,r6
   4b910:	004bc540 	call	4bc54 <__mulsi3>
   4b914:	b808d43a 	srli	r4,r23,16
   4b918:	1585883a 	add	r2,r2,r22
   4b91c:	2089883a 	add	r4,r4,r2
   4b920:	2580022e 	bgeu	r4,r22,4b92c <__umoddi3+0x450>
   4b924:	00800074 	movhi	r2,1
   4b928:	e0b9883a 	add	fp,fp,r2
   4b92c:	2006d43a 	srli	r3,r4,16
   4b930:	2008943a 	slli	r4,r4,16
   4b934:	bdffffcc 	andi	r23,r23,65535
   4b938:	1f07883a 	add	r3,r3,fp
   4b93c:	25c9883a 	add	r4,r4,r23
   4b940:	88c03a36 	bltu	r17,r3,4ba2c <__umoddi3+0x550>
   4b944:	88c03826 	beq	r17,r3,4ba28 <__umoddi3+0x54c>
   4b948:	8109c83a 	sub	r4,r16,r4
   4b94c:	8121803a 	cmpltu	r16,r16,r4
   4b950:	88c7c83a 	sub	r3,r17,r3
   4b954:	1c07c83a 	sub	r3,r3,r16
   4b958:	1d04983a 	sll	r2,r3,r20
   4b95c:	2548d83a 	srl	r4,r4,r21
   4b960:	1d46d83a 	srl	r3,r3,r21
   4b964:	1104b03a 	or	r2,r2,r4
   4b968:	003f2806 	br	4b60c <__umoddi3+0x130>
   4b96c:	a4a8983a 	sll	r20,r20,r18
   4b970:	8da6d83a 	srl	r19,r17,r22
   4b974:	8ca2983a 	sll	r17,r17,r18
   4b978:	a02ed43a 	srli	r23,r20,16
   4b97c:	9809883a 	mov	r4,r19
   4b980:	85acd83a 	srl	r22,r16,r22
   4b984:	b80b883a 	mov	r5,r23
   4b988:	004bbf80 	call	4bbf8 <__umodsi3>
   4b98c:	9809883a 	mov	r4,r19
   4b990:	b80b883a 	mov	r5,r23
   4b994:	b46cb03a 	or	r22,r22,r17
   4b998:	a57fffcc 	andi	r21,r20,65535
   4b99c:	1023883a 	mov	r17,r2
   4b9a0:	004bb940 	call	4bb94 <__udivsi3>
   4b9a4:	a809883a 	mov	r4,r21
   4b9a8:	100b883a 	mov	r5,r2
   4b9ac:	004bc540 	call	4bc54 <__mulsi3>
   4b9b0:	8822943a 	slli	r17,r17,16
   4b9b4:	b008d43a 	srli	r4,r22,16
   4b9b8:	84a6983a 	sll	r19,r16,r18
   4b9bc:	8908b03a 	or	r4,r17,r4
   4b9c0:	2080042e 	bgeu	r4,r2,4b9d4 <__umoddi3+0x4f8>
   4b9c4:	2509883a 	add	r4,r4,r20
   4b9c8:	25000236 	bltu	r4,r20,4b9d4 <__umoddi3+0x4f8>
   4b9cc:	2080012e 	bgeu	r4,r2,4b9d4 <__umoddi3+0x4f8>
   4b9d0:	2509883a 	add	r4,r4,r20
   4b9d4:	20a1c83a 	sub	r16,r4,r2
   4b9d8:	8009883a 	mov	r4,r16
   4b9dc:	b80b883a 	mov	r5,r23
   4b9e0:	004bbf80 	call	4bbf8 <__umodsi3>
   4b9e4:	8009883a 	mov	r4,r16
   4b9e8:	1021883a 	mov	r16,r2
   4b9ec:	b80b883a 	mov	r5,r23
   4b9f0:	8020943a 	slli	r16,r16,16
   4b9f4:	004bb940 	call	4bb94 <__udivsi3>
   4b9f8:	100b883a 	mov	r5,r2
   4b9fc:	a809883a 	mov	r4,r21
   4ba00:	b47fffcc 	andi	r17,r22,65535
   4ba04:	004bc540 	call	4bc54 <__mulsi3>
   4ba08:	8462b03a 	or	r17,r16,r17
   4ba0c:	8880042e 	bgeu	r17,r2,4ba20 <__umoddi3+0x544>
   4ba10:	8d23883a 	add	r17,r17,r20
   4ba14:	8d000236 	bltu	r17,r20,4ba20 <__umoddi3+0x544>
   4ba18:	8880012e 	bgeu	r17,r2,4ba20 <__umoddi3+0x544>
   4ba1c:	8d23883a 	add	r17,r17,r20
   4ba20:	88a3c83a 	sub	r17,r17,r2
   4ba24:	003f2f06 	br	4b6e4 <__umoddi3+0x208>
   4ba28:	813fc72e 	bgeu	r16,r4,4b948 <__umoddi3+0x46c>
   4ba2c:	d8800117 	ldw	r2,4(sp)
   4ba30:	20a7c83a 	sub	r19,r4,r2
   4ba34:	24c9803a 	cmpltu	r4,r4,r19
   4ba38:	2489883a 	add	r4,r4,r18
   4ba3c:	1907c83a 	sub	r3,r3,r4
   4ba40:	9809883a 	mov	r4,r19
   4ba44:	003fc006 	br	4b948 <__umoddi3+0x46c>
   4ba48:	3006d43a 	srli	r3,r6,16
   4ba4c:	04800404 	movi	r18,16
   4ba50:	003ebb06 	br	4b540 <__umoddi3+0x64>
   4ba54:	3007883a 	mov	r3,r6
   4ba58:	003eb906 	br	4b540 <__umoddi3+0x64>
   4ba5c:	3808d43a 	srli	r4,r7,16
   4ba60:	02000404 	movi	r8,16
   4ba64:	003efc06 	br	4b658 <__umoddi3+0x17c>
   4ba68:	a006d43a 	srli	r3,r20,16
   4ba6c:	04800404 	movi	r18,16
   4ba70:	003f1206 	br	4b6bc <__umoddi3+0x1e0>
   4ba74:	a007883a 	mov	r3,r20
   4ba78:	003f1006 	br	4b6bc <__umoddi3+0x1e0>
   4ba7c:	3809883a 	mov	r4,r7
   4ba80:	0011883a 	mov	r8,zero
   4ba84:	003ef406 	br	4b658 <__umoddi3+0x17c>
   4ba88:	180b883a 	mov	r5,r3
   4ba8c:	003f8706 	br	4b8ac <__umoddi3+0x3d0>
   4ba90:	2839883a 	mov	fp,r5
   4ba94:	003f6d06 	br	4b84c <__umoddi3+0x370>
   4ba98:	2509883a 	add	r4,r4,r20
   4ba9c:	003f2206 	br	4b728 <__umoddi3+0x24c>

0004baa0 <__divsi3>:
   4baa0:	20001a16 	blt	r4,zero,4bb0c <__divsi3+0x6c>
   4baa4:	000f883a 	mov	r7,zero
   4baa8:	2800020e 	bge	r5,zero,4bab4 <__divsi3+0x14>
   4baac:	014bc83a 	sub	r5,zero,r5
   4bab0:	39c0005c 	xori	r7,r7,1
   4bab4:	200d883a 	mov	r6,r4
   4bab8:	00c00044 	movi	r3,1
   4babc:	2900092e 	bgeu	r5,r4,4bae4 <__divsi3+0x44>
   4bac0:	00800804 	movi	r2,32
   4bac4:	00c00044 	movi	r3,1
   4bac8:	00000106 	br	4bad0 <__divsi3+0x30>
   4bacc:	10001226 	beq	r2,zero,4bb18 <__divsi3+0x78>
   4bad0:	294b883a 	add	r5,r5,r5
   4bad4:	10bfffc4 	addi	r2,r2,-1
   4bad8:	18c7883a 	add	r3,r3,r3
   4badc:	293ffb36 	bltu	r5,r4,4bacc <__divsi3+0x2c>
   4bae0:	18000d26 	beq	r3,zero,4bb18 <__divsi3+0x78>
   4bae4:	0005883a 	mov	r2,zero
   4bae8:	31400236 	bltu	r6,r5,4baf4 <__divsi3+0x54>
   4baec:	314dc83a 	sub	r6,r6,r5
   4baf0:	10c4b03a 	or	r2,r2,r3
   4baf4:	1806d07a 	srli	r3,r3,1
   4baf8:	280ad07a 	srli	r5,r5,1
   4bafc:	183ffa1e 	bne	r3,zero,4bae8 <__divsi3+0x48>
   4bb00:	38000126 	beq	r7,zero,4bb08 <__divsi3+0x68>
   4bb04:	0085c83a 	sub	r2,zero,r2
   4bb08:	f800283a 	ret
   4bb0c:	0109c83a 	sub	r4,zero,r4
   4bb10:	01c00044 	movi	r7,1
   4bb14:	003fe406 	br	4baa8 <__divsi3+0x8>
   4bb18:	0005883a 	mov	r2,zero
   4bb1c:	003ff806 	br	4bb00 <__divsi3+0x60>

0004bb20 <__modsi3>:
   4bb20:	20001916 	blt	r4,zero,4bb88 <__modsi3+0x68>
   4bb24:	000f883a 	mov	r7,zero
   4bb28:	2005883a 	mov	r2,r4
   4bb2c:	2800010e 	bge	r5,zero,4bb34 <__modsi3+0x14>
   4bb30:	014bc83a 	sub	r5,zero,r5
   4bb34:	00c00044 	movi	r3,1
   4bb38:	2900092e 	bgeu	r5,r4,4bb60 <__modsi3+0x40>
   4bb3c:	01800804 	movi	r6,32
   4bb40:	00c00044 	movi	r3,1
   4bb44:	00000106 	br	4bb4c <__modsi3+0x2c>
   4bb48:	30000d26 	beq	r6,zero,4bb80 <__modsi3+0x60>
   4bb4c:	294b883a 	add	r5,r5,r5
   4bb50:	31bfffc4 	addi	r6,r6,-1
   4bb54:	18c7883a 	add	r3,r3,r3
   4bb58:	293ffb36 	bltu	r5,r4,4bb48 <__modsi3+0x28>
   4bb5c:	18000826 	beq	r3,zero,4bb80 <__modsi3+0x60>
   4bb60:	1806d07a 	srli	r3,r3,1
   4bb64:	11400136 	bltu	r2,r5,4bb6c <__modsi3+0x4c>
   4bb68:	1145c83a 	sub	r2,r2,r5
   4bb6c:	280ad07a 	srli	r5,r5,1
   4bb70:	183ffb1e 	bne	r3,zero,4bb60 <__modsi3+0x40>
   4bb74:	38000126 	beq	r7,zero,4bb7c <__modsi3+0x5c>
   4bb78:	0085c83a 	sub	r2,zero,r2
   4bb7c:	f800283a 	ret
   4bb80:	2005883a 	mov	r2,r4
   4bb84:	003ffb06 	br	4bb74 <__modsi3+0x54>
   4bb88:	0109c83a 	sub	r4,zero,r4
   4bb8c:	01c00044 	movi	r7,1
   4bb90:	003fe506 	br	4bb28 <__modsi3+0x8>

0004bb94 <__udivsi3>:
   4bb94:	200d883a 	mov	r6,r4
   4bb98:	2900152e 	bgeu	r5,r4,4bbf0 <__udivsi3+0x5c>
   4bb9c:	28001416 	blt	r5,zero,4bbf0 <__udivsi3+0x5c>
   4bba0:	00800804 	movi	r2,32
   4bba4:	00c00044 	movi	r3,1
   4bba8:	00000206 	br	4bbb4 <__udivsi3+0x20>
   4bbac:	10000e26 	beq	r2,zero,4bbe8 <__udivsi3+0x54>
   4bbb0:	28000516 	blt	r5,zero,4bbc8 <__udivsi3+0x34>
   4bbb4:	294b883a 	add	r5,r5,r5
   4bbb8:	10bfffc4 	addi	r2,r2,-1
   4bbbc:	18c7883a 	add	r3,r3,r3
   4bbc0:	293ffa36 	bltu	r5,r4,4bbac <__udivsi3+0x18>
   4bbc4:	18000826 	beq	r3,zero,4bbe8 <__udivsi3+0x54>
   4bbc8:	0005883a 	mov	r2,zero
   4bbcc:	31400236 	bltu	r6,r5,4bbd8 <__udivsi3+0x44>
   4bbd0:	314dc83a 	sub	r6,r6,r5
   4bbd4:	10c4b03a 	or	r2,r2,r3
   4bbd8:	1806d07a 	srli	r3,r3,1
   4bbdc:	280ad07a 	srli	r5,r5,1
   4bbe0:	183ffa1e 	bne	r3,zero,4bbcc <__udivsi3+0x38>
   4bbe4:	f800283a 	ret
   4bbe8:	0005883a 	mov	r2,zero
   4bbec:	f800283a 	ret
   4bbf0:	00c00044 	movi	r3,1
   4bbf4:	003ff406 	br	4bbc8 <__udivsi3+0x34>

0004bbf8 <__umodsi3>:
   4bbf8:	2005883a 	mov	r2,r4
   4bbfc:	2900132e 	bgeu	r5,r4,4bc4c <__umodsi3+0x54>
   4bc00:	28001216 	blt	r5,zero,4bc4c <__umodsi3+0x54>
   4bc04:	01800804 	movi	r6,32
   4bc08:	00c00044 	movi	r3,1
   4bc0c:	00000206 	br	4bc18 <__umodsi3+0x20>
   4bc10:	30000c26 	beq	r6,zero,4bc44 <__umodsi3+0x4c>
   4bc14:	28000516 	blt	r5,zero,4bc2c <__umodsi3+0x34>
   4bc18:	294b883a 	add	r5,r5,r5
   4bc1c:	31bfffc4 	addi	r6,r6,-1
   4bc20:	18c7883a 	add	r3,r3,r3
   4bc24:	293ffa36 	bltu	r5,r4,4bc10 <__umodsi3+0x18>
   4bc28:	18000626 	beq	r3,zero,4bc44 <__umodsi3+0x4c>
   4bc2c:	1806d07a 	srli	r3,r3,1
   4bc30:	11400136 	bltu	r2,r5,4bc38 <__umodsi3+0x40>
   4bc34:	1145c83a 	sub	r2,r2,r5
   4bc38:	280ad07a 	srli	r5,r5,1
   4bc3c:	183ffb1e 	bne	r3,zero,4bc2c <__umodsi3+0x34>
   4bc40:	f800283a 	ret
   4bc44:	2005883a 	mov	r2,r4
   4bc48:	f800283a 	ret
   4bc4c:	00c00044 	movi	r3,1
   4bc50:	003ff606 	br	4bc2c <__umodsi3+0x34>

0004bc54 <__mulsi3>:
   4bc54:	0005883a 	mov	r2,zero
   4bc58:	20000726 	beq	r4,zero,4bc78 <__mulsi3+0x24>
   4bc5c:	20c0004c 	andi	r3,r4,1
   4bc60:	2008d07a 	srli	r4,r4,1
   4bc64:	18000126 	beq	r3,zero,4bc6c <__mulsi3+0x18>
   4bc68:	1145883a 	add	r2,r2,r5
   4bc6c:	294b883a 	add	r5,r5,r5
   4bc70:	203ffa1e 	bne	r4,zero,4bc5c <__mulsi3+0x8>
   4bc74:	f800283a 	ret
   4bc78:	f800283a 	ret

0004bc7c <__adddf3>:
   4bc7c:	02000434 	movhi	r8,16
   4bc80:	423fffc4 	addi	r8,r8,-1
   4bc84:	2806d53a 	srli	r3,r5,20
   4bc88:	3804d53a 	srli	r2,r7,20
   4bc8c:	2a14703a 	and	r10,r5,r8
   4bc90:	3a12703a 	and	r9,r7,r8
   4bc94:	280ad7fa 	srli	r5,r5,31
   4bc98:	501490fa 	slli	r10,r10,3
   4bc9c:	2018d77a 	srli	r12,r4,29
   4bca0:	481290fa 	slli	r9,r9,3
   4bca4:	3016d77a 	srli	r11,r6,29
   4bca8:	380ed7fa 	srli	r7,r7,31
   4bcac:	defffb04 	addi	sp,sp,-20
   4bcb0:	dc800215 	stw	r18,8(sp)
   4bcb4:	dc000015 	stw	r16,0(sp)
   4bcb8:	1c81ffcc 	andi	r18,r3,2047
   4bcbc:	1081ffcc 	andi	r2,r2,2047
   4bcc0:	dfc00415 	stw	ra,16(sp)
   4bcc4:	dcc00315 	stw	r19,12(sp)
   4bcc8:	dc400115 	stw	r17,4(sp)
   4bccc:	201c90fa 	slli	r14,r4,3
   4bcd0:	301a90fa 	slli	r13,r6,3
   4bcd4:	2821883a 	mov	r16,r5
   4bcd8:	6294b03a 	or	r10,r12,r10
   4bcdc:	5a52b03a 	or	r9,r11,r9
   4bce0:	9087c83a 	sub	r3,r18,r2
   4bce4:	29c06126 	beq	r5,r7,4be6c <__adddf3+0x1f0>
   4bce8:	00c0550e 	bge	zero,r3,4be40 <__adddf3+0x1c4>
   4bcec:	10007326 	beq	r2,zero,4bebc <__adddf3+0x240>
   4bcf0:	9081ffd8 	cmpnei	r2,r18,2047
   4bcf4:	1000bd26 	beq	r2,zero,4bfec <__adddf3+0x370>
   4bcf8:	4a402034 	orhi	r9,r9,128
   4bcfc:	18800e48 	cmpgei	r2,r3,57
   4bd00:	1000ef1e 	bne	r2,zero,4c0c0 <__adddf3+0x444>
   4bd04:	18800808 	cmpgei	r2,r3,32
   4bd08:	1001321e 	bne	r2,zero,4c1d4 <__adddf3+0x558>
   4bd0c:	00800804 	movi	r2,32
   4bd10:	10c5c83a 	sub	r2,r2,r3
   4bd14:	68c8d83a 	srl	r4,r13,r3
   4bd18:	48a2983a 	sll	r17,r9,r2
   4bd1c:	689a983a 	sll	r13,r13,r2
   4bd20:	48c6d83a 	srl	r3,r9,r3
   4bd24:	8922b03a 	or	r17,r17,r4
   4bd28:	681ac03a 	cmpne	r13,r13,zero
   4bd2c:	8b62b03a 	or	r17,r17,r13
   4bd30:	50d5c83a 	sub	r10,r10,r3
   4bd34:	7463c83a 	sub	r17,r14,r17
   4bd38:	7451803a 	cmpltu	r8,r14,r17
   4bd3c:	5211c83a 	sub	r8,r10,r8
   4bd40:	4080202c 	andhi	r2,r8,128
   4bd44:	10008d26 	beq	r2,zero,4bf7c <__adddf3+0x300>
   4bd48:	02402034 	movhi	r9,128
   4bd4c:	4a7fffc4 	addi	r9,r9,-1
   4bd50:	4266703a 	and	r19,r8,r9
   4bd54:	9800b326 	beq	r19,zero,4c024 <__adddf3+0x3a8>
   4bd58:	9809883a 	mov	r4,r19
   4bd5c:	004e3680 	call	4e368 <__clzsi2>
   4bd60:	10fffe04 	addi	r3,r2,-8
   4bd64:	02000804 	movi	r8,32
   4bd68:	40d1c83a 	sub	r8,r8,r3
   4bd6c:	8a10d83a 	srl	r8,r17,r8
   4bd70:	98d2983a 	sll	r9,r19,r3
   4bd74:	88e2983a 	sll	r17,r17,r3
   4bd78:	4250b03a 	or	r8,r8,r9
   4bd7c:	1c80b216 	blt	r3,r18,4c048 <__adddf3+0x3cc>
   4bd80:	1c87c83a 	sub	r3,r3,r18
   4bd84:	19000044 	addi	r4,r3,1
   4bd88:	20800808 	cmpgei	r2,r4,32
   4bd8c:	10006f1e 	bne	r2,zero,4bf4c <__adddf3+0x2d0>
   4bd90:	00800804 	movi	r2,32
   4bd94:	1105c83a 	sub	r2,r2,r4
   4bd98:	8906d83a 	srl	r3,r17,r4
   4bd9c:	88a2983a 	sll	r17,r17,r2
   4bda0:	4084983a 	sll	r2,r8,r2
   4bda4:	4110d83a 	srl	r8,r8,r4
   4bda8:	8822c03a 	cmpne	r17,r17,zero
   4bdac:	10c4b03a 	or	r2,r2,r3
   4bdb0:	1462b03a 	or	r17,r2,r17
   4bdb4:	0025883a 	mov	r18,zero
   4bdb8:	888001cc 	andi	r2,r17,7
   4bdbc:	10000726 	beq	r2,zero,4bddc <__adddf3+0x160>
   4bdc0:	888003cc 	andi	r2,r17,15
   4bdc4:	10800120 	cmpeqi	r2,r2,4
   4bdc8:	1000041e 	bne	r2,zero,4bddc <__adddf3+0x160>
   4bdcc:	88c00104 	addi	r3,r17,4
   4bdd0:	1c63803a 	cmpltu	r17,r3,r17
   4bdd4:	4451883a 	add	r8,r8,r17
   4bdd8:	1823883a 	mov	r17,r3
   4bddc:	4080202c 	andhi	r2,r8,128
   4bde0:	10006826 	beq	r2,zero,4bf84 <__adddf3+0x308>
   4bde4:	90c00044 	addi	r3,r18,1
   4bde8:	1881ffe0 	cmpeqi	r2,r3,2047
   4bdec:	18c1ffcc 	andi	r3,r3,2047
   4bdf0:	10007a1e 	bne	r2,zero,4bfdc <__adddf3+0x360>
   4bdf4:	00bfe034 	movhi	r2,65408
   4bdf8:	10bfffc4 	addi	r2,r2,-1
   4bdfc:	4090703a 	and	r8,r8,r2
   4be00:	4004977a 	slli	r2,r8,29
   4be04:	4010927a 	slli	r8,r8,9
   4be08:	8822d0fa 	srli	r17,r17,3
   4be0c:	4010d33a 	srli	r8,r8,12
   4be10:	1444b03a 	or	r2,r2,r17
   4be14:	1806953a 	slli	r3,r3,20
   4be18:	802097fa 	slli	r16,r16,31
   4be1c:	1a06b03a 	or	r3,r3,r8
   4be20:	1c06b03a 	or	r3,r3,r16
   4be24:	dfc00417 	ldw	ra,16(sp)
   4be28:	dcc00317 	ldw	r19,12(sp)
   4be2c:	dc800217 	ldw	r18,8(sp)
   4be30:	dc400117 	ldw	r17,4(sp)
   4be34:	dc000017 	ldw	r16,0(sp)
   4be38:	dec00504 	addi	sp,sp,20
   4be3c:	f800283a 	ret
   4be40:	18002626 	beq	r3,zero,4bedc <__adddf3+0x260>
   4be44:	1487c83a 	sub	r3,r2,r18
   4be48:	9000ba1e 	bne	r18,zero,4c134 <__adddf3+0x4b8>
   4be4c:	5388b03a 	or	r4,r10,r14
   4be50:	20011826 	beq	r4,zero,4c2b4 <__adddf3+0x638>
   4be54:	193fffc4 	addi	r4,r3,-1
   4be58:	20015726 	beq	r4,zero,4c3b8 <__adddf3+0x73c>
   4be5c:	18c1ffd8 	cmpnei	r3,r3,2047
   4be60:	18013026 	beq	r3,zero,4c324 <__adddf3+0x6a8>
   4be64:	2007883a 	mov	r3,r4
   4be68:	0000b506 	br	4c140 <__adddf3+0x4c4>
   4be6c:	00c07b0e 	bge	zero,r3,4c05c <__adddf3+0x3e0>
   4be70:	10002e26 	beq	r2,zero,4bf2c <__adddf3+0x2b0>
   4be74:	9081ffd8 	cmpnei	r2,r18,2047
   4be78:	10005c26 	beq	r2,zero,4bfec <__adddf3+0x370>
   4be7c:	4a402034 	orhi	r9,r9,128
   4be80:	18800e48 	cmpgei	r2,r3,57
   4be84:	10004b1e 	bne	r2,zero,4bfb4 <__adddf3+0x338>
   4be88:	18800808 	cmpgei	r2,r3,32
   4be8c:	1000ec26 	beq	r2,zero,4c240 <__adddf3+0x5c4>
   4be90:	1c7ff804 	addi	r17,r3,-32
   4be94:	19000820 	cmpeqi	r4,r3,32
   4be98:	4c44d83a 	srl	r2,r9,r17
   4be9c:	2000041e 	bne	r4,zero,4beb0 <__adddf3+0x234>
   4bea0:	01001004 	movi	r4,64
   4bea4:	20c7c83a 	sub	r3,r4,r3
   4bea8:	48d2983a 	sll	r9,r9,r3
   4beac:	6a5ab03a 	or	r13,r13,r9
   4beb0:	6822c03a 	cmpne	r17,r13,zero
   4beb4:	88a2b03a 	or	r17,r17,r2
   4beb8:	00004006 	br	4bfbc <__adddf3+0x340>
   4bebc:	4b44b03a 	or	r2,r9,r13
   4bec0:	10008226 	beq	r2,zero,4c0cc <__adddf3+0x450>
   4bec4:	18bfffc4 	addi	r2,r3,-1
   4bec8:	10011026 	beq	r2,zero,4c30c <__adddf3+0x690>
   4becc:	18c1ffd8 	cmpnei	r3,r3,2047
   4bed0:	18004626 	beq	r3,zero,4bfec <__adddf3+0x370>
   4bed4:	1007883a 	mov	r3,r2
   4bed8:	003f8806 	br	4bcfc <__adddf3+0x80>
   4bedc:	90800044 	addi	r2,r18,1
   4bee0:	1081ff8c 	andi	r2,r2,2046
   4bee4:	1000a51e 	bne	r2,zero,4c17c <__adddf3+0x500>
   4bee8:	538ab03a 	or	r5,r10,r14
   4beec:	4b44b03a 	or	r2,r9,r13
   4bef0:	9000f81e 	bne	r18,zero,4c2d4 <__adddf3+0x658>
   4bef4:	28013726 	beq	r5,zero,4c3d4 <__adddf3+0x758>
   4bef8:	10011226 	beq	r2,zero,4c344 <__adddf3+0x6c8>
   4befc:	7363c83a 	sub	r17,r14,r13
   4bf00:	7445803a 	cmpltu	r2,r14,r17
   4bf04:	5251c83a 	sub	r8,r10,r9
   4bf08:	4091c83a 	sub	r8,r8,r2
   4bf0c:	4080202c 	andhi	r2,r8,128
   4bf10:	10018f26 	beq	r2,zero,4c550 <__adddf3+0x8d4>
   4bf14:	6ba3c83a 	sub	r17,r13,r14
   4bf18:	4a95c83a 	sub	r10,r9,r10
   4bf1c:	6c51803a 	cmpltu	r8,r13,r17
   4bf20:	5211c83a 	sub	r8,r10,r8
   4bf24:	3821883a 	mov	r16,r7
   4bf28:	003fa306 	br	4bdb8 <__adddf3+0x13c>
   4bf2c:	4b44b03a 	or	r2,r9,r13
   4bf30:	10006626 	beq	r2,zero,4c0cc <__adddf3+0x450>
   4bf34:	18bfffc4 	addi	r2,r3,-1
   4bf38:	1000ec26 	beq	r2,zero,4c2ec <__adddf3+0x670>
   4bf3c:	18c1ffd8 	cmpnei	r3,r3,2047
   4bf40:	18012d26 	beq	r3,zero,4c3f8 <__adddf3+0x77c>
   4bf44:	1007883a 	mov	r3,r2
   4bf48:	003fcd06 	br	4be80 <__adddf3+0x204>
   4bf4c:	18fff844 	addi	r3,r3,-31
   4bf50:	20800820 	cmpeqi	r2,r4,32
   4bf54:	40c6d83a 	srl	r3,r8,r3
   4bf58:	1000041e 	bne	r2,zero,4bf6c <__adddf3+0x2f0>
   4bf5c:	00801004 	movi	r2,64
   4bf60:	1109c83a 	sub	r4,r2,r4
   4bf64:	4110983a 	sll	r8,r8,r4
   4bf68:	8a22b03a 	or	r17,r17,r8
   4bf6c:	8822c03a 	cmpne	r17,r17,zero
   4bf70:	88e2b03a 	or	r17,r17,r3
   4bf74:	0011883a 	mov	r8,zero
   4bf78:	0025883a 	mov	r18,zero
   4bf7c:	888001cc 	andi	r2,r17,7
   4bf80:	103f8f1e 	bne	r2,zero,4bdc0 <__adddf3+0x144>
   4bf84:	8822d0fa 	srli	r17,r17,3
   4bf88:	4004977a 	slli	r2,r8,29
   4bf8c:	4014d0fa 	srli	r10,r8,3
   4bf90:	9007883a 	mov	r3,r18
   4bf94:	8884b03a 	or	r2,r17,r2
   4bf98:	1901ffe0 	cmpeqi	r4,r3,2047
   4bf9c:	2000191e 	bne	r4,zero,4c004 <__adddf3+0x388>
   4bfa0:	02000434 	movhi	r8,16
   4bfa4:	423fffc4 	addi	r8,r8,-1
   4bfa8:	5210703a 	and	r8,r10,r8
   4bfac:	18c1ffcc 	andi	r3,r3,2047
   4bfb0:	003f9806 	br	4be14 <__adddf3+0x198>
   4bfb4:	4b62b03a 	or	r17,r9,r13
   4bfb8:	8822c03a 	cmpne	r17,r17,zero
   4bfbc:	8ba3883a 	add	r17,r17,r14
   4bfc0:	8b91803a 	cmpltu	r8,r17,r14
   4bfc4:	4291883a 	add	r8,r8,r10
   4bfc8:	4080202c 	andhi	r2,r8,128
   4bfcc:	103feb26 	beq	r2,zero,4bf7c <__adddf3+0x300>
   4bfd0:	94800044 	addi	r18,r18,1
   4bfd4:	9081ffe0 	cmpeqi	r2,r18,2047
   4bfd8:	10007426 	beq	r2,zero,4c1ac <__adddf3+0x530>
   4bfdc:	00c1ffc4 	movi	r3,2047
   4bfe0:	0011883a 	mov	r8,zero
   4bfe4:	0005883a 	mov	r2,zero
   4bfe8:	003f8a06 	br	4be14 <__adddf3+0x198>
   4bfec:	500a977a 	slli	r5,r10,29
   4bff0:	00c80034 	movhi	r3,8192
   4bff4:	18ffffc4 	addi	r3,r3,-1
   4bff8:	5014d0fa 	srli	r10,r10,3
   4bffc:	20c4703a 	and	r2,r4,r3
   4c000:	1144b03a 	or	r2,r2,r5
   4c004:	1286b03a 	or	r3,r2,r10
   4c008:	18015426 	beq	r3,zero,4c55c <__adddf3+0x8e0>
   4c00c:	00c00434 	movhi	r3,16
   4c010:	18ffffc4 	addi	r3,r3,-1
   4c014:	52000234 	orhi	r8,r10,8
   4c018:	40d0703a 	and	r8,r8,r3
   4c01c:	00c1ffc4 	movi	r3,2047
   4c020:	003f7c06 	br	4be14 <__adddf3+0x198>
   4c024:	8809883a 	mov	r4,r17
   4c028:	004e3680 	call	4e368 <__clzsi2>
   4c02c:	10c00604 	addi	r3,r2,24
   4c030:	19000808 	cmpgei	r4,r3,32
   4c034:	203f4b26 	beq	r4,zero,4bd64 <__adddf3+0xe8>
   4c038:	123ffe04 	addi	r8,r2,-8
   4c03c:	8a10983a 	sll	r8,r17,r8
   4c040:	0023883a 	mov	r17,zero
   4c044:	1cbf4e0e 	bge	r3,r18,4bd80 <__adddf3+0x104>
   4c048:	00bfe034 	movhi	r2,65408
   4c04c:	10bfffc4 	addi	r2,r2,-1
   4c050:	90e5c83a 	sub	r18,r18,r3
   4c054:	4090703a 	and	r8,r8,r2
   4c058:	003f5706 	br	4bdb8 <__adddf3+0x13c>
   4c05c:	18002226 	beq	r3,zero,4c0e8 <__adddf3+0x46c>
   4c060:	1487c83a 	sub	r3,r2,r18
   4c064:	90006e26 	beq	r18,zero,4c220 <__adddf3+0x5a4>
   4c068:	1101ffd8 	cmpnei	r4,r2,2047
   4c06c:	2000e926 	beq	r4,zero,4c414 <__adddf3+0x798>
   4c070:	52802034 	orhi	r10,r10,128
   4c074:	19000e48 	cmpgei	r4,r3,57
   4c078:	2000b91e 	bne	r4,zero,4c360 <__adddf3+0x6e4>
   4c07c:	19000808 	cmpgei	r4,r3,32
   4c080:	2001101e 	bne	r4,zero,4c4c4 <__adddf3+0x848>
   4c084:	01000804 	movi	r4,32
   4c088:	20c9c83a 	sub	r4,r4,r3
   4c08c:	5122983a 	sll	r17,r10,r4
   4c090:	70cad83a 	srl	r5,r14,r3
   4c094:	7108983a 	sll	r4,r14,r4
   4c098:	50d4d83a 	srl	r10,r10,r3
   4c09c:	8962b03a 	or	r17,r17,r5
   4c0a0:	2008c03a 	cmpne	r4,r4,zero
   4c0a4:	8922b03a 	or	r17,r17,r4
   4c0a8:	4a93883a 	add	r9,r9,r10
   4c0ac:	8b63883a 	add	r17,r17,r13
   4c0b0:	8b51803a 	cmpltu	r8,r17,r13
   4c0b4:	4251883a 	add	r8,r8,r9
   4c0b8:	1025883a 	mov	r18,r2
   4c0bc:	003fc206 	br	4bfc8 <__adddf3+0x34c>
   4c0c0:	4b62b03a 	or	r17,r9,r13
   4c0c4:	8822c03a 	cmpne	r17,r17,zero
   4c0c8:	003f1a06 	br	4bd34 <__adddf3+0xb8>
   4c0cc:	500c977a 	slli	r6,r10,29
   4c0d0:	01480034 	movhi	r5,8192
   4c0d4:	297fffc4 	addi	r5,r5,-1
   4c0d8:	2144703a 	and	r2,r4,r5
   4c0dc:	5014d0fa 	srli	r10,r10,3
   4c0e0:	1184b03a 	or	r2,r2,r6
   4c0e4:	003fac06 	br	4bf98 <__adddf3+0x31c>
   4c0e8:	90800044 	addi	r2,r18,1
   4c0ec:	1141ff8c 	andi	r5,r2,2046
   4c0f0:	28005e1e 	bne	r5,zero,4c26c <__adddf3+0x5f0>
   4c0f4:	5384b03a 	or	r2,r10,r14
   4c0f8:	9000a71e 	bne	r18,zero,4c398 <__adddf3+0x71c>
   4c0fc:	1000e526 	beq	r2,zero,4c494 <__adddf3+0x818>
   4c100:	4b44b03a 	or	r2,r9,r13
   4c104:	10008f26 	beq	r2,zero,4c344 <__adddf3+0x6c8>
   4c108:	7363883a 	add	r17,r14,r13
   4c10c:	5255883a 	add	r10,r10,r9
   4c110:	8b91803a 	cmpltu	r8,r17,r14
   4c114:	5211883a 	add	r8,r10,r8
   4c118:	4080202c 	andhi	r2,r8,128
   4c11c:	103f9726 	beq	r2,zero,4bf7c <__adddf3+0x300>
   4c120:	00bfe034 	movhi	r2,65408
   4c124:	10bfffc4 	addi	r2,r2,-1
   4c128:	4090703a 	and	r8,r8,r2
   4c12c:	04800044 	movi	r18,1
   4c130:	003f9206 	br	4bf7c <__adddf3+0x300>
   4c134:	1101ffd8 	cmpnei	r4,r2,2047
   4c138:	20007a26 	beq	r4,zero,4c324 <__adddf3+0x6a8>
   4c13c:	52802034 	orhi	r10,r10,128
   4c140:	19000e48 	cmpgei	r4,r3,57
   4c144:	20002e1e 	bne	r4,zero,4c200 <__adddf3+0x584>
   4c148:	19000808 	cmpgei	r4,r3,32
   4c14c:	2000871e 	bne	r4,zero,4c36c <__adddf3+0x6f0>
   4c150:	01000804 	movi	r4,32
   4c154:	20c9c83a 	sub	r4,r4,r3
   4c158:	5122983a 	sll	r17,r10,r4
   4c15c:	70cad83a 	srl	r5,r14,r3
   4c160:	711c983a 	sll	r14,r14,r4
   4c164:	50d4d83a 	srl	r10,r10,r3
   4c168:	8962b03a 	or	r17,r17,r5
   4c16c:	701cc03a 	cmpne	r14,r14,zero
   4c170:	8ba2b03a 	or	r17,r17,r14
   4c174:	4a93c83a 	sub	r9,r9,r10
   4c178:	00002306 	br	4c208 <__adddf3+0x58c>
   4c17c:	7363c83a 	sub	r17,r14,r13
   4c180:	5267c83a 	sub	r19,r10,r9
   4c184:	7451803a 	cmpltu	r8,r14,r17
   4c188:	9a27c83a 	sub	r19,r19,r8
   4c18c:	9880202c 	andhi	r2,r19,128
   4c190:	1000421e 	bne	r2,zero,4c29c <__adddf3+0x620>
   4c194:	8cc4b03a 	or	r2,r17,r19
   4c198:	103eee1e 	bne	r2,zero,4bd54 <__adddf3+0xd8>
   4c19c:	0015883a 	mov	r10,zero
   4c1a0:	0021883a 	mov	r16,zero
   4c1a4:	003f7e06 	br	4bfa0 <__adddf3+0x324>
   4c1a8:	04800084 	movi	r18,2
   4c1ac:	00bfe034 	movhi	r2,65408
   4c1b0:	10bfffc4 	addi	r2,r2,-1
   4c1b4:	8806d07a 	srli	r3,r17,1
   4c1b8:	4090703a 	and	r8,r8,r2
   4c1bc:	400497fa 	slli	r2,r8,31
   4c1c0:	8c40004c 	andi	r17,r17,1
   4c1c4:	1c62b03a 	or	r17,r3,r17
   4c1c8:	4010d07a 	srli	r8,r8,1
   4c1cc:	1462b03a 	or	r17,r2,r17
   4c1d0:	003ef906 	br	4bdb8 <__adddf3+0x13c>
   4c1d4:	1c7ff804 	addi	r17,r3,-32
   4c1d8:	19000820 	cmpeqi	r4,r3,32
   4c1dc:	4c44d83a 	srl	r2,r9,r17
   4c1e0:	2000041e 	bne	r4,zero,4c1f4 <__adddf3+0x578>
   4c1e4:	01001004 	movi	r4,64
   4c1e8:	20c7c83a 	sub	r3,r4,r3
   4c1ec:	48d2983a 	sll	r9,r9,r3
   4c1f0:	6a5ab03a 	or	r13,r13,r9
   4c1f4:	6822c03a 	cmpne	r17,r13,zero
   4c1f8:	88a2b03a 	or	r17,r17,r2
   4c1fc:	003ecd06 	br	4bd34 <__adddf3+0xb8>
   4c200:	5394b03a 	or	r10,r10,r14
   4c204:	5022c03a 	cmpne	r17,r10,zero
   4c208:	6c63c83a 	sub	r17,r13,r17
   4c20c:	6c51803a 	cmpltu	r8,r13,r17
   4c210:	4a11c83a 	sub	r8,r9,r8
   4c214:	3821883a 	mov	r16,r7
   4c218:	1025883a 	mov	r18,r2
   4c21c:	003ec806 	br	4bd40 <__adddf3+0xc4>
   4c220:	5388b03a 	or	r4,r10,r14
   4c224:	20008226 	beq	r4,zero,4c430 <__adddf3+0x7b4>
   4c228:	193fffc4 	addi	r4,r3,-1
   4c22c:	2000b026 	beq	r4,zero,4c4f0 <__adddf3+0x874>
   4c230:	18c1ffd8 	cmpnei	r3,r3,2047
   4c234:	18007726 	beq	r3,zero,4c414 <__adddf3+0x798>
   4c238:	2007883a 	mov	r3,r4
   4c23c:	003f8d06 	br	4c074 <__adddf3+0x3f8>
   4c240:	00800804 	movi	r2,32
   4c244:	10c5c83a 	sub	r2,r2,r3
   4c248:	68c8d83a 	srl	r4,r13,r3
   4c24c:	48a2983a 	sll	r17,r9,r2
   4c250:	689a983a 	sll	r13,r13,r2
   4c254:	48c6d83a 	srl	r3,r9,r3
   4c258:	8922b03a 	or	r17,r17,r4
   4c25c:	681ac03a 	cmpne	r13,r13,zero
   4c260:	8b62b03a 	or	r17,r17,r13
   4c264:	50d5883a 	add	r10,r10,r3
   4c268:	003f5406 	br	4bfbc <__adddf3+0x340>
   4c26c:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c270:	183f5a1e 	bne	r3,zero,4bfdc <__adddf3+0x360>
   4c274:	7351883a 	add	r8,r14,r13
   4c278:	4387803a 	cmpltu	r3,r8,r14
   4c27c:	5255883a 	add	r10,r10,r9
   4c280:	50c7883a 	add	r3,r10,r3
   4c284:	401ad07a 	srli	r13,r8,1
   4c288:	182297fa 	slli	r17,r3,31
   4c28c:	1810d07a 	srli	r8,r3,1
   4c290:	1025883a 	mov	r18,r2
   4c294:	8b62b03a 	or	r17,r17,r13
   4c298:	003f3806 	br	4bf7c <__adddf3+0x300>
   4c29c:	6ba3c83a 	sub	r17,r13,r14
   4c2a0:	4a93c83a 	sub	r9,r9,r10
   4c2a4:	6c51803a 	cmpltu	r8,r13,r17
   4c2a8:	4a27c83a 	sub	r19,r9,r8
   4c2ac:	3821883a 	mov	r16,r7
   4c2b0:	003ea806 	br	4bd54 <__adddf3+0xd8>
   4c2b4:	480a977a 	slli	r5,r9,29
   4c2b8:	01080034 	movhi	r4,8192
   4c2bc:	213fffc4 	addi	r4,r4,-1
   4c2c0:	3104703a 	and	r2,r6,r4
   4c2c4:	4814d0fa 	srli	r10,r9,3
   4c2c8:	1144b03a 	or	r2,r2,r5
   4c2cc:	3821883a 	mov	r16,r7
   4c2d0:	003f3106 	br	4bf98 <__adddf3+0x31c>
   4c2d4:	28005d1e 	bne	r5,zero,4c44c <__adddf3+0x7d0>
   4c2d8:	1000121e 	bne	r2,zero,4c324 <__adddf3+0x6a8>
   4c2dc:	0021883a 	mov	r16,zero
   4c2e0:	4015883a 	mov	r10,r8
   4c2e4:	00bfffc4 	movi	r2,-1
   4c2e8:	003f4806 	br	4c00c <__adddf3+0x390>
   4c2ec:	7363883a 	add	r17,r14,r13
   4c2f0:	5255883a 	add	r10,r10,r9
   4c2f4:	8b91803a 	cmpltu	r8,r17,r14
   4c2f8:	5211883a 	add	r8,r10,r8
   4c2fc:	4080202c 	andhi	r2,r8,128
   4c300:	103fa91e 	bne	r2,zero,4c1a8 <__adddf3+0x52c>
   4c304:	04800044 	movi	r18,1
   4c308:	003f1c06 	br	4bf7c <__adddf3+0x300>
   4c30c:	7363c83a 	sub	r17,r14,r13
   4c310:	5255c83a 	sub	r10,r10,r9
   4c314:	7451803a 	cmpltu	r8,r14,r17
   4c318:	5211c83a 	sub	r8,r10,r8
   4c31c:	04800044 	movi	r18,1
   4c320:	003e8706 	br	4bd40 <__adddf3+0xc4>
   4c324:	4806977a 	slli	r3,r9,29
   4c328:	00880034 	movhi	r2,8192
   4c32c:	10bfffc4 	addi	r2,r2,-1
   4c330:	3084703a 	and	r2,r6,r2
   4c334:	4814d0fa 	srli	r10,r9,3
   4c338:	10c4b03a 	or	r2,r2,r3
   4c33c:	3821883a 	mov	r16,r7
   4c340:	003f3006 	br	4c004 <__adddf3+0x388>
   4c344:	500a977a 	slli	r5,r10,29
   4c348:	00880034 	movhi	r2,8192
   4c34c:	10bfffc4 	addi	r2,r2,-1
   4c350:	2084703a 	and	r2,r4,r2
   4c354:	5014d0fa 	srli	r10,r10,3
   4c358:	1144b03a 	or	r2,r2,r5
   4c35c:	003f1006 	br	4bfa0 <__adddf3+0x324>
   4c360:	5394b03a 	or	r10,r10,r14
   4c364:	5022c03a 	cmpne	r17,r10,zero
   4c368:	003f5006 	br	4c0ac <__adddf3+0x430>
   4c36c:	1c7ff804 	addi	r17,r3,-32
   4c370:	19400820 	cmpeqi	r5,r3,32
   4c374:	5448d83a 	srl	r4,r10,r17
   4c378:	2800041e 	bne	r5,zero,4c38c <__adddf3+0x710>
   4c37c:	01401004 	movi	r5,64
   4c380:	28c7c83a 	sub	r3,r5,r3
   4c384:	50d4983a 	sll	r10,r10,r3
   4c388:	729cb03a 	or	r14,r14,r10
   4c38c:	7022c03a 	cmpne	r17,r14,zero
   4c390:	8922b03a 	or	r17,r17,r4
   4c394:	003f9c06 	br	4c208 <__adddf3+0x58c>
   4c398:	10005a1e 	bne	r2,zero,4c504 <__adddf3+0x888>
   4c39c:	4804977a 	slli	r2,r9,29
   4c3a0:	00c80034 	movhi	r3,8192
   4c3a4:	18ffffc4 	addi	r3,r3,-1
   4c3a8:	30cc703a 	and	r6,r6,r3
   4c3ac:	4814d0fa 	srli	r10,r9,3
   4c3b0:	1184b03a 	or	r2,r2,r6
   4c3b4:	003f1306 	br	4c004 <__adddf3+0x388>
   4c3b8:	6ba3c83a 	sub	r17,r13,r14
   4c3bc:	4a95c83a 	sub	r10,r9,r10
   4c3c0:	6c51803a 	cmpltu	r8,r13,r17
   4c3c4:	5211c83a 	sub	r8,r10,r8
   4c3c8:	3821883a 	mov	r16,r7
   4c3cc:	04800044 	movi	r18,1
   4c3d0:	003e5b06 	br	4bd40 <__adddf3+0xc4>
   4c3d4:	103f7126 	beq	r2,zero,4c19c <__adddf3+0x520>
   4c3d8:	4808977a 	slli	r4,r9,29
   4c3dc:	00880034 	movhi	r2,8192
   4c3e0:	10bfffc4 	addi	r2,r2,-1
   4c3e4:	3084703a 	and	r2,r6,r2
   4c3e8:	4814d0fa 	srli	r10,r9,3
   4c3ec:	1104b03a 	or	r2,r2,r4
   4c3f0:	3821883a 	mov	r16,r7
   4c3f4:	003eea06 	br	4bfa0 <__adddf3+0x324>
   4c3f8:	5006977a 	slli	r3,r10,29
   4c3fc:	00880034 	movhi	r2,8192
   4c400:	10bfffc4 	addi	r2,r2,-1
   4c404:	2084703a 	and	r2,r4,r2
   4c408:	5014d0fa 	srli	r10,r10,3
   4c40c:	10c4b03a 	or	r2,r2,r3
   4c410:	003efc06 	br	4c004 <__adddf3+0x388>
   4c414:	4806977a 	slli	r3,r9,29
   4c418:	00880034 	movhi	r2,8192
   4c41c:	10bfffc4 	addi	r2,r2,-1
   4c420:	3084703a 	and	r2,r6,r2
   4c424:	4814d0fa 	srli	r10,r9,3
   4c428:	10c4b03a 	or	r2,r2,r3
   4c42c:	003ef506 	br	4c004 <__adddf3+0x388>
   4c430:	4808977a 	slli	r4,r9,29
   4c434:	00880034 	movhi	r2,8192
   4c438:	10bfffc4 	addi	r2,r2,-1
   4c43c:	3084703a 	and	r2,r6,r2
   4c440:	4814d0fa 	srli	r10,r9,3
   4c444:	1104b03a 	or	r2,r2,r4
   4c448:	003ed306 	br	4bf98 <__adddf3+0x31c>
   4c44c:	500a977a 	slli	r5,r10,29
   4c450:	5014d0fa 	srli	r10,r10,3
   4c454:	10001626 	beq	r2,zero,4c4b0 <__adddf3+0x834>
   4c458:	00c80034 	movhi	r3,8192
   4c45c:	18ffffc4 	addi	r3,r3,-1
   4c460:	20c4703a 	and	r2,r4,r3
   4c464:	5100022c 	andhi	r4,r10,8
   4c468:	1144b03a 	or	r2,r2,r5
   4c46c:	203ee526 	beq	r4,zero,4c004 <__adddf3+0x388>
   4c470:	4808d0fa 	srli	r4,r9,3
   4c474:	2140022c 	andhi	r5,r4,8
   4c478:	283ee21e 	bne	r5,zero,4c004 <__adddf3+0x388>
   4c47c:	4812977a 	slli	r9,r9,29
   4c480:	30c4703a 	and	r2,r6,r3
   4c484:	3821883a 	mov	r16,r7
   4c488:	1244b03a 	or	r2,r2,r9
   4c48c:	2015883a 	mov	r10,r4
   4c490:	003edc06 	br	4c004 <__adddf3+0x388>
   4c494:	4804977a 	slli	r2,r9,29
   4c498:	01080034 	movhi	r4,8192
   4c49c:	213fffc4 	addi	r4,r4,-1
   4c4a0:	310c703a 	and	r6,r6,r4
   4c4a4:	4814d0fa 	srli	r10,r9,3
   4c4a8:	1184b03a 	or	r2,r2,r6
   4c4ac:	003ebc06 	br	4bfa0 <__adddf3+0x324>
   4c4b0:	00880034 	movhi	r2,8192
   4c4b4:	10bfffc4 	addi	r2,r2,-1
   4c4b8:	2084703a 	and	r2,r4,r2
   4c4bc:	1144b03a 	or	r2,r2,r5
   4c4c0:	003ed006 	br	4c004 <__adddf3+0x388>
   4c4c4:	193ff804 	addi	r4,r3,-32
   4c4c8:	19400820 	cmpeqi	r5,r3,32
   4c4cc:	5108d83a 	srl	r4,r10,r4
   4c4d0:	2800041e 	bne	r5,zero,4c4e4 <__adddf3+0x868>
   4c4d4:	01401004 	movi	r5,64
   4c4d8:	28c7c83a 	sub	r3,r5,r3
   4c4dc:	50d4983a 	sll	r10,r10,r3
   4c4e0:	729cb03a 	or	r14,r14,r10
   4c4e4:	7022c03a 	cmpne	r17,r14,zero
   4c4e8:	8922b03a 	or	r17,r17,r4
   4c4ec:	003eef06 	br	4c0ac <__adddf3+0x430>
   4c4f0:	7363883a 	add	r17,r14,r13
   4c4f4:	5255883a 	add	r10,r10,r9
   4c4f8:	8b51803a 	cmpltu	r8,r17,r13
   4c4fc:	5211883a 	add	r8,r10,r8
   4c500:	003f7e06 	br	4c2fc <__adddf3+0x680>
   4c504:	4b50b03a 	or	r8,r9,r13
   4c508:	500a977a 	slli	r5,r10,29
   4c50c:	5014d0fa 	srli	r10,r10,3
   4c510:	403fe726 	beq	r8,zero,4c4b0 <__adddf3+0x834>
   4c514:	00c80034 	movhi	r3,8192
   4c518:	18ffffc4 	addi	r3,r3,-1
   4c51c:	20c4703a 	and	r2,r4,r3
   4c520:	5100022c 	andhi	r4,r10,8
   4c524:	1144b03a 	or	r2,r2,r5
   4c528:	203eb626 	beq	r4,zero,4c004 <__adddf3+0x388>
   4c52c:	4808d0fa 	srli	r4,r9,3
   4c530:	2140022c 	andhi	r5,r4,8
   4c534:	283eb31e 	bne	r5,zero,4c004 <__adddf3+0x388>
   4c538:	4804977a 	slli	r2,r9,29
   4c53c:	30cc703a 	and	r6,r6,r3
   4c540:	3821883a 	mov	r16,r7
   4c544:	3084b03a 	or	r2,r6,r2
   4c548:	2015883a 	mov	r10,r4
   4c54c:	003ead06 	br	4c004 <__adddf3+0x388>
   4c550:	8a04b03a 	or	r2,r17,r8
   4c554:	103f1126 	beq	r2,zero,4c19c <__adddf3+0x520>
   4c558:	003e8806 	br	4bf7c <__adddf3+0x300>
   4c55c:	0005883a 	mov	r2,zero
   4c560:	00c1ffc4 	movi	r3,2047
   4c564:	0011883a 	mov	r8,zero
   4c568:	003e2a06 	br	4be14 <__adddf3+0x198>

0004c56c <__divdf3>:
   4c56c:	2810d53a 	srli	r8,r5,20
   4c570:	defff004 	addi	sp,sp,-64
   4c574:	dc000615 	stw	r16,24(sp)
   4c578:	04000434 	movhi	r16,16
   4c57c:	df000e15 	stw	fp,56(sp)
   4c580:	ddc00d15 	stw	r23,52(sp)
   4c584:	dd800c15 	stw	r22,48(sp)
   4c588:	dd000a15 	stw	r20,40(sp)
   4c58c:	843fffc4 	addi	r16,r16,-1
   4c590:	dfc00f15 	stw	ra,60(sp)
   4c594:	dd400b15 	stw	r21,44(sp)
   4c598:	dcc00915 	stw	r19,36(sp)
   4c59c:	dc800815 	stw	r18,32(sp)
   4c5a0:	dc400715 	stw	r17,28(sp)
   4c5a4:	4201ffcc 	andi	r8,r8,2047
   4c5a8:	282ed7fa 	srli	r23,r5,31
   4c5ac:	3039883a 	mov	fp,r6
   4c5b0:	382d883a 	mov	r22,r7
   4c5b4:	2029883a 	mov	r20,r4
   4c5b8:	2c20703a 	and	r16,r5,r16
   4c5bc:	40006826 	beq	r8,zero,4c760 <__divdf3+0x1f4>
   4c5c0:	4081ffe0 	cmpeqi	r2,r8,2047
   4c5c4:	1000791e 	bne	r2,zero,4c7ac <__divdf3+0x240>
   4c5c8:	2026d77a 	srli	r19,r4,29
   4c5cc:	800a90fa 	slli	r5,r16,3
   4c5d0:	202890fa 	slli	r20,r4,3
   4c5d4:	44bf0044 	addi	r18,r8,-1023
   4c5d8:	994ab03a 	or	r5,r19,r5
   4c5dc:	2cc02034 	orhi	r19,r5,128
   4c5e0:	0021883a 	mov	r16,zero
   4c5e4:	0023883a 	mov	r17,zero
   4c5e8:	b010d53a 	srli	r8,r22,20
   4c5ec:	00c00434 	movhi	r3,16
   4c5f0:	18ffffc4 	addi	r3,r3,-1
   4c5f4:	4201ffcc 	andi	r8,r8,2047
   4c5f8:	b02ad7fa 	srli	r21,r22,31
   4c5fc:	b0ec703a 	and	r22,r22,r3
   4c600:	40004626 	beq	r8,zero,4c71c <__divdf3+0x1b0>
   4c604:	4081ffe0 	cmpeqi	r2,r8,2047
   4c608:	10006f1e 	bne	r2,zero,4c7c8 <__divdf3+0x25c>
   4c60c:	b00690fa 	slli	r3,r22,3
   4c610:	e004d77a 	srli	r2,fp,29
   4c614:	e01290fa 	slli	r9,fp,3
   4c618:	423f0044 	addi	r8,r8,-1023
   4c61c:	10c6b03a 	or	r3,r2,r3
   4c620:	1d802034 	orhi	r22,r3,128
   4c624:	9225c83a 	sub	r18,r18,r8
   4c628:	0007883a 	mov	r3,zero
   4c62c:	80800428 	cmpgeui	r2,r16,16
   4c630:	bd4ef03a 	xor	r7,r23,r21
   4c634:	1000a71e 	bne	r2,zero,4c8d4 <__divdf3+0x368>
   4c638:	800c90ba 	slli	r6,r16,2
   4c63c:	00800174 	movhi	r2,5
   4c640:	3085883a 	add	r2,r6,r2
   4c644:	10b19317 	ldw	r2,-14772(r2)
   4c648:	1000683a 	jmp	r2
   4c64c:	0004c8d4 	movui	zero,4899
   4c650:	0004c6f8 	rdprs	zero,zero,4891
   4c654:	0004c6a8 	cmpgeui	zero,zero,4890
   4c658:	0004c708 	cmpgei	zero,zero,4892
   4c65c:	0004c6a8 	cmpgeui	zero,zero,4890
   4c660:	0004c878 	rdprs	zero,zero,4897
   4c664:	0004c6a8 	cmpgeui	zero,zero,4890
   4c668:	0004c708 	cmpgei	zero,zero,4892
   4c66c:	0004c6f8 	rdprs	zero,zero,4891
   4c670:	0004c6f8 	rdprs	zero,zero,4891
   4c674:	0004c878 	rdprs	zero,zero,4897
   4c678:	0004c708 	cmpgei	zero,zero,4892
   4c67c:	0004c68c 	andi	zero,zero,4890
   4c680:	0004c68c 	andi	zero,zero,4890
   4c684:	0004c68c 	andi	zero,zero,4890
   4c688:	0004c890 	cmplti	zero,zero,4898
   4c68c:	b80f883a 	mov	r7,r23
   4c690:	888000a0 	cmpeqi	r2,r17,2
   4c694:	1000181e 	bne	r2,zero,4c6f8 <__divdf3+0x18c>
   4c698:	888000e0 	cmpeqi	r2,r17,3
   4c69c:	1001f61e 	bne	r2,zero,4ce78 <__divdf3+0x90c>
   4c6a0:	88800060 	cmpeqi	r2,r17,1
   4c6a4:	10006126 	beq	r2,zero,4c82c <__divdf3+0x2c0>
   4c6a8:	0007883a 	mov	r3,zero
   4c6ac:	000b883a 	mov	r5,zero
   4c6b0:	0029883a 	mov	r20,zero
   4c6b4:	1806953a 	slli	r3,r3,20
   4c6b8:	380e97fa 	slli	r7,r7,31
   4c6bc:	a005883a 	mov	r2,r20
   4c6c0:	1946b03a 	or	r3,r3,r5
   4c6c4:	19c6b03a 	or	r3,r3,r7
   4c6c8:	dfc00f17 	ldw	ra,60(sp)
   4c6cc:	df000e17 	ldw	fp,56(sp)
   4c6d0:	ddc00d17 	ldw	r23,52(sp)
   4c6d4:	dd800c17 	ldw	r22,48(sp)
   4c6d8:	dd400b17 	ldw	r21,44(sp)
   4c6dc:	dd000a17 	ldw	r20,40(sp)
   4c6e0:	dcc00917 	ldw	r19,36(sp)
   4c6e4:	dc800817 	ldw	r18,32(sp)
   4c6e8:	dc400717 	ldw	r17,28(sp)
   4c6ec:	dc000617 	ldw	r16,24(sp)
   4c6f0:	dec01004 	addi	sp,sp,64
   4c6f4:	f800283a 	ret
   4c6f8:	00c1ffc4 	movi	r3,2047
   4c6fc:	000b883a 	mov	r5,zero
   4c700:	0029883a 	mov	r20,zero
   4c704:	003feb06 	br	4c6b4 <__divdf3+0x148>
   4c708:	a80f883a 	mov	r7,r21
   4c70c:	b027883a 	mov	r19,r22
   4c710:	4829883a 	mov	r20,r9
   4c714:	1823883a 	mov	r17,r3
   4c718:	003fdd06 	br	4c690 <__divdf3+0x124>
   4c71c:	b712b03a 	or	r9,r22,fp
   4c720:	48003e26 	beq	r9,zero,4c81c <__divdf3+0x2b0>
   4c724:	b0017726 	beq	r22,zero,4cd04 <__divdf3+0x798>
   4c728:	b009883a 	mov	r4,r22
   4c72c:	004e3680 	call	4e368 <__clzsi2>
   4c730:	117ffd44 	addi	r5,r2,-11
   4c734:	01000744 	movi	r4,29
   4c738:	127ffe04 	addi	r9,r2,-8
   4c73c:	2149c83a 	sub	r4,r4,r5
   4c740:	b246983a 	sll	r3,r22,r9
   4c744:	e108d83a 	srl	r4,fp,r4
   4c748:	e252983a 	sll	r9,fp,r9
   4c74c:	20ecb03a 	or	r22,r4,r3
   4c750:	1491883a 	add	r8,r2,r18
   4c754:	4480fcc4 	addi	r18,r8,1011
   4c758:	0007883a 	mov	r3,zero
   4c75c:	003fb306 	br	4c62c <__divdf3+0xc0>
   4c760:	8126b03a 	or	r19,r16,r4
   4c764:	2023883a 	mov	r17,r4
   4c768:	98002726 	beq	r19,zero,4c808 <__divdf3+0x29c>
   4c76c:	80017026 	beq	r16,zero,4cd30 <__divdf3+0x7c4>
   4c770:	8009883a 	mov	r4,r16
   4c774:	004e3680 	call	4e368 <__clzsi2>
   4c778:	113ffd44 	addi	r4,r2,-11
   4c77c:	00c00744 	movi	r3,29
   4c780:	14fffe04 	addi	r19,r2,-8
   4c784:	1907c83a 	sub	r3,r3,r4
   4c788:	84ca983a 	sll	r5,r16,r19
   4c78c:	88c6d83a 	srl	r3,r17,r3
   4c790:	8ce8983a 	sll	r20,r17,r19
   4c794:	1966b03a 	or	r19,r3,r5
   4c798:	023f0344 	movi	r8,-1011
   4c79c:	40a5c83a 	sub	r18,r8,r2
   4c7a0:	0021883a 	mov	r16,zero
   4c7a4:	0023883a 	mov	r17,zero
   4c7a8:	003f8f06 	br	4c5e8 <__divdf3+0x7c>
   4c7ac:	8126b03a 	or	r19,r16,r4
   4c7b0:	9800101e 	bne	r19,zero,4c7f4 <__divdf3+0x288>
   4c7b4:	0029883a 	mov	r20,zero
   4c7b8:	04000204 	movi	r16,8
   4c7bc:	0481ffc4 	movi	r18,2047
   4c7c0:	04400084 	movi	r17,2
   4c7c4:	003f8806 	br	4c5e8 <__divdf3+0x7c>
   4c7c8:	b712b03a 	or	r9,r22,fp
   4c7cc:	94be0044 	addi	r18,r18,-2047
   4c7d0:	4800041e 	bne	r9,zero,4c7e4 <__divdf3+0x278>
   4c7d4:	84000094 	ori	r16,r16,2
   4c7d8:	002d883a 	mov	r22,zero
   4c7dc:	00c00084 	movi	r3,2
   4c7e0:	003f9206 	br	4c62c <__divdf3+0xc0>
   4c7e4:	840000d4 	ori	r16,r16,3
   4c7e8:	e013883a 	mov	r9,fp
   4c7ec:	00c000c4 	movi	r3,3
   4c7f0:	003f8e06 	br	4c62c <__divdf3+0xc0>
   4c7f4:	8027883a 	mov	r19,r16
   4c7f8:	0481ffc4 	movi	r18,2047
   4c7fc:	04000304 	movi	r16,12
   4c800:	044000c4 	movi	r17,3
   4c804:	003f7806 	br	4c5e8 <__divdf3+0x7c>
   4c808:	0029883a 	mov	r20,zero
   4c80c:	04000104 	movi	r16,4
   4c810:	0025883a 	mov	r18,zero
   4c814:	04400044 	movi	r17,1
   4c818:	003f7306 	br	4c5e8 <__divdf3+0x7c>
   4c81c:	84000054 	ori	r16,r16,1
   4c820:	002d883a 	mov	r22,zero
   4c824:	00c00044 	movi	r3,1
   4c828:	003f8006 	br	4c62c <__divdf3+0xc0>
   4c82c:	9440ffc4 	addi	r17,r18,1023
   4c830:	0441050e 	bge	zero,r17,4cc48 <__divdf3+0x6dc>
   4c834:	a08001cc 	andi	r2,r20,7
   4c838:	10016c1e 	bne	r2,zero,4cdec <__divdf3+0x880>
   4c83c:	a008d0fa 	srli	r4,r20,3
   4c840:	9880402c 	andhi	r2,r19,256
   4c844:	10000426 	beq	r2,zero,4c858 <__divdf3+0x2ec>
   4c848:	00bfc034 	movhi	r2,65280
   4c84c:	10bfffc4 	addi	r2,r2,-1
   4c850:	98a6703a 	and	r19,r19,r2
   4c854:	94410004 	addi	r17,r18,1024
   4c858:	8881ffc8 	cmpgei	r2,r17,2047
   4c85c:	103fa61e 	bne	r2,zero,4c6f8 <__divdf3+0x18c>
   4c860:	9828977a 	slli	r20,r19,29
   4c864:	980a927a 	slli	r5,r19,9
   4c868:	88c1ffcc 	andi	r3,r17,2047
   4c86c:	a128b03a 	or	r20,r20,r4
   4c870:	280ad33a 	srli	r5,r5,12
   4c874:	003f8f06 	br	4c6b4 <__divdf3+0x148>
   4c878:	01400434 	movhi	r5,16
   4c87c:	000f883a 	mov	r7,zero
   4c880:	297fffc4 	addi	r5,r5,-1
   4c884:	053fffc4 	movi	r20,-1
   4c888:	00c1ffc4 	movi	r3,2047
   4c88c:	003f8906 	br	4c6b4 <__divdf3+0x148>
   4c890:	9880022c 	andhi	r2,r19,8
   4c894:	10000926 	beq	r2,zero,4c8bc <__divdf3+0x350>
   4c898:	b080022c 	andhi	r2,r22,8
   4c89c:	1000071e 	bne	r2,zero,4c8bc <__divdf3+0x350>
   4c8a0:	00800434 	movhi	r2,16
   4c8a4:	b1400234 	orhi	r5,r22,8
   4c8a8:	10bfffc4 	addi	r2,r2,-1
   4c8ac:	288a703a 	and	r5,r5,r2
   4c8b0:	a80f883a 	mov	r7,r21
   4c8b4:	4829883a 	mov	r20,r9
   4c8b8:	003ff306 	br	4c888 <__divdf3+0x31c>
   4c8bc:	00800434 	movhi	r2,16
   4c8c0:	99400234 	orhi	r5,r19,8
   4c8c4:	10bfffc4 	addi	r2,r2,-1
   4c8c8:	288a703a 	and	r5,r5,r2
   4c8cc:	b80f883a 	mov	r7,r23
   4c8d0:	003fed06 	br	4c888 <__divdf3+0x31c>
   4c8d4:	b4c10536 	bltu	r22,r19,4ccec <__divdf3+0x780>
   4c8d8:	b4c10326 	beq	r22,r19,4cce8 <__divdf3+0x77c>
   4c8dc:	94bfffc4 	addi	r18,r18,-1
   4c8e0:	a039883a 	mov	fp,r20
   4c8e4:	9821883a 	mov	r16,r19
   4c8e8:	0023883a 	mov	r17,zero
   4c8ec:	b006923a 	slli	r3,r22,8
   4c8f0:	482cd63a 	srli	r22,r9,24
   4c8f4:	8009883a 	mov	r4,r16
   4c8f8:	182ed43a 	srli	r23,r3,16
   4c8fc:	b0ecb03a 	or	r22,r22,r3
   4c900:	d9c00015 	stw	r7,0(sp)
   4c904:	b80b883a 	mov	r5,r23
   4c908:	482a923a 	slli	r21,r9,8
   4c90c:	b53fffcc 	andi	r20,r22,65535
   4c910:	004bb940 	call	4bb94 <__udivsi3>
   4c914:	100b883a 	mov	r5,r2
   4c918:	a009883a 	mov	r4,r20
   4c91c:	1027883a 	mov	r19,r2
   4c920:	004bc540 	call	4bc54 <__mulsi3>
   4c924:	8009883a 	mov	r4,r16
   4c928:	b80b883a 	mov	r5,r23
   4c92c:	1021883a 	mov	r16,r2
   4c930:	004bbf80 	call	4bbf8 <__umodsi3>
   4c934:	1004943a 	slli	r2,r2,16
   4c938:	e008d43a 	srli	r4,fp,16
   4c93c:	d9c00017 	ldw	r7,0(sp)
   4c940:	2088b03a 	or	r4,r4,r2
   4c944:	2400042e 	bgeu	r4,r16,4c958 <__divdf3+0x3ec>
   4c948:	2589883a 	add	r4,r4,r22
   4c94c:	98bfffc4 	addi	r2,r19,-1
   4c950:	2581082e 	bgeu	r4,r22,4cd74 <__divdf3+0x808>
   4c954:	1027883a 	mov	r19,r2
   4c958:	2421c83a 	sub	r16,r4,r16
   4c95c:	b80b883a 	mov	r5,r23
   4c960:	8009883a 	mov	r4,r16
   4c964:	d9c00215 	stw	r7,8(sp)
   4c968:	004bb940 	call	4bb94 <__udivsi3>
   4c96c:	100b883a 	mov	r5,r2
   4c970:	a009883a 	mov	r4,r20
   4c974:	d8800115 	stw	r2,4(sp)
   4c978:	004bc540 	call	4bc54 <__mulsi3>
   4c97c:	b80b883a 	mov	r5,r23
   4c980:	8009883a 	mov	r4,r16
   4c984:	d8800015 	stw	r2,0(sp)
   4c988:	004bbf80 	call	4bbf8 <__umodsi3>
   4c98c:	100c943a 	slli	r6,r2,16
   4c990:	d8c00017 	ldw	r3,0(sp)
   4c994:	e73fffcc 	andi	fp,fp,65535
   4c998:	e18cb03a 	or	r6,fp,r6
   4c99c:	da000117 	ldw	r8,4(sp)
   4c9a0:	d9c00217 	ldw	r7,8(sp)
   4c9a4:	30c0042e 	bgeu	r6,r3,4c9b8 <__divdf3+0x44c>
   4c9a8:	358d883a 	add	r6,r6,r22
   4c9ac:	40bfffc4 	addi	r2,r8,-1
   4c9b0:	3580ec2e 	bgeu	r6,r22,4cd64 <__divdf3+0x7f8>
   4c9b4:	1011883a 	mov	r8,r2
   4c9b8:	9826943a 	slli	r19,r19,16
   4c9bc:	af3fffcc 	andi	fp,r21,65535
   4c9c0:	30c7c83a 	sub	r3,r6,r3
   4c9c4:	9a26b03a 	or	r19,r19,r8
   4c9c8:	9810d43a 	srli	r8,r19,16
   4c9cc:	9abfffcc 	andi	r10,r19,65535
   4c9d0:	5009883a 	mov	r4,r10
   4c9d4:	e00b883a 	mov	r5,fp
   4c9d8:	d9c00515 	stw	r7,20(sp)
   4c9dc:	d8c00315 	stw	r3,12(sp)
   4c9e0:	da800415 	stw	r10,16(sp)
   4c9e4:	da000015 	stw	r8,0(sp)
   4c9e8:	004bc540 	call	4bc54 <__mulsi3>
   4c9ec:	da000017 	ldw	r8,0(sp)
   4c9f0:	e00b883a 	mov	r5,fp
   4c9f4:	d8800215 	stw	r2,8(sp)
   4c9f8:	4009883a 	mov	r4,r8
   4c9fc:	004bc540 	call	4bc54 <__mulsi3>
   4ca00:	da000017 	ldw	r8,0(sp)
   4ca04:	a820d43a 	srli	r16,r21,16
   4ca08:	d8800115 	stw	r2,4(sp)
   4ca0c:	4009883a 	mov	r4,r8
   4ca10:	800b883a 	mov	r5,r16
   4ca14:	004bc540 	call	4bc54 <__mulsi3>
   4ca18:	da800417 	ldw	r10,16(sp)
   4ca1c:	8009883a 	mov	r4,r16
   4ca20:	d8800015 	stw	r2,0(sp)
   4ca24:	500b883a 	mov	r5,r10
   4ca28:	004bc540 	call	4bc54 <__mulsi3>
   4ca2c:	d9800217 	ldw	r6,8(sp)
   4ca30:	da000117 	ldw	r8,4(sp)
   4ca34:	da400017 	ldw	r9,0(sp)
   4ca38:	3008d43a 	srli	r4,r6,16
   4ca3c:	1205883a 	add	r2,r2,r8
   4ca40:	d8c00317 	ldw	r3,12(sp)
   4ca44:	2089883a 	add	r4,r4,r2
   4ca48:	d9c00517 	ldw	r7,20(sp)
   4ca4c:	2200022e 	bgeu	r4,r8,4ca58 <__divdf3+0x4ec>
   4ca50:	00800074 	movhi	r2,1
   4ca54:	4893883a 	add	r9,r9,r2
   4ca58:	200ad43a 	srli	r5,r4,16
   4ca5c:	2008943a 	slli	r4,r4,16
   4ca60:	31bfffcc 	andi	r6,r6,65535
   4ca64:	2a4b883a 	add	r5,r5,r9
   4ca68:	218d883a 	add	r6,r4,r6
   4ca6c:	19409436 	bltu	r3,r5,4ccc0 <__divdf3+0x754>
   4ca70:	19409226 	beq	r3,r5,4ccbc <__divdf3+0x750>
   4ca74:	898dc83a 	sub	r6,r17,r6
   4ca78:	89a3803a 	cmpltu	r17,r17,r6
   4ca7c:	1947c83a 	sub	r3,r3,r5
   4ca80:	1c47c83a 	sub	r3,r3,r17
   4ca84:	9440ffc4 	addi	r17,r18,1023
   4ca88:	b0c0d326 	beq	r22,r3,4cdd8 <__divdf3+0x86c>
   4ca8c:	1809883a 	mov	r4,r3
   4ca90:	b80b883a 	mov	r5,r23
   4ca94:	d9800315 	stw	r6,12(sp)
   4ca98:	d9c00215 	stw	r7,8(sp)
   4ca9c:	d8c00015 	stw	r3,0(sp)
   4caa0:	004bb940 	call	4bb94 <__udivsi3>
   4caa4:	100b883a 	mov	r5,r2
   4caa8:	a009883a 	mov	r4,r20
   4caac:	d8800115 	stw	r2,4(sp)
   4cab0:	004bc540 	call	4bc54 <__mulsi3>
   4cab4:	d8c00017 	ldw	r3,0(sp)
   4cab8:	b80b883a 	mov	r5,r23
   4cabc:	d8800015 	stw	r2,0(sp)
   4cac0:	1809883a 	mov	r4,r3
   4cac4:	004bbf80 	call	4bbf8 <__umodsi3>
   4cac8:	d9800317 	ldw	r6,12(sp)
   4cacc:	1006943a 	slli	r3,r2,16
   4cad0:	da400017 	ldw	r9,0(sp)
   4cad4:	3008d43a 	srli	r4,r6,16
   4cad8:	da000117 	ldw	r8,4(sp)
   4cadc:	d9c00217 	ldw	r7,8(sp)
   4cae0:	20c6b03a 	or	r3,r4,r3
   4cae4:	1a40062e 	bgeu	r3,r9,4cb00 <__divdf3+0x594>
   4cae8:	1d87883a 	add	r3,r3,r22
   4caec:	40bfffc4 	addi	r2,r8,-1
   4caf0:	1d80c836 	bltu	r3,r22,4ce14 <__divdf3+0x8a8>
   4caf4:	1a40c72e 	bgeu	r3,r9,4ce14 <__divdf3+0x8a8>
   4caf8:	423fff84 	addi	r8,r8,-2
   4cafc:	1d87883a 	add	r3,r3,r22
   4cb00:	1a47c83a 	sub	r3,r3,r9
   4cb04:	1809883a 	mov	r4,r3
   4cb08:	b80b883a 	mov	r5,r23
   4cb0c:	d9800415 	stw	r6,16(sp)
   4cb10:	d9c00315 	stw	r7,12(sp)
   4cb14:	da000215 	stw	r8,8(sp)
   4cb18:	d8c00115 	stw	r3,4(sp)
   4cb1c:	004bb940 	call	4bb94 <__udivsi3>
   4cb20:	100b883a 	mov	r5,r2
   4cb24:	a009883a 	mov	r4,r20
   4cb28:	d8800015 	stw	r2,0(sp)
   4cb2c:	004bc540 	call	4bc54 <__mulsi3>
   4cb30:	d8c00117 	ldw	r3,4(sp)
   4cb34:	b80b883a 	mov	r5,r23
   4cb38:	102f883a 	mov	r23,r2
   4cb3c:	1809883a 	mov	r4,r3
   4cb40:	004bbf80 	call	4bbf8 <__umodsi3>
   4cb44:	d9800417 	ldw	r6,16(sp)
   4cb48:	1004943a 	slli	r2,r2,16
   4cb4c:	da400017 	ldw	r9,0(sp)
   4cb50:	31bfffcc 	andi	r6,r6,65535
   4cb54:	308cb03a 	or	r6,r6,r2
   4cb58:	da000217 	ldw	r8,8(sp)
   4cb5c:	d9c00317 	ldw	r7,12(sp)
   4cb60:	35c0062e 	bgeu	r6,r23,4cb7c <__divdf3+0x610>
   4cb64:	358d883a 	add	r6,r6,r22
   4cb68:	48bfffc4 	addi	r2,r9,-1
   4cb6c:	3580a736 	bltu	r6,r22,4ce0c <__divdf3+0x8a0>
   4cb70:	35c0a62e 	bgeu	r6,r23,4ce0c <__divdf3+0x8a0>
   4cb74:	4a7fff84 	addi	r9,r9,-2
   4cb78:	358d883a 	add	r6,r6,r22
   4cb7c:	4028943a 	slli	r20,r8,16
   4cb80:	35d5c83a 	sub	r10,r6,r23
   4cb84:	e009883a 	mov	r4,fp
   4cb88:	a268b03a 	or	r20,r20,r9
   4cb8c:	a23fffcc 	andi	r8,r20,65535
   4cb90:	a02ed43a 	srli	r23,r20,16
   4cb94:	400b883a 	mov	r5,r8
   4cb98:	d9c00315 	stw	r7,12(sp)
   4cb9c:	da800215 	stw	r10,8(sp)
   4cba0:	da000115 	stw	r8,4(sp)
   4cba4:	004bc540 	call	4bc54 <__mulsi3>
   4cba8:	e00b883a 	mov	r5,fp
   4cbac:	b809883a 	mov	r4,r23
   4cbb0:	1039883a 	mov	fp,r2
   4cbb4:	004bc540 	call	4bc54 <__mulsi3>
   4cbb8:	8009883a 	mov	r4,r16
   4cbbc:	b80b883a 	mov	r5,r23
   4cbc0:	d8800015 	stw	r2,0(sp)
   4cbc4:	004bc540 	call	4bc54 <__mulsi3>
   4cbc8:	da000117 	ldw	r8,4(sp)
   4cbcc:	8009883a 	mov	r4,r16
   4cbd0:	1021883a 	mov	r16,r2
   4cbd4:	400b883a 	mov	r5,r8
   4cbd8:	004bc540 	call	4bc54 <__mulsi3>
   4cbdc:	d9800017 	ldw	r6,0(sp)
   4cbe0:	e006d43a 	srli	r3,fp,16
   4cbe4:	da800217 	ldw	r10,8(sp)
   4cbe8:	1185883a 	add	r2,r2,r6
   4cbec:	1887883a 	add	r3,r3,r2
   4cbf0:	d9c00317 	ldw	r7,12(sp)
   4cbf4:	1980022e 	bgeu	r3,r6,4cc00 <__divdf3+0x694>
   4cbf8:	00800074 	movhi	r2,1
   4cbfc:	80a1883a 	add	r16,r16,r2
   4cc00:	1808d43a 	srli	r4,r3,16
   4cc04:	1806943a 	slli	r3,r3,16
   4cc08:	e73fffcc 	andi	fp,fp,65535
   4cc0c:	2409883a 	add	r4,r4,r16
   4cc10:	1f07883a 	add	r3,r3,fp
   4cc14:	51000436 	bltu	r10,r4,4cc28 <__divdf3+0x6bc>
   4cc18:	51000226 	beq	r10,r4,4cc24 <__divdf3+0x6b8>
   4cc1c:	a5000054 	ori	r20,r20,1
   4cc20:	003f0306 	br	4c830 <__divdf3+0x2c4>
   4cc24:	183f0226 	beq	r3,zero,4c830 <__divdf3+0x2c4>
   4cc28:	b28d883a 	add	r6,r22,r10
   4cc2c:	a0bfffc4 	addi	r2,r20,-1
   4cc30:	35806536 	bltu	r6,r22,4cdc8 <__divdf3+0x85c>
   4cc34:	31008036 	bltu	r6,r4,4ce38 <__divdf3+0x8cc>
   4cc38:	31009426 	beq	r6,r4,4ce8c <__divdf3+0x920>
   4cc3c:	1029883a 	mov	r20,r2
   4cc40:	003ff606 	br	4cc1c <__divdf3+0x6b0>
   4cc44:	053fffc4 	movi	r20,-1
   4cc48:	01400044 	movi	r5,1
   4cc4c:	2c4bc83a 	sub	r5,r5,r17
   4cc50:	28800e48 	cmpgei	r2,r5,57
   4cc54:	103e941e 	bne	r2,zero,4c6a8 <__divdf3+0x13c>
   4cc58:	28800808 	cmpgei	r2,r5,32
   4cc5c:	1000491e 	bne	r2,zero,4cd84 <__divdf3+0x818>
   4cc60:	92010784 	addi	r8,r18,1054
   4cc64:	9a04983a 	sll	r2,r19,r8
   4cc68:	a146d83a 	srl	r3,r20,r5
   4cc6c:	a210983a 	sll	r8,r20,r8
   4cc70:	994ad83a 	srl	r5,r19,r5
   4cc74:	10e8b03a 	or	r20,r2,r3
   4cc78:	4010c03a 	cmpne	r8,r8,zero
   4cc7c:	a228b03a 	or	r20,r20,r8
   4cc80:	a08001cc 	andi	r2,r20,7
   4cc84:	10000726 	beq	r2,zero,4cca4 <__divdf3+0x738>
   4cc88:	a08003cc 	andi	r2,r20,15
   4cc8c:	10800120 	cmpeqi	r2,r2,4
   4cc90:	1000041e 	bne	r2,zero,4cca4 <__divdf3+0x738>
   4cc94:	a0800104 	addi	r2,r20,4
   4cc98:	1529803a 	cmpltu	r20,r2,r20
   4cc9c:	2d0b883a 	add	r5,r5,r20
   4cca0:	1029883a 	mov	r20,r2
   4cca4:	2880202c 	andhi	r2,r5,128
   4cca8:	10006f26 	beq	r2,zero,4ce68 <__divdf3+0x8fc>
   4ccac:	00c00044 	movi	r3,1
   4ccb0:	000b883a 	mov	r5,zero
   4ccb4:	0029883a 	mov	r20,zero
   4ccb8:	003e7e06 	br	4c6b4 <__divdf3+0x148>
   4ccbc:	89bf6d2e 	bgeu	r17,r6,4ca74 <__divdf3+0x508>
   4ccc0:	8d63883a 	add	r17,r17,r21
   4ccc4:	8d45803a 	cmpltu	r2,r17,r21
   4ccc8:	1585883a 	add	r2,r2,r22
   4cccc:	1887883a 	add	r3,r3,r2
   4ccd0:	98bfffc4 	addi	r2,r19,-1
   4ccd4:	b0c0202e 	bgeu	r22,r3,4cd58 <__divdf3+0x7ec>
   4ccd8:	19405136 	bltu	r3,r5,4ce20 <__divdf3+0x8b4>
   4ccdc:	28c04f26 	beq	r5,r3,4ce1c <__divdf3+0x8b0>
   4cce0:	1027883a 	mov	r19,r2
   4cce4:	003f6306 	br	4ca74 <__divdf3+0x508>
   4cce8:	a27efc36 	bltu	r20,r9,4c8dc <__divdf3+0x370>
   4ccec:	983897fa 	slli	fp,r19,31
   4ccf0:	a004d07a 	srli	r2,r20,1
   4ccf4:	9820d07a 	srli	r16,r19,1
   4ccf8:	a02297fa 	slli	r17,r20,31
   4ccfc:	e0b8b03a 	or	fp,fp,r2
   4cd00:	003efa06 	br	4c8ec <__divdf3+0x380>
   4cd04:	e009883a 	mov	r4,fp
   4cd08:	004e3680 	call	4e368 <__clzsi2>
   4cd0c:	11400544 	addi	r5,r2,21
   4cd10:	29000748 	cmpgei	r4,r5,29
   4cd14:	1007883a 	mov	r3,r2
   4cd18:	10800804 	addi	r2,r2,32
   4cd1c:	203e8526 	beq	r4,zero,4c734 <__divdf3+0x1c8>
   4cd20:	18fffe04 	addi	r3,r3,-8
   4cd24:	e0ec983a 	sll	r22,fp,r3
   4cd28:	0013883a 	mov	r9,zero
   4cd2c:	003e8806 	br	4c750 <__divdf3+0x1e4>
   4cd30:	004e3680 	call	4e368 <__clzsi2>
   4cd34:	11000544 	addi	r4,r2,21
   4cd38:	20c00748 	cmpgei	r3,r4,29
   4cd3c:	100b883a 	mov	r5,r2
   4cd40:	10800804 	addi	r2,r2,32
   4cd44:	183e8d26 	beq	r3,zero,4c77c <__divdf3+0x210>
   4cd48:	297ffe04 	addi	r5,r5,-8
   4cd4c:	a166983a 	sll	r19,r20,r5
   4cd50:	0029883a 	mov	r20,zero
   4cd54:	003e9006 	br	4c798 <__divdf3+0x22c>
   4cd58:	b0ffe11e 	bne	r22,r3,4cce0 <__divdf3+0x774>
   4cd5c:	8d7fe036 	bltu	r17,r21,4cce0 <__divdf3+0x774>
   4cd60:	003fdd06 	br	4ccd8 <__divdf3+0x76c>
   4cd64:	30ff132e 	bgeu	r6,r3,4c9b4 <__divdf3+0x448>
   4cd68:	423fff84 	addi	r8,r8,-2
   4cd6c:	358d883a 	add	r6,r6,r22
   4cd70:	003f1106 	br	4c9b8 <__divdf3+0x44c>
   4cd74:	243ef72e 	bgeu	r4,r16,4c954 <__divdf3+0x3e8>
   4cd78:	9cffff84 	addi	r19,r19,-2
   4cd7c:	2589883a 	add	r4,r4,r22
   4cd80:	003ef506 	br	4c958 <__divdf3+0x3ec>
   4cd84:	00fff844 	movi	r3,-31
   4cd88:	1c47c83a 	sub	r3,r3,r17
   4cd8c:	29400820 	cmpeqi	r5,r5,32
   4cd90:	98c6d83a 	srl	r3,r19,r3
   4cd94:	2800031e 	bne	r5,zero,4cda4 <__divdf3+0x838>
   4cd98:	91410f84 	addi	r5,r18,1086
   4cd9c:	994a983a 	sll	r5,r19,r5
   4cda0:	a168b03a 	or	r20,r20,r5
   4cda4:	a028c03a 	cmpne	r20,r20,zero
   4cda8:	a0e8b03a 	or	r20,r20,r3
   4cdac:	a4c001cc 	andi	r19,r20,7
   4cdb0:	9800291e 	bne	r19,zero,4ce58 <__divdf3+0x8ec>
   4cdb4:	000b883a 	mov	r5,zero
   4cdb8:	a028d0fa 	srli	r20,r20,3
   4cdbc:	0007883a 	mov	r3,zero
   4cdc0:	a4e8b03a 	or	r20,r20,r19
   4cdc4:	003e3b06 	br	4c6b4 <__divdf3+0x148>
   4cdc8:	1029883a 	mov	r20,r2
   4cdcc:	313f931e 	bne	r6,r4,4cc1c <__divdf3+0x6b0>
   4cdd0:	1d7f921e 	bne	r3,r21,4cc1c <__divdf3+0x6b0>
   4cdd4:	003e9606 	br	4c830 <__divdf3+0x2c4>
   4cdd8:	047f9a0e 	bge	zero,r17,4cc44 <__divdf3+0x6d8>
   4cddc:	0009883a 	mov	r4,zero
   4cde0:	05000044 	movi	r20,1
   4cde4:	9d27883a 	add	r19,r19,r20
   4cde8:	003e9506 	br	4c840 <__divdf3+0x2d4>
   4cdec:	a08003cc 	andi	r2,r20,15
   4cdf0:	10800118 	cmpnei	r2,r2,4
   4cdf4:	103e9126 	beq	r2,zero,4c83c <__divdf3+0x2d0>
   4cdf8:	a1000104 	addi	r4,r20,4
   4cdfc:	00bffec4 	movi	r2,-5
   4ce00:	2008d0fa 	srli	r4,r4,3
   4ce04:	1529803a 	cmpltu	r20,r2,r20
   4ce08:	003ff606 	br	4cde4 <__divdf3+0x878>
   4ce0c:	1013883a 	mov	r9,r2
   4ce10:	003f5a06 	br	4cb7c <__divdf3+0x610>
   4ce14:	1011883a 	mov	r8,r2
   4ce18:	003f3906 	br	4cb00 <__divdf3+0x594>
   4ce1c:	89bfb02e 	bgeu	r17,r6,4cce0 <__divdf3+0x774>
   4ce20:	8d63883a 	add	r17,r17,r21
   4ce24:	8d45803a 	cmpltu	r2,r17,r21
   4ce28:	1585883a 	add	r2,r2,r22
   4ce2c:	9cffff84 	addi	r19,r19,-2
   4ce30:	1887883a 	add	r3,r3,r2
   4ce34:	003f0f06 	br	4ca74 <__divdf3+0x508>
   4ce38:	ad45883a 	add	r2,r21,r21
   4ce3c:	156b803a 	cmpltu	r21,r2,r21
   4ce40:	adad883a 	add	r22,r21,r22
   4ce44:	358d883a 	add	r6,r6,r22
   4ce48:	a53fff84 	addi	r20,r20,-2
   4ce4c:	102b883a 	mov	r21,r2
   4ce50:	313fdf26 	beq	r6,r4,4cdd0 <__divdf3+0x864>
   4ce54:	003f7106 	br	4cc1c <__divdf3+0x6b0>
   4ce58:	a08003cc 	andi	r2,r20,15
   4ce5c:	10800118 	cmpnei	r2,r2,4
   4ce60:	000b883a 	mov	r5,zero
   4ce64:	103f8b1e 	bne	r2,zero,4cc94 <__divdf3+0x728>
   4ce68:	2804927a 	slli	r2,r5,9
   4ce6c:	2826977a 	slli	r19,r5,29
   4ce70:	100ad33a 	srli	r5,r2,12
   4ce74:	003fd006 	br	4cdb8 <__divdf3+0x84c>
   4ce78:	00800434 	movhi	r2,16
   4ce7c:	99400234 	orhi	r5,r19,8
   4ce80:	10bfffc4 	addi	r2,r2,-1
   4ce84:	288a703a 	and	r5,r5,r2
   4ce88:	003e7f06 	br	4c888 <__divdf3+0x31c>
   4ce8c:	a8ffea36 	bltu	r21,r3,4ce38 <__divdf3+0x8cc>
   4ce90:	1029883a 	mov	r20,r2
   4ce94:	1d7f611e 	bne	r3,r21,4cc1c <__divdf3+0x6b0>
   4ce98:	003e6506 	br	4c830 <__divdf3+0x2c4>

0004ce9c <__eqdf2>:
   4ce9c:	2810d53a 	srli	r8,r5,20
   4cea0:	3806d53a 	srli	r3,r7,20
   4cea4:	00800434 	movhi	r2,16
   4cea8:	4201ffcc 	andi	r8,r8,2047
   4ceac:	10bfffc4 	addi	r2,r2,-1
   4ceb0:	4241ffd8 	cmpnei	r9,r8,2047
   4ceb4:	2814d7fa 	srli	r10,r5,31
   4ceb8:	3816d7fa 	srli	r11,r7,31
   4cebc:	288a703a 	and	r5,r5,r2
   4cec0:	388e703a 	and	r7,r7,r2
   4cec4:	1881ffcc 	andi	r2,r3,2047
   4cec8:	48000626 	beq	r9,zero,4cee4 <__eqdf2+0x48>
   4cecc:	10c1ffe0 	cmpeqi	r3,r2,2047
   4ced0:	1800021e 	bne	r3,zero,4cedc <__eqdf2+0x40>
   4ced4:	4080011e 	bne	r8,r2,4cedc <__eqdf2+0x40>
   4ced8:	29c00826 	beq	r5,r7,4cefc <__eqdf2+0x60>
   4cedc:	00800044 	movi	r2,1
   4cee0:	f800283a 	ret
   4cee4:	2906b03a 	or	r3,r5,r4
   4cee8:	183ffc1e 	bne	r3,zero,4cedc <__eqdf2+0x40>
   4ceec:	1081ffd8 	cmpnei	r2,r2,2047
   4cef0:	103ffa1e 	bne	r2,zero,4cedc <__eqdf2+0x40>
   4cef4:	398eb03a 	or	r7,r7,r6
   4cef8:	383ff81e 	bne	r7,zero,4cedc <__eqdf2+0x40>
   4cefc:	21bff71e 	bne	r4,r6,4cedc <__eqdf2+0x40>
   4cf00:	52c00426 	beq	r10,r11,4cf14 <__eqdf2+0x78>
   4cf04:	403ff51e 	bne	r8,zero,4cedc <__eqdf2+0x40>
   4cf08:	290ab03a 	or	r5,r5,r4
   4cf0c:	2804c03a 	cmpne	r2,r5,zero
   4cf10:	f800283a 	ret
   4cf14:	0005883a 	mov	r2,zero
   4cf18:	f800283a 	ret

0004cf1c <__gedf2>:
   4cf1c:	2810d53a 	srli	r8,r5,20
   4cf20:	3812d53a 	srli	r9,r7,20
   4cf24:	00c00434 	movhi	r3,16
   4cf28:	4201ffcc 	andi	r8,r8,2047
   4cf2c:	18ffffc4 	addi	r3,r3,-1
   4cf30:	4281ffd8 	cmpnei	r10,r8,2047
   4cf34:	2816d7fa 	srli	r11,r5,31
   4cf38:	3804d7fa 	srli	r2,r7,31
   4cf3c:	28ca703a 	and	r5,r5,r3
   4cf40:	38ce703a 	and	r7,r7,r3
   4cf44:	48c1ffcc 	andi	r3,r9,2047
   4cf48:	50000a26 	beq	r10,zero,4cf74 <__gedf2+0x58>
   4cf4c:	1a41ffd8 	cmpnei	r9,r3,2047
   4cf50:	48000c26 	beq	r9,zero,4cf84 <__gedf2+0x68>
   4cf54:	4000171e 	bne	r8,zero,4cfb4 <__gedf2+0x98>
   4cf58:	2912b03a 	or	r9,r5,r4
   4cf5c:	1800121e 	bne	r3,zero,4cfa8 <__gedf2+0x8c>
   4cf60:	3994b03a 	or	r10,r7,r6
   4cf64:	5000101e 	bne	r10,zero,4cfa8 <__gedf2+0x8c>
   4cf68:	48000a1e 	bne	r9,zero,4cf94 <__gedf2+0x78>
   4cf6c:	0005883a 	mov	r2,zero
   4cf70:	f800283a 	ret
   4cf74:	2912b03a 	or	r9,r5,r4
   4cf78:	48001d1e 	bne	r9,zero,4cff0 <__gedf2+0xd4>
   4cf7c:	1a41ffe0 	cmpeqi	r9,r3,2047
   4cf80:	48000c26 	beq	r9,zero,4cfb4 <__gedf2+0x98>
   4cf84:	3992b03a 	or	r9,r7,r6
   4cf88:	4800191e 	bne	r9,zero,4cff0 <__gedf2+0xd4>
   4cf8c:	40000526 	beq	r8,zero,4cfa4 <__gedf2+0x88>
   4cf90:	58800c26 	beq	r11,r2,4cfc4 <__gedf2+0xa8>
   4cf94:	00800044 	movi	r2,1
   4cf98:	58000526 	beq	r11,zero,4cfb0 <__gedf2+0x94>
   4cf9c:	00bfffc4 	movi	r2,-1
   4cfa0:	f800283a 	ret
   4cfa4:	2912b03a 	or	r9,r5,r4
   4cfa8:	483ff91e 	bne	r9,zero,4cf90 <__gedf2+0x74>
   4cfac:	103ffb26 	beq	r2,zero,4cf9c <__gedf2+0x80>
   4cfb0:	f800283a 	ret
   4cfb4:	183ff61e 	bne	r3,zero,4cf90 <__gedf2+0x74>
   4cfb8:	3992b03a 	or	r9,r7,r6
   4cfbc:	483ff41e 	bne	r9,zero,4cf90 <__gedf2+0x74>
   4cfc0:	003ff406 	br	4cf94 <__gedf2+0x78>
   4cfc4:	1a000716 	blt	r3,r8,4cfe4 <__gedf2+0xc8>
   4cfc8:	40fff816 	blt	r8,r3,4cfac <__gedf2+0x90>
   4cfcc:	397ff136 	bltu	r7,r5,4cf94 <__gedf2+0x78>
   4cfd0:	29c00926 	beq	r5,r7,4cff8 <__gedf2+0xdc>
   4cfd4:	29ffe52e 	bgeu	r5,r7,4cf6c <__gedf2+0x50>
   4cfd8:	583ff026 	beq	r11,zero,4cf9c <__gedf2+0x80>
   4cfdc:	5805883a 	mov	r2,r11
   4cfe0:	f800283a 	ret
   4cfe4:	103fed1e 	bne	r2,zero,4cf9c <__gedf2+0x80>
   4cfe8:	00800044 	movi	r2,1
   4cfec:	f800283a 	ret
   4cff0:	00bfff84 	movi	r2,-2
   4cff4:	f800283a 	ret
   4cff8:	313fe636 	bltu	r6,r4,4cf94 <__gedf2+0x78>
   4cffc:	21bfdb2e 	bgeu	r4,r6,4cf6c <__gedf2+0x50>
   4d000:	003ff506 	br	4cfd8 <__gedf2+0xbc>

0004d004 <__ledf2>:
   4d004:	2810d53a 	srli	r8,r5,20
   4d008:	3812d53a 	srli	r9,r7,20
   4d00c:	00c00434 	movhi	r3,16
   4d010:	4201ffcc 	andi	r8,r8,2047
   4d014:	18ffffc4 	addi	r3,r3,-1
   4d018:	4281ffd8 	cmpnei	r10,r8,2047
   4d01c:	2816d7fa 	srli	r11,r5,31
   4d020:	3804d7fa 	srli	r2,r7,31
   4d024:	28ca703a 	and	r5,r5,r3
   4d028:	38ce703a 	and	r7,r7,r3
   4d02c:	48c1ffcc 	andi	r3,r9,2047
   4d030:	50000a26 	beq	r10,zero,4d05c <__ledf2+0x58>
   4d034:	1a41ffd8 	cmpnei	r9,r3,2047
   4d038:	48000c26 	beq	r9,zero,4d06c <__ledf2+0x68>
   4d03c:	4000191e 	bne	r8,zero,4d0a4 <__ledf2+0xa0>
   4d040:	2912b03a 	or	r9,r5,r4
   4d044:	18000d1e 	bne	r3,zero,4d07c <__ledf2+0x78>
   4d048:	3994b03a 	or	r10,r7,r6
   4d04c:	50000b1e 	bne	r10,zero,4d07c <__ledf2+0x78>
   4d050:	48000c1e 	bne	r9,zero,4d084 <__ledf2+0x80>
   4d054:	0005883a 	mov	r2,zero
   4d058:	f800283a 	ret
   4d05c:	2912b03a 	or	r9,r5,r4
   4d060:	48000c1e 	bne	r9,zero,4d094 <__ledf2+0x90>
   4d064:	1a41ffe0 	cmpeqi	r9,r3,2047
   4d068:	48000e26 	beq	r9,zero,4d0a4 <__ledf2+0xa0>
   4d06c:	3992b03a 	or	r9,r7,r6
   4d070:	4800081e 	bne	r9,zero,4d094 <__ledf2+0x90>
   4d074:	4000021e 	bne	r8,zero,4d080 <__ledf2+0x7c>
   4d078:	2912b03a 	or	r9,r5,r4
   4d07c:	48000726 	beq	r9,zero,4d09c <__ledf2+0x98>
   4d080:	58800c26 	beq	r11,r2,4d0b4 <__ledf2+0xb0>
   4d084:	00800044 	movi	r2,1
   4d088:	58000526 	beq	r11,zero,4d0a0 <__ledf2+0x9c>
   4d08c:	00bfffc4 	movi	r2,-1
   4d090:	f800283a 	ret
   4d094:	00800084 	movi	r2,2
   4d098:	f800283a 	ret
   4d09c:	103ffb26 	beq	r2,zero,4d08c <__ledf2+0x88>
   4d0a0:	f800283a 	ret
   4d0a4:	183ff61e 	bne	r3,zero,4d080 <__ledf2+0x7c>
   4d0a8:	3992b03a 	or	r9,r7,r6
   4d0ac:	483ff41e 	bne	r9,zero,4d080 <__ledf2+0x7c>
   4d0b0:	003ff406 	br	4d084 <__ledf2+0x80>
   4d0b4:	1a00030e 	bge	r3,r8,4d0c4 <__ledf2+0xc0>
   4d0b8:	103ff41e 	bne	r2,zero,4d08c <__ledf2+0x88>
   4d0bc:	00800044 	movi	r2,1
   4d0c0:	f800283a 	ret
   4d0c4:	40fff516 	blt	r8,r3,4d09c <__ledf2+0x98>
   4d0c8:	397fee36 	bltu	r7,r5,4d084 <__ledf2+0x80>
   4d0cc:	29c00426 	beq	r5,r7,4d0e0 <__ledf2+0xdc>
   4d0d0:	29ffe02e 	bgeu	r5,r7,4d054 <__ledf2+0x50>
   4d0d4:	583fed26 	beq	r11,zero,4d08c <__ledf2+0x88>
   4d0d8:	5805883a 	mov	r2,r11
   4d0dc:	f800283a 	ret
   4d0e0:	313fe836 	bltu	r6,r4,4d084 <__ledf2+0x80>
   4d0e4:	21bfdb2e 	bgeu	r4,r6,4d054 <__ledf2+0x50>
   4d0e8:	003ffa06 	br	4d0d4 <__ledf2+0xd0>

0004d0ec <__muldf3>:
   4d0ec:	2810d53a 	srli	r8,r5,20
   4d0f0:	defff004 	addi	sp,sp,-64
   4d0f4:	00800434 	movhi	r2,16
   4d0f8:	df000e15 	stw	fp,56(sp)
   4d0fc:	dd000a15 	stw	r20,40(sp)
   4d100:	dcc00915 	stw	r19,36(sp)
   4d104:	dc400715 	stw	r17,28(sp)
   4d108:	10bfffc4 	addi	r2,r2,-1
   4d10c:	dfc00f15 	stw	ra,60(sp)
   4d110:	ddc00d15 	stw	r23,52(sp)
   4d114:	dd800c15 	stw	r22,48(sp)
   4d118:	dd400b15 	stw	r21,44(sp)
   4d11c:	dc800815 	stw	r18,32(sp)
   4d120:	dc000615 	stw	r16,24(sp)
   4d124:	4201ffcc 	andi	r8,r8,2047
   4d128:	2828d7fa 	srli	r20,r5,31
   4d12c:	2023883a 	mov	r17,r4
   4d130:	3039883a 	mov	fp,r6
   4d134:	28a6703a 	and	r19,r5,r2
   4d138:	40013426 	beq	r8,zero,4d60c <__muldf3+0x520>
   4d13c:	4081ffe0 	cmpeqi	r2,r8,2047
   4d140:	1001461e 	bne	r2,zero,4d65c <__muldf3+0x570>
   4d144:	980a90fa 	slli	r5,r19,3
   4d148:	2026d77a 	srli	r19,r4,29
   4d14c:	202490fa 	slli	r18,r4,3
   4d150:	423f0044 	addi	r8,r8,-1023
   4d154:	9966b03a 	or	r19,r19,r5
   4d158:	9cc02034 	orhi	r19,r19,128
   4d15c:	002b883a 	mov	r21,zero
   4d160:	002d883a 	mov	r22,zero
   4d164:	3804d53a 	srli	r2,r7,20
   4d168:	00c00434 	movhi	r3,16
   4d16c:	18ffffc4 	addi	r3,r3,-1
   4d170:	1081ffcc 	andi	r2,r2,2047
   4d174:	382ed7fa 	srli	r23,r7,31
   4d178:	38e0703a 	and	r16,r7,r3
   4d17c:	10011026 	beq	r2,zero,4d5c0 <__muldf3+0x4d4>
   4d180:	10c1ffe0 	cmpeqi	r3,r2,2047
   4d184:	18013c1e 	bne	r3,zero,4d678 <__muldf3+0x58c>
   4d188:	e008d77a 	srli	r4,fp,29
   4d18c:	802090fa 	slli	r16,r16,3
   4d190:	e02290fa 	slli	r17,fp,3
   4d194:	10bf0044 	addi	r2,r2,-1023
   4d198:	2420b03a 	or	r16,r4,r16
   4d19c:	84002034 	orhi	r16,r16,128
   4d1a0:	4091883a 	add	r8,r8,r2
   4d1a4:	0009883a 	mov	r4,zero
   4d1a8:	a8800428 	cmpgeui	r2,r21,16
   4d1ac:	a5ccf03a 	xor	r6,r20,r23
   4d1b0:	41c00044 	addi	r7,r8,1
   4d1b4:	1000371e 	bne	r2,zero,4d294 <__muldf3+0x1a8>
   4d1b8:	a80490ba 	slli	r2,r21,2
   4d1bc:	00c00174 	movhi	r3,5
   4d1c0:	10c7883a 	add	r3,r2,r3
   4d1c4:	18b47317 	ldw	r2,-11828(r3)
   4d1c8:	1000683a 	jmp	r2
   4d1cc:	0004d294 	movui	zero,4938
   4d1d0:	0004d210 	cmplti	zero,zero,4936
   4d1d4:	0004d210 	cmplti	zero,zero,4936
   4d1d8:	0004d20c 	andi	zero,zero,4936
   4d1dc:	0004d21c 	xori	zero,zero,4936
   4d1e0:	0004d21c 	xori	zero,zero,4936
   4d1e4:	0004d6ec 	andhi	zero,zero,4955
   4d1e8:	0004d20c 	andi	zero,zero,4936
   4d1ec:	0004d21c 	xori	zero,zero,4936
   4d1f0:	0004d6ec 	andhi	zero,zero,4955
   4d1f4:	0004d21c 	xori	zero,zero,4936
   4d1f8:	0004d20c 	andi	zero,zero,4936
   4d1fc:	0004d694 	movui	zero,4954
   4d200:	0004d694 	movui	zero,4954
   4d204:	0004d694 	movui	zero,4954
   4d208:	0004d778 	rdprs	zero,zero,4957
   4d20c:	b80d883a 	mov	r6,r23
   4d210:	8027883a 	mov	r19,r16
   4d214:	8825883a 	mov	r18,r17
   4d218:	202d883a 	mov	r22,r4
   4d21c:	b08000a0 	cmpeqi	r2,r22,2
   4d220:	1000181e 	bne	r2,zero,4d284 <__muldf3+0x198>
   4d224:	b08000e0 	cmpeqi	r2,r22,3
   4d228:	1001961e 	bne	r2,zero,4d884 <__muldf3+0x798>
   4d22c:	b0800060 	cmpeqi	r2,r22,1
   4d230:	1000c926 	beq	r2,zero,4d558 <__muldf3+0x46c>
   4d234:	0007883a 	mov	r3,zero
   4d238:	0027883a 	mov	r19,zero
   4d23c:	0025883a 	mov	r18,zero
   4d240:	1806953a 	slli	r3,r3,20
   4d244:	300c97fa 	slli	r6,r6,31
   4d248:	9005883a 	mov	r2,r18
   4d24c:	1cc6b03a 	or	r3,r3,r19
   4d250:	1986b03a 	or	r3,r3,r6
   4d254:	dfc00f17 	ldw	ra,60(sp)
   4d258:	df000e17 	ldw	fp,56(sp)
   4d25c:	ddc00d17 	ldw	r23,52(sp)
   4d260:	dd800c17 	ldw	r22,48(sp)
   4d264:	dd400b17 	ldw	r21,44(sp)
   4d268:	dd000a17 	ldw	r20,40(sp)
   4d26c:	dcc00917 	ldw	r19,36(sp)
   4d270:	dc800817 	ldw	r18,32(sp)
   4d274:	dc400717 	ldw	r17,28(sp)
   4d278:	dc000617 	ldw	r16,24(sp)
   4d27c:	dec01004 	addi	sp,sp,64
   4d280:	f800283a 	ret
   4d284:	00c1ffc4 	movi	r3,2047
   4d288:	0027883a 	mov	r19,zero
   4d28c:	0025883a 	mov	r18,zero
   4d290:	003feb06 	br	4d240 <__muldf3+0x154>
   4d294:	9028d43a 	srli	r20,r18,16
   4d298:	8f3fffcc 	andi	fp,r17,65535
   4d29c:	957fffcc 	andi	r21,r18,65535
   4d2a0:	a80b883a 	mov	r5,r21
   4d2a4:	e009883a 	mov	r4,fp
   4d2a8:	d9800315 	stw	r6,12(sp)
   4d2ac:	da000215 	stw	r8,8(sp)
   4d2b0:	d9c00115 	stw	r7,4(sp)
   4d2b4:	8822d43a 	srli	r17,r17,16
   4d2b8:	004bc540 	call	4bc54 <__mulsi3>
   4d2bc:	e00b883a 	mov	r5,fp
   4d2c0:	a009883a 	mov	r4,r20
   4d2c4:	102d883a 	mov	r22,r2
   4d2c8:	004bc540 	call	4bc54 <__mulsi3>
   4d2cc:	880b883a 	mov	r5,r17
   4d2d0:	a009883a 	mov	r4,r20
   4d2d4:	102f883a 	mov	r23,r2
   4d2d8:	004bc540 	call	4bc54 <__mulsi3>
   4d2dc:	a80b883a 	mov	r5,r21
   4d2e0:	8809883a 	mov	r4,r17
   4d2e4:	d8800015 	stw	r2,0(sp)
   4d2e8:	004bc540 	call	4bc54 <__mulsi3>
   4d2ec:	b006d43a 	srli	r3,r22,16
   4d2f0:	15e5883a 	add	r18,r2,r23
   4d2f4:	d9c00117 	ldw	r7,4(sp)
   4d2f8:	1c87883a 	add	r3,r3,r18
   4d2fc:	da000217 	ldw	r8,8(sp)
   4d300:	d9800317 	ldw	r6,12(sp)
   4d304:	1dc0042e 	bgeu	r3,r23,4d318 <__muldf3+0x22c>
   4d308:	d9000017 	ldw	r4,0(sp)
   4d30c:	00800074 	movhi	r2,1
   4d310:	2085883a 	add	r2,r4,r2
   4d314:	d8800015 	stw	r2,0(sp)
   4d318:	1804943a 	slli	r2,r3,16
   4d31c:	85ffffcc 	andi	r23,r16,65535
   4d320:	b5bfffcc 	andi	r22,r22,65535
   4d324:	1585883a 	add	r2,r2,r22
   4d328:	a80b883a 	mov	r5,r21
   4d32c:	b809883a 	mov	r4,r23
   4d330:	1824d43a 	srli	r18,r3,16
   4d334:	d9800515 	stw	r6,20(sp)
   4d338:	da000415 	stw	r8,16(sp)
   4d33c:	d9c00315 	stw	r7,12(sp)
   4d340:	8020d43a 	srli	r16,r16,16
   4d344:	d8800115 	stw	r2,4(sp)
   4d348:	004bc540 	call	4bc54 <__mulsi3>
   4d34c:	a009883a 	mov	r4,r20
   4d350:	b80b883a 	mov	r5,r23
   4d354:	d8800215 	stw	r2,8(sp)
   4d358:	004bc540 	call	4bc54 <__mulsi3>
   4d35c:	a009883a 	mov	r4,r20
   4d360:	800b883a 	mov	r5,r16
   4d364:	102d883a 	mov	r22,r2
   4d368:	004bc540 	call	4bc54 <__mulsi3>
   4d36c:	a80b883a 	mov	r5,r21
   4d370:	8009883a 	mov	r4,r16
   4d374:	1029883a 	mov	r20,r2
   4d378:	004bc540 	call	4bc54 <__mulsi3>
   4d37c:	da800217 	ldw	r10,8(sp)
   4d380:	1585883a 	add	r2,r2,r22
   4d384:	d9c00317 	ldw	r7,12(sp)
   4d388:	5006d43a 	srli	r3,r10,16
   4d38c:	da000417 	ldw	r8,16(sp)
   4d390:	d9800517 	ldw	r6,20(sp)
   4d394:	1887883a 	add	r3,r3,r2
   4d398:	1d80022e 	bgeu	r3,r22,4d3a4 <__muldf3+0x2b8>
   4d39c:	00800074 	movhi	r2,1
   4d3a0:	a0a9883a 	add	r20,r20,r2
   4d3a4:	1804d43a 	srli	r2,r3,16
   4d3a8:	1806943a 	slli	r3,r3,16
   4d3ac:	982cd43a 	srli	r22,r19,16
   4d3b0:	9d7fffcc 	andi	r21,r19,65535
   4d3b4:	e009883a 	mov	r4,fp
   4d3b8:	54ffffcc 	andi	r19,r10,65535
   4d3bc:	a80b883a 	mov	r5,r21
   4d3c0:	1ce7883a 	add	r19,r3,r19
   4d3c4:	d9800515 	stw	r6,20(sp)
   4d3c8:	da000415 	stw	r8,16(sp)
   4d3cc:	d9c00315 	stw	r7,12(sp)
   4d3d0:	1529883a 	add	r20,r2,r20
   4d3d4:	004bc540 	call	4bc54 <__mulsi3>
   4d3d8:	e00b883a 	mov	r5,fp
   4d3dc:	b009883a 	mov	r4,r22
   4d3e0:	d8800215 	stw	r2,8(sp)
   4d3e4:	004bc540 	call	4bc54 <__mulsi3>
   4d3e8:	8809883a 	mov	r4,r17
   4d3ec:	b00b883a 	mov	r5,r22
   4d3f0:	1039883a 	mov	fp,r2
   4d3f4:	004bc540 	call	4bc54 <__mulsi3>
   4d3f8:	8809883a 	mov	r4,r17
   4d3fc:	a80b883a 	mov	r5,r21
   4d400:	1023883a 	mov	r17,r2
   4d404:	004bc540 	call	4bc54 <__mulsi3>
   4d408:	d8c00217 	ldw	r3,8(sp)
   4d40c:	1705883a 	add	r2,r2,fp
   4d410:	d9c00317 	ldw	r7,12(sp)
   4d414:	1808d43a 	srli	r4,r3,16
   4d418:	da000417 	ldw	r8,16(sp)
   4d41c:	d9800517 	ldw	r6,20(sp)
   4d420:	2089883a 	add	r4,r4,r2
   4d424:	94e5883a 	add	r18,r18,r19
   4d428:	2700022e 	bgeu	r4,fp,4d434 <__muldf3+0x348>
   4d42c:	00800074 	movhi	r2,1
   4d430:	88a3883a 	add	r17,r17,r2
   4d434:	2004d43a 	srli	r2,r4,16
   4d438:	2038943a 	slli	fp,r4,16
   4d43c:	18ffffcc 	andi	r3,r3,65535
   4d440:	b809883a 	mov	r4,r23
   4d444:	a80b883a 	mov	r5,r21
   4d448:	d9800415 	stw	r6,16(sp)
   4d44c:	da000315 	stw	r8,12(sp)
   4d450:	d9c00215 	stw	r7,8(sp)
   4d454:	e0f9883a 	add	fp,fp,r3
   4d458:	1463883a 	add	r17,r2,r17
   4d45c:	004bc540 	call	4bc54 <__mulsi3>
   4d460:	b80b883a 	mov	r5,r23
   4d464:	b009883a 	mov	r4,r22
   4d468:	102f883a 	mov	r23,r2
   4d46c:	004bc540 	call	4bc54 <__mulsi3>
   4d470:	b00b883a 	mov	r5,r22
   4d474:	8009883a 	mov	r4,r16
   4d478:	102d883a 	mov	r22,r2
   4d47c:	004bc540 	call	4bc54 <__mulsi3>
   4d480:	a80b883a 	mov	r5,r21
   4d484:	8009883a 	mov	r4,r16
   4d488:	1021883a 	mov	r16,r2
   4d48c:	004bc540 	call	4bc54 <__mulsi3>
   4d490:	b80ad43a 	srli	r5,r23,16
   4d494:	1585883a 	add	r2,r2,r22
   4d498:	d9c00217 	ldw	r7,8(sp)
   4d49c:	288b883a 	add	r5,r5,r2
   4d4a0:	da000317 	ldw	r8,12(sp)
   4d4a4:	d9800417 	ldw	r6,16(sp)
   4d4a8:	2d80022e 	bgeu	r5,r22,4d4b4 <__muldf3+0x3c8>
   4d4ac:	00800074 	movhi	r2,1
   4d4b0:	80a1883a 	add	r16,r16,r2
   4d4b4:	2806943a 	slli	r3,r5,16
   4d4b8:	d8800017 	ldw	r2,0(sp)
   4d4bc:	bdffffcc 	andi	r23,r23,65535
   4d4c0:	1dc7883a 	add	r3,r3,r23
   4d4c4:	90ab883a 	add	r21,r18,r2
   4d4c8:	acd5803a 	cmpltu	r10,r21,r19
   4d4cc:	1d07883a 	add	r3,r3,r20
   4d4d0:	af2b883a 	add	r21,r21,fp
   4d4d4:	1a97883a 	add	r11,r3,r10
   4d4d8:	af09803a 	cmpltu	r4,r21,fp
   4d4dc:	2826d43a 	srli	r19,r5,16
   4d4e0:	5c53883a 	add	r9,r11,r17
   4d4e4:	4905883a 	add	r2,r9,r4
   4d4e8:	1d07803a 	cmpltu	r3,r3,r20
   4d4ec:	5a95803a 	cmpltu	r10,r11,r10
   4d4f0:	1a86b03a 	or	r3,r3,r10
   4d4f4:	1109803a 	cmpltu	r4,r2,r4
   4d4f8:	4c53803a 	cmpltu	r9,r9,r17
   4d4fc:	1ce7883a 	add	r19,r3,r19
   4d500:	4908b03a 	or	r4,r9,r4
   4d504:	a824927a 	slli	r18,r21,9
   4d508:	d8c00117 	ldw	r3,4(sp)
   4d50c:	9927883a 	add	r19,r19,r4
   4d510:	9c27883a 	add	r19,r19,r16
   4d514:	9826927a 	slli	r19,r19,9
   4d518:	a82ad5fa 	srli	r21,r21,23
   4d51c:	100ad5fa 	srli	r5,r2,23
   4d520:	90e4b03a 	or	r18,r18,r3
   4d524:	1004927a 	slli	r2,r2,9
   4d528:	9024c03a 	cmpne	r18,r18,zero
   4d52c:	9564b03a 	or	r18,r18,r21
   4d530:	98c0402c 	andhi	r3,r19,256
   4d534:	90a4b03a 	or	r18,r18,r2
   4d538:	9966b03a 	or	r19,r19,r5
   4d53c:	1800b626 	beq	r3,zero,4d818 <__muldf3+0x72c>
   4d540:	9006d07a 	srli	r3,r18,1
   4d544:	980497fa 	slli	r2,r19,31
   4d548:	9480004c 	andi	r18,r18,1
   4d54c:	9826d07a 	srli	r19,r19,1
   4d550:	1c86b03a 	or	r3,r3,r18
   4d554:	18a4b03a 	or	r18,r3,r2
   4d558:	3900ffc4 	addi	r4,r7,1023
   4d55c:	0100690e 	bge	zero,r4,4d704 <__muldf3+0x618>
   4d560:	908001cc 	andi	r2,r18,7
   4d564:	10000726 	beq	r2,zero,4d584 <__muldf3+0x498>
   4d568:	908003cc 	andi	r2,r18,15
   4d56c:	10800120 	cmpeqi	r2,r2,4
   4d570:	1000041e 	bne	r2,zero,4d584 <__muldf3+0x498>
   4d574:	90800104 	addi	r2,r18,4
   4d578:	14a5803a 	cmpltu	r18,r2,r18
   4d57c:	9ca7883a 	add	r19,r19,r18
   4d580:	1025883a 	mov	r18,r2
   4d584:	9880402c 	andhi	r2,r19,256
   4d588:	10000426 	beq	r2,zero,4d59c <__muldf3+0x4b0>
   4d58c:	00bfc034 	movhi	r2,65280
   4d590:	10bfffc4 	addi	r2,r2,-1
   4d594:	98a6703a 	and	r19,r19,r2
   4d598:	39010004 	addi	r4,r7,1024
   4d59c:	2081ffc8 	cmpgei	r2,r4,2047
   4d5a0:	103f381e 	bne	r2,zero,4d284 <__muldf3+0x198>
   4d5a4:	9804977a 	slli	r2,r19,29
   4d5a8:	9024d0fa 	srli	r18,r18,3
   4d5ac:	9826927a 	slli	r19,r19,9
   4d5b0:	20c1ffcc 	andi	r3,r4,2047
   4d5b4:	14a4b03a 	or	r18,r2,r18
   4d5b8:	9826d33a 	srli	r19,r19,12
   4d5bc:	003f2006 	br	4d240 <__muldf3+0x154>
   4d5c0:	8722b03a 	or	r17,r16,fp
   4d5c4:	88004526 	beq	r17,zero,4d6dc <__muldf3+0x5f0>
   4d5c8:	da000015 	stw	r8,0(sp)
   4d5cc:	80008626 	beq	r16,zero,4d7e8 <__muldf3+0x6fc>
   4d5d0:	8009883a 	mov	r4,r16
   4d5d4:	004e3680 	call	4e368 <__clzsi2>
   4d5d8:	da000017 	ldw	r8,0(sp)
   4d5dc:	117ffd44 	addi	r5,r2,-11
   4d5e0:	01000744 	movi	r4,29
   4d5e4:	147ffe04 	addi	r17,r2,-8
   4d5e8:	2149c83a 	sub	r4,r4,r5
   4d5ec:	8460983a 	sll	r16,r16,r17
   4d5f0:	e108d83a 	srl	r4,fp,r4
   4d5f4:	e462983a 	sll	r17,fp,r17
   4d5f8:	2420b03a 	or	r16,r4,r16
   4d5fc:	4091c83a 	sub	r8,r8,r2
   4d600:	423f0344 	addi	r8,r8,-1011
   4d604:	0009883a 	mov	r4,zero
   4d608:	003ee706 	br	4d1a8 <__muldf3+0xbc>
   4d60c:	9924b03a 	or	r18,r19,r4
   4d610:	90002d26 	beq	r18,zero,4d6c8 <__muldf3+0x5dc>
   4d614:	d9c00015 	stw	r7,0(sp)
   4d618:	98006826 	beq	r19,zero,4d7bc <__muldf3+0x6d0>
   4d61c:	9809883a 	mov	r4,r19
   4d620:	004e3680 	call	4e368 <__clzsi2>
   4d624:	d9c00017 	ldw	r7,0(sp)
   4d628:	113ffd44 	addi	r4,r2,-11
   4d62c:	00c00744 	movi	r3,29
   4d630:	14bffe04 	addi	r18,r2,-8
   4d634:	1907c83a 	sub	r3,r3,r4
   4d638:	9ca6983a 	sll	r19,r19,r18
   4d63c:	88c6d83a 	srl	r3,r17,r3
   4d640:	8ca4983a 	sll	r18,r17,r18
   4d644:	1ce6b03a 	or	r19,r3,r19
   4d648:	023f0344 	movi	r8,-1011
   4d64c:	4091c83a 	sub	r8,r8,r2
   4d650:	002b883a 	mov	r21,zero
   4d654:	002d883a 	mov	r22,zero
   4d658:	003ec206 	br	4d164 <__muldf3+0x78>
   4d65c:	9924b03a 	or	r18,r19,r4
   4d660:	9000141e 	bne	r18,zero,4d6b4 <__muldf3+0x5c8>
   4d664:	0027883a 	mov	r19,zero
   4d668:	05400204 	movi	r21,8
   4d66c:	0201ffc4 	movi	r8,2047
   4d670:	05800084 	movi	r22,2
   4d674:	003ebb06 	br	4d164 <__muldf3+0x78>
   4d678:	8722b03a 	or	r17,r16,fp
   4d67c:	4201ffc4 	addi	r8,r8,2047
   4d680:	8800081e 	bne	r17,zero,4d6a4 <__muldf3+0x5b8>
   4d684:	ad400094 	ori	r21,r21,2
   4d688:	0021883a 	mov	r16,zero
   4d68c:	01000084 	movi	r4,2
   4d690:	003ec506 	br	4d1a8 <__muldf3+0xbc>
   4d694:	b08000a0 	cmpeqi	r2,r22,2
   4d698:	a00d883a 	mov	r6,r20
   4d69c:	103ee126 	beq	r2,zero,4d224 <__muldf3+0x138>
   4d6a0:	003ef806 	br	4d284 <__muldf3+0x198>
   4d6a4:	ad4000d4 	ori	r21,r21,3
   4d6a8:	e023883a 	mov	r17,fp
   4d6ac:	010000c4 	movi	r4,3
   4d6b0:	003ebd06 	br	4d1a8 <__muldf3+0xbc>
   4d6b4:	2025883a 	mov	r18,r4
   4d6b8:	05400304 	movi	r21,12
   4d6bc:	0201ffc4 	movi	r8,2047
   4d6c0:	058000c4 	movi	r22,3
   4d6c4:	003ea706 	br	4d164 <__muldf3+0x78>
   4d6c8:	0027883a 	mov	r19,zero
   4d6cc:	05400104 	movi	r21,4
   4d6d0:	0011883a 	mov	r8,zero
   4d6d4:	05800044 	movi	r22,1
   4d6d8:	003ea206 	br	4d164 <__muldf3+0x78>
   4d6dc:	ad400054 	ori	r21,r21,1
   4d6e0:	0021883a 	mov	r16,zero
   4d6e4:	01000044 	movi	r4,1
   4d6e8:	003eaf06 	br	4d1a8 <__muldf3+0xbc>
   4d6ec:	04c00434 	movhi	r19,16
   4d6f0:	000d883a 	mov	r6,zero
   4d6f4:	9cffffc4 	addi	r19,r19,-1
   4d6f8:	04bfffc4 	movi	r18,-1
   4d6fc:	00c1ffc4 	movi	r3,2047
   4d700:	003ecf06 	br	4d240 <__muldf3+0x154>
   4d704:	00800044 	movi	r2,1
   4d708:	1105c83a 	sub	r2,r2,r4
   4d70c:	10c00e48 	cmpgei	r3,r2,57
   4d710:	183ec81e 	bne	r3,zero,4d234 <__muldf3+0x148>
   4d714:	10c00808 	cmpgei	r3,r2,32
   4d718:	1800411e 	bne	r3,zero,4d820 <__muldf3+0x734>
   4d71c:	39c10784 	addi	r7,r7,1054
   4d720:	99c6983a 	sll	r3,r19,r7
   4d724:	9088d83a 	srl	r4,r18,r2
   4d728:	91ce983a 	sll	r7,r18,r7
   4d72c:	98a6d83a 	srl	r19,r19,r2
   4d730:	1904b03a 	or	r2,r3,r4
   4d734:	3824c03a 	cmpne	r18,r7,zero
   4d738:	1484b03a 	or	r2,r2,r18
   4d73c:	10c001cc 	andi	r3,r2,7
   4d740:	18000726 	beq	r3,zero,4d760 <__muldf3+0x674>
   4d744:	10c003cc 	andi	r3,r2,15
   4d748:	18c00120 	cmpeqi	r3,r3,4
   4d74c:	1800041e 	bne	r3,zero,4d760 <__muldf3+0x674>
   4d750:	10c00104 	addi	r3,r2,4
   4d754:	1885803a 	cmpltu	r2,r3,r2
   4d758:	98a7883a 	add	r19,r19,r2
   4d75c:	1805883a 	mov	r2,r3
   4d760:	98c0202c 	andhi	r3,r19,128
   4d764:	18004326 	beq	r3,zero,4d874 <__muldf3+0x788>
   4d768:	00c00044 	movi	r3,1
   4d76c:	0027883a 	mov	r19,zero
   4d770:	0025883a 	mov	r18,zero
   4d774:	003eb206 	br	4d240 <__muldf3+0x154>
   4d778:	9880022c 	andhi	r2,r19,8
   4d77c:	10000926 	beq	r2,zero,4d7a4 <__muldf3+0x6b8>
   4d780:	8080022c 	andhi	r2,r16,8
   4d784:	1000071e 	bne	r2,zero,4d7a4 <__muldf3+0x6b8>
   4d788:	00800434 	movhi	r2,16
   4d78c:	84c00234 	orhi	r19,r16,8
   4d790:	10bfffc4 	addi	r2,r2,-1
   4d794:	98a6703a 	and	r19,r19,r2
   4d798:	b80d883a 	mov	r6,r23
   4d79c:	8825883a 	mov	r18,r17
   4d7a0:	003fd606 	br	4d6fc <__muldf3+0x610>
   4d7a4:	00800434 	movhi	r2,16
   4d7a8:	9cc00234 	orhi	r19,r19,8
   4d7ac:	10bfffc4 	addi	r2,r2,-1
   4d7b0:	98a6703a 	and	r19,r19,r2
   4d7b4:	a00d883a 	mov	r6,r20
   4d7b8:	003fd006 	br	4d6fc <__muldf3+0x610>
   4d7bc:	004e3680 	call	4e368 <__clzsi2>
   4d7c0:	11000544 	addi	r4,r2,21
   4d7c4:	21400748 	cmpgei	r5,r4,29
   4d7c8:	1007883a 	mov	r3,r2
   4d7cc:	d9c00017 	ldw	r7,0(sp)
   4d7d0:	10800804 	addi	r2,r2,32
   4d7d4:	283f9526 	beq	r5,zero,4d62c <__muldf3+0x540>
   4d7d8:	18fffe04 	addi	r3,r3,-8
   4d7dc:	88e6983a 	sll	r19,r17,r3
   4d7e0:	0025883a 	mov	r18,zero
   4d7e4:	003f9806 	br	4d648 <__muldf3+0x55c>
   4d7e8:	e009883a 	mov	r4,fp
   4d7ec:	004e3680 	call	4e368 <__clzsi2>
   4d7f0:	11400544 	addi	r5,r2,21
   4d7f4:	29000748 	cmpgei	r4,r5,29
   4d7f8:	1007883a 	mov	r3,r2
   4d7fc:	da000017 	ldw	r8,0(sp)
   4d800:	10800804 	addi	r2,r2,32
   4d804:	203f7626 	beq	r4,zero,4d5e0 <__muldf3+0x4f4>
   4d808:	1c3ffe04 	addi	r16,r3,-8
   4d80c:	e420983a 	sll	r16,fp,r16
   4d810:	0023883a 	mov	r17,zero
   4d814:	003f7906 	br	4d5fc <__muldf3+0x510>
   4d818:	400f883a 	mov	r7,r8
   4d81c:	003f4e06 	br	4d558 <__muldf3+0x46c>
   4d820:	00fff844 	movi	r3,-31
   4d824:	1907c83a 	sub	r3,r3,r4
   4d828:	10800820 	cmpeqi	r2,r2,32
   4d82c:	98c6d83a 	srl	r3,r19,r3
   4d830:	1000031e 	bne	r2,zero,4d840 <__muldf3+0x754>
   4d834:	39c10f84 	addi	r7,r7,1086
   4d838:	99e6983a 	sll	r19,r19,r7
   4d83c:	94e4b03a 	or	r18,r18,r19
   4d840:	9024c03a 	cmpne	r18,r18,zero
   4d844:	90c4b03a 	or	r2,r18,r3
   4d848:	148001cc 	andi	r18,r2,7
   4d84c:	9000051e 	bne	r18,zero,4d864 <__muldf3+0x778>
   4d850:	0027883a 	mov	r19,zero
   4d854:	1004d0fa 	srli	r2,r2,3
   4d858:	0007883a 	mov	r3,zero
   4d85c:	14a4b03a 	or	r18,r2,r18
   4d860:	003e7706 	br	4d240 <__muldf3+0x154>
   4d864:	10c003cc 	andi	r3,r2,15
   4d868:	18c00118 	cmpnei	r3,r3,4
   4d86c:	0027883a 	mov	r19,zero
   4d870:	183fb71e 	bne	r3,zero,4d750 <__muldf3+0x664>
   4d874:	9806927a 	slli	r3,r19,9
   4d878:	9824977a 	slli	r18,r19,29
   4d87c:	1826d33a 	srli	r19,r3,12
   4d880:	003ff406 	br	4d854 <__muldf3+0x768>
   4d884:	00800434 	movhi	r2,16
   4d888:	9cc00234 	orhi	r19,r19,8
   4d88c:	10bfffc4 	addi	r2,r2,-1
   4d890:	98a6703a 	and	r19,r19,r2
   4d894:	003f9906 	br	4d6fc <__muldf3+0x610>

0004d898 <__subdf3>:
   4d898:	00800434 	movhi	r2,16
   4d89c:	3810d53a 	srli	r8,r7,20
   4d8a0:	10bfffc4 	addi	r2,r2,-1
   4d8a4:	2806d53a 	srli	r3,r5,20
   4d8a8:	2892703a 	and	r9,r5,r2
   4d8ac:	3884703a 	and	r2,r7,r2
   4d8b0:	280ad7fa 	srli	r5,r5,31
   4d8b4:	481290fa 	slli	r9,r9,3
   4d8b8:	2018d77a 	srli	r12,r4,29
   4d8bc:	100490fa 	slli	r2,r2,3
   4d8c0:	3016d77a 	srli	r11,r6,29
   4d8c4:	defffb04 	addi	sp,sp,-20
   4d8c8:	4201ffcc 	andi	r8,r8,2047
   4d8cc:	dc800215 	stw	r18,8(sp)
   4d8d0:	dc400115 	stw	r17,4(sp)
   4d8d4:	1c81ffcc 	andi	r18,r3,2047
   4d8d8:	dfc00415 	stw	ra,16(sp)
   4d8dc:	dcc00315 	stw	r19,12(sp)
   4d8e0:	dc000015 	stw	r16,0(sp)
   4d8e4:	4281ffd8 	cmpnei	r10,r8,2047
   4d8e8:	2823883a 	mov	r17,r5
   4d8ec:	201c90fa 	slli	r14,r4,3
   4d8f0:	380ed7fa 	srli	r7,r7,31
   4d8f4:	301a90fa 	slli	r13,r6,3
   4d8f8:	29403fcc 	andi	r5,r5,255
   4d8fc:	6252b03a 	or	r9,r12,r9
   4d900:	589eb03a 	or	r15,r11,r2
   4d904:	9207c83a 	sub	r3,r18,r8
   4d908:	50006826 	beq	r10,zero,4daac <__subdf3+0x214>
   4d90c:	3ac0005c 	xori	r11,r7,1
   4d910:	2ac07326 	beq	r5,r11,4dae0 <__subdf3+0x248>
   4d914:	00c0590e 	bge	zero,r3,4da7c <__subdf3+0x1e4>
   4d918:	4000691e 	bne	r8,zero,4dac0 <__subdf3+0x228>
   4d91c:	7b44b03a 	or	r2,r15,r13
   4d920:	1000fb26 	beq	r2,zero,4dd10 <__subdf3+0x478>
   4d924:	18bfffc4 	addi	r2,r3,-1
   4d928:	10019126 	beq	r2,zero,4df70 <__subdf3+0x6d8>
   4d92c:	18c1ffd8 	cmpnei	r3,r3,2047
   4d930:	1800c326 	beq	r3,zero,4dc40 <__subdf3+0x3a8>
   4d934:	1007883a 	mov	r3,r2
   4d938:	18800e48 	cmpgei	r2,r3,57
   4d93c:	1000651e 	bne	r2,zero,4dad4 <__subdf3+0x23c>
   4d940:	18800808 	cmpgei	r2,r3,32
   4d944:	1001331e 	bne	r2,zero,4de14 <__subdf3+0x57c>
   4d948:	00800804 	movi	r2,32
   4d94c:	10c5c83a 	sub	r2,r2,r3
   4d950:	78a0983a 	sll	r16,r15,r2
   4d954:	68c8d83a 	srl	r4,r13,r3
   4d958:	689a983a 	sll	r13,r13,r2
   4d95c:	78c4d83a 	srl	r2,r15,r3
   4d960:	8120b03a 	or	r16,r16,r4
   4d964:	681ac03a 	cmpne	r13,r13,zero
   4d968:	8360b03a 	or	r16,r16,r13
   4d96c:	4893c83a 	sub	r9,r9,r2
   4d970:	7421c83a 	sub	r16,r14,r16
   4d974:	7409803a 	cmpltu	r4,r14,r16
   4d978:	4909c83a 	sub	r4,r9,r4
   4d97c:	2080202c 	andhi	r2,r4,128
   4d980:	10009326 	beq	r2,zero,4dbd0 <__subdf3+0x338>
   4d984:	04c02034 	movhi	r19,128
   4d988:	9cffffc4 	addi	r19,r19,-1
   4d98c:	24e6703a 	and	r19,r4,r19
   4d990:	9800b926 	beq	r19,zero,4dc78 <__subdf3+0x3e0>
   4d994:	9809883a 	mov	r4,r19
   4d998:	004e3680 	call	4e368 <__clzsi2>
   4d99c:	10fffe04 	addi	r3,r2,-8
   4d9a0:	01000804 	movi	r4,32
   4d9a4:	20c9c83a 	sub	r4,r4,r3
   4d9a8:	8108d83a 	srl	r4,r16,r4
   4d9ac:	98e6983a 	sll	r19,r19,r3
   4d9b0:	80e0983a 	sll	r16,r16,r3
   4d9b4:	24c8b03a 	or	r4,r4,r19
   4d9b8:	1c80b816 	blt	r3,r18,4dc9c <__subdf3+0x404>
   4d9bc:	1c87c83a 	sub	r3,r3,r18
   4d9c0:	19400044 	addi	r5,r3,1
   4d9c4:	28800808 	cmpgei	r2,r5,32
   4d9c8:	1000751e 	bne	r2,zero,4dba0 <__subdf3+0x308>
   4d9cc:	00800804 	movi	r2,32
   4d9d0:	1145c83a 	sub	r2,r2,r5
   4d9d4:	8146d83a 	srl	r3,r16,r5
   4d9d8:	80a0983a 	sll	r16,r16,r2
   4d9dc:	2084983a 	sll	r2,r4,r2
   4d9e0:	2148d83a 	srl	r4,r4,r5
   4d9e4:	8020c03a 	cmpne	r16,r16,zero
   4d9e8:	10c4b03a 	or	r2,r2,r3
   4d9ec:	1420b03a 	or	r16,r2,r16
   4d9f0:	0025883a 	mov	r18,zero
   4d9f4:	808001cc 	andi	r2,r16,7
   4d9f8:	10000726 	beq	r2,zero,4da18 <__subdf3+0x180>
   4d9fc:	808003cc 	andi	r2,r16,15
   4da00:	10800120 	cmpeqi	r2,r2,4
   4da04:	1000041e 	bne	r2,zero,4da18 <__subdf3+0x180>
   4da08:	80800104 	addi	r2,r16,4
   4da0c:	1421803a 	cmpltu	r16,r2,r16
   4da10:	2409883a 	add	r4,r4,r16
   4da14:	1021883a 	mov	r16,r2
   4da18:	2080202c 	andhi	r2,r4,128
   4da1c:	10006e26 	beq	r2,zero,4dbd8 <__subdf3+0x340>
   4da20:	90c00044 	addi	r3,r18,1
   4da24:	1881ffe0 	cmpeqi	r2,r3,2047
   4da28:	18c1ffcc 	andi	r3,r3,2047
   4da2c:	1000801e 	bne	r2,zero,4dc30 <__subdf3+0x398>
   4da30:	00bfe034 	movhi	r2,65408
   4da34:	10bfffc4 	addi	r2,r2,-1
   4da38:	2088703a 	and	r4,r4,r2
   4da3c:	2004977a 	slli	r2,r4,29
   4da40:	2008927a 	slli	r4,r4,9
   4da44:	8020d0fa 	srli	r16,r16,3
   4da48:	2008d33a 	srli	r4,r4,12
   4da4c:	1404b03a 	or	r2,r2,r16
   4da50:	1806953a 	slli	r3,r3,20
   4da54:	882297fa 	slli	r17,r17,31
   4da58:	1906b03a 	or	r3,r3,r4
   4da5c:	1c46b03a 	or	r3,r3,r17
   4da60:	dfc00417 	ldw	ra,16(sp)
   4da64:	dcc00317 	ldw	r19,12(sp)
   4da68:	dc800217 	ldw	r18,8(sp)
   4da6c:	dc400117 	ldw	r17,4(sp)
   4da70:	dc000017 	ldw	r16,0(sp)
   4da74:	dec00504 	addi	sp,sp,20
   4da78:	f800283a 	ret
   4da7c:	18002c26 	beq	r3,zero,4db30 <__subdf3+0x298>
   4da80:	4487c83a 	sub	r3,r8,r18
   4da84:	5823883a 	mov	r17,r11
   4da88:	9000bb1e 	bne	r18,zero,4dd78 <__subdf3+0x4e0>
   4da8c:	4b84b03a 	or	r2,r9,r14
   4da90:	10011726 	beq	r2,zero,4def0 <__subdf3+0x658>
   4da94:	18bfffc4 	addi	r2,r3,-1
   4da98:	10016326 	beq	r2,zero,4e028 <__subdf3+0x790>
   4da9c:	18c1ffd8 	cmpnei	r3,r3,2047
   4daa0:	18012c26 	beq	r3,zero,4df54 <__subdf3+0x6bc>
   4daa4:	1007883a 	mov	r3,r2
   4daa8:	0000b506 	br	4dd80 <__subdf3+0x4e8>
   4daac:	7b44b03a 	or	r2,r15,r13
   4dab0:	103f9626 	beq	r2,zero,4d90c <__subdf3+0x74>
   4dab4:	3ac03fcc 	andi	r11,r7,255
   4dab8:	29c07d26 	beq	r5,r7,4dcb0 <__subdf3+0x418>
   4dabc:	00ffef0e 	bge	zero,r3,4da7c <__subdf3+0x1e4>
   4dac0:	9081ffd8 	cmpnei	r2,r18,2047
   4dac4:	10005e26 	beq	r2,zero,4dc40 <__subdf3+0x3a8>
   4dac8:	18800e48 	cmpgei	r2,r3,57
   4dacc:	7bc02034 	orhi	r15,r15,128
   4dad0:	103f9b26 	beq	r2,zero,4d940 <__subdf3+0xa8>
   4dad4:	7b60b03a 	or	r16,r15,r13
   4dad8:	8020c03a 	cmpne	r16,r16,zero
   4dadc:	003fa406 	br	4d970 <__subdf3+0xd8>
   4dae0:	00c0730e 	bge	zero,r3,4dcb0 <__subdf3+0x418>
   4dae4:	40002626 	beq	r8,zero,4db80 <__subdf3+0x2e8>
   4dae8:	9081ffd8 	cmpnei	r2,r18,2047
   4daec:	10005426 	beq	r2,zero,4dc40 <__subdf3+0x3a8>
   4daf0:	7bc02034 	orhi	r15,r15,128
   4daf4:	18800e48 	cmpgei	r2,r3,57
   4daf8:	1000431e 	bne	r2,zero,4dc08 <__subdf3+0x370>
   4dafc:	18800808 	cmpgei	r2,r3,32
   4db00:	1000de26 	beq	r2,zero,4de7c <__subdf3+0x5e4>
   4db04:	1c3ff804 	addi	r16,r3,-32
   4db08:	18800820 	cmpeqi	r2,r3,32
   4db0c:	7c0ad83a 	srl	r5,r15,r16
   4db10:	1000041e 	bne	r2,zero,4db24 <__subdf3+0x28c>
   4db14:	00801004 	movi	r2,64
   4db18:	10c5c83a 	sub	r2,r2,r3
   4db1c:	7884983a 	sll	r2,r15,r2
   4db20:	689ab03a 	or	r13,r13,r2
   4db24:	6820c03a 	cmpne	r16,r13,zero
   4db28:	8160b03a 	or	r16,r16,r5
   4db2c:	00003806 	br	4dc10 <__subdf3+0x378>
   4db30:	90800044 	addi	r2,r18,1
   4db34:	1081ff8c 	andi	r2,r2,2046
   4db38:	1000a01e 	bne	r2,zero,4ddbc <__subdf3+0x524>
   4db3c:	4b8ab03a 	or	r5,r9,r14
   4db40:	7b44b03a 	or	r2,r15,r13
   4db44:	9000f11e 	bne	r18,zero,4df0c <__subdf3+0x674>
   4db48:	28012e26 	beq	r5,zero,4e004 <__subdf3+0x76c>
   4db4c:	10010e26 	beq	r2,zero,4df88 <__subdf3+0x6f0>
   4db50:	7361c83a 	sub	r16,r14,r13
   4db54:	7405803a 	cmpltu	r2,r14,r16
   4db58:	4bc9c83a 	sub	r4,r9,r15
   4db5c:	2089c83a 	sub	r4,r4,r2
   4db60:	2080202c 	andhi	r2,r4,128
   4db64:	10016d26 	beq	r2,zero,4e11c <__subdf3+0x884>
   4db68:	6ba1c83a 	sub	r16,r13,r14
   4db6c:	7a49c83a 	sub	r4,r15,r9
   4db70:	6c1b803a 	cmpltu	r13,r13,r16
   4db74:	2349c83a 	sub	r4,r4,r13
   4db78:	5823883a 	mov	r17,r11
   4db7c:	003f9d06 	br	4d9f4 <__subdf3+0x15c>
   4db80:	7b44b03a 	or	r2,r15,r13
   4db84:	10006226 	beq	r2,zero,4dd10 <__subdf3+0x478>
   4db88:	18bfffc4 	addi	r2,r3,-1
   4db8c:	1000e926 	beq	r2,zero,4df34 <__subdf3+0x69c>
   4db90:	18c1ffd8 	cmpnei	r3,r3,2047
   4db94:	18012a26 	beq	r3,zero,4e040 <__subdf3+0x7a8>
   4db98:	1007883a 	mov	r3,r2
   4db9c:	003fd506 	br	4daf4 <__subdf3+0x25c>
   4dba0:	18fff844 	addi	r3,r3,-31
   4dba4:	28800820 	cmpeqi	r2,r5,32
   4dba8:	20c6d83a 	srl	r3,r4,r3
   4dbac:	1000041e 	bne	r2,zero,4dbc0 <__subdf3+0x328>
   4dbb0:	00801004 	movi	r2,64
   4dbb4:	114bc83a 	sub	r5,r2,r5
   4dbb8:	2148983a 	sll	r4,r4,r5
   4dbbc:	8120b03a 	or	r16,r16,r4
   4dbc0:	8020c03a 	cmpne	r16,r16,zero
   4dbc4:	80e0b03a 	or	r16,r16,r3
   4dbc8:	0009883a 	mov	r4,zero
   4dbcc:	0025883a 	mov	r18,zero
   4dbd0:	808001cc 	andi	r2,r16,7
   4dbd4:	103f891e 	bne	r2,zero,4d9fc <__subdf3+0x164>
   4dbd8:	8020d0fa 	srli	r16,r16,3
   4dbdc:	2004977a 	slli	r2,r4,29
   4dbe0:	2012d0fa 	srli	r9,r4,3
   4dbe4:	9007883a 	mov	r3,r18
   4dbe8:	8084b03a 	or	r2,r16,r2
   4dbec:	1901ffe0 	cmpeqi	r4,r3,2047
   4dbf0:	2000191e 	bne	r4,zero,4dc58 <__subdf3+0x3c0>
   4dbf4:	01000434 	movhi	r4,16
   4dbf8:	213fffc4 	addi	r4,r4,-1
   4dbfc:	4908703a 	and	r4,r9,r4
   4dc00:	18c1ffcc 	andi	r3,r3,2047
   4dc04:	003f9206 	br	4da50 <__subdf3+0x1b8>
   4dc08:	7b60b03a 	or	r16,r15,r13
   4dc0c:	8020c03a 	cmpne	r16,r16,zero
   4dc10:	83a1883a 	add	r16,r16,r14
   4dc14:	8389803a 	cmpltu	r4,r16,r14
   4dc18:	2249883a 	add	r4,r4,r9
   4dc1c:	2080202c 	andhi	r2,r4,128
   4dc20:	103feb26 	beq	r2,zero,4dbd0 <__subdf3+0x338>
   4dc24:	94800044 	addi	r18,r18,1
   4dc28:	9081ffe0 	cmpeqi	r2,r18,2047
   4dc2c:	10006f26 	beq	r2,zero,4ddec <__subdf3+0x554>
   4dc30:	00c1ffc4 	movi	r3,2047
   4dc34:	0009883a 	mov	r4,zero
   4dc38:	0005883a 	mov	r2,zero
   4dc3c:	003f8406 	br	4da50 <__subdf3+0x1b8>
   4dc40:	4806977a 	slli	r3,r9,29
   4dc44:	00880034 	movhi	r2,8192
   4dc48:	10bfffc4 	addi	r2,r2,-1
   4dc4c:	4812d0fa 	srli	r9,r9,3
   4dc50:	2088703a 	and	r4,r4,r2
   4dc54:	20c4b03a 	or	r2,r4,r3
   4dc58:	4886b03a 	or	r3,r9,r2
   4dc5c:	18013726 	beq	r3,zero,4e13c <__subdf3+0x8a4>
   4dc60:	00c00434 	movhi	r3,16
   4dc64:	18ffffc4 	addi	r3,r3,-1
   4dc68:	49000234 	orhi	r4,r9,8
   4dc6c:	20c8703a 	and	r4,r4,r3
   4dc70:	00c1ffc4 	movi	r3,2047
   4dc74:	003f7606 	br	4da50 <__subdf3+0x1b8>
   4dc78:	8009883a 	mov	r4,r16
   4dc7c:	004e3680 	call	4e368 <__clzsi2>
   4dc80:	10c00604 	addi	r3,r2,24
   4dc84:	19000808 	cmpgei	r4,r3,32
   4dc88:	203f4526 	beq	r4,zero,4d9a0 <__subdf3+0x108>
   4dc8c:	113ffe04 	addi	r4,r2,-8
   4dc90:	8108983a 	sll	r4,r16,r4
   4dc94:	0021883a 	mov	r16,zero
   4dc98:	1cbf480e 	bge	r3,r18,4d9bc <__subdf3+0x124>
   4dc9c:	00bfe034 	movhi	r2,65408
   4dca0:	10bfffc4 	addi	r2,r2,-1
   4dca4:	90e5c83a 	sub	r18,r18,r3
   4dca8:	2088703a 	and	r4,r4,r2
   4dcac:	003f5106 	br	4d9f4 <__subdf3+0x15c>
   4dcb0:	18001e26 	beq	r3,zero,4dd2c <__subdf3+0x494>
   4dcb4:	4487c83a 	sub	r3,r8,r18
   4dcb8:	90006826 	beq	r18,zero,4de5c <__subdf3+0x5c4>
   4dcbc:	5000a526 	beq	r10,zero,4df54 <__subdf3+0x6bc>
   4dcc0:	4a402034 	orhi	r9,r9,128
   4dcc4:	18800e48 	cmpgei	r2,r3,57
   4dcc8:	1000b61e 	bne	r2,zero,4dfa4 <__subdf3+0x70c>
   4dccc:	18800808 	cmpgei	r2,r3,32
   4dcd0:	1001021e 	bne	r2,zero,4e0dc <__subdf3+0x844>
   4dcd4:	00800804 	movi	r2,32
   4dcd8:	10c5c83a 	sub	r2,r2,r3
   4dcdc:	48a0983a 	sll	r16,r9,r2
   4dce0:	70c8d83a 	srl	r4,r14,r3
   4dce4:	7084983a 	sll	r2,r14,r2
   4dce8:	48d2d83a 	srl	r9,r9,r3
   4dcec:	8120b03a 	or	r16,r16,r4
   4dcf0:	1004c03a 	cmpne	r2,r2,zero
   4dcf4:	80a0b03a 	or	r16,r16,r2
   4dcf8:	7a5f883a 	add	r15,r15,r9
   4dcfc:	8361883a 	add	r16,r16,r13
   4dd00:	8349803a 	cmpltu	r4,r16,r13
   4dd04:	23c9883a 	add	r4,r4,r15
   4dd08:	4025883a 	mov	r18,r8
   4dd0c:	003fc306 	br	4dc1c <__subdf3+0x384>
   4dd10:	480a977a 	slli	r5,r9,29
   4dd14:	00880034 	movhi	r2,8192
   4dd18:	10bfffc4 	addi	r2,r2,-1
   4dd1c:	2088703a 	and	r4,r4,r2
   4dd20:	4812d0fa 	srli	r9,r9,3
   4dd24:	2144b03a 	or	r2,r4,r5
   4dd28:	003fb006 	br	4dbec <__subdf3+0x354>
   4dd2c:	90800044 	addi	r2,r18,1
   4dd30:	1141ff8c 	andi	r5,r2,2046
   4dd34:	28005c1e 	bne	r5,zero,4dea8 <__subdf3+0x610>
   4dd38:	4b84b03a 	or	r2,r9,r14
   4dd3c:	9000a71e 	bne	r18,zero,4dfdc <__subdf3+0x744>
   4dd40:	1000df26 	beq	r2,zero,4e0c0 <__subdf3+0x828>
   4dd44:	7b44b03a 	or	r2,r15,r13
   4dd48:	10008f26 	beq	r2,zero,4df88 <__subdf3+0x6f0>
   4dd4c:	7361883a 	add	r16,r14,r13
   4dd50:	4bc9883a 	add	r4,r9,r15
   4dd54:	839d803a 	cmpltu	r14,r16,r14
   4dd58:	2389883a 	add	r4,r4,r14
   4dd5c:	2080202c 	andhi	r2,r4,128
   4dd60:	103f9b26 	beq	r2,zero,4dbd0 <__subdf3+0x338>
   4dd64:	00bfe034 	movhi	r2,65408
   4dd68:	10bfffc4 	addi	r2,r2,-1
   4dd6c:	2088703a 	and	r4,r4,r2
   4dd70:	04800044 	movi	r18,1
   4dd74:	003f9606 	br	4dbd0 <__subdf3+0x338>
   4dd78:	50007626 	beq	r10,zero,4df54 <__subdf3+0x6bc>
   4dd7c:	4a402034 	orhi	r9,r9,128
   4dd80:	18800e48 	cmpgei	r2,r3,57
   4dd84:	10002e1e 	bne	r2,zero,4de40 <__subdf3+0x5a8>
   4dd88:	18800808 	cmpgei	r2,r3,32
   4dd8c:	1000881e 	bne	r2,zero,4dfb0 <__subdf3+0x718>
   4dd90:	00800804 	movi	r2,32
   4dd94:	10c5c83a 	sub	r2,r2,r3
   4dd98:	48a0983a 	sll	r16,r9,r2
   4dd9c:	70c8d83a 	srl	r4,r14,r3
   4dda0:	709c983a 	sll	r14,r14,r2
   4dda4:	48d2d83a 	srl	r9,r9,r3
   4dda8:	8120b03a 	or	r16,r16,r4
   4ddac:	701cc03a 	cmpne	r14,r14,zero
   4ddb0:	83a0b03a 	or	r16,r16,r14
   4ddb4:	7a5fc83a 	sub	r15,r15,r9
   4ddb8:	00002306 	br	4de48 <__subdf3+0x5b0>
   4ddbc:	7361c83a 	sub	r16,r14,r13
   4ddc0:	4be7c83a 	sub	r19,r9,r15
   4ddc4:	7409803a 	cmpltu	r4,r14,r16
   4ddc8:	9927c83a 	sub	r19,r19,r4
   4ddcc:	9880202c 	andhi	r2,r19,128
   4ddd0:	1000411e 	bne	r2,zero,4ded8 <__subdf3+0x640>
   4ddd4:	84c4b03a 	or	r2,r16,r19
   4ddd8:	103eed1e 	bne	r2,zero,4d990 <__subdf3+0xf8>
   4dddc:	0013883a 	mov	r9,zero
   4dde0:	0023883a 	mov	r17,zero
   4dde4:	003f8306 	br	4dbf4 <__subdf3+0x35c>
   4dde8:	04800084 	movi	r18,2
   4ddec:	00bfe034 	movhi	r2,65408
   4ddf0:	10bfffc4 	addi	r2,r2,-1
   4ddf4:	8006d07a 	srli	r3,r16,1
   4ddf8:	2088703a 	and	r4,r4,r2
   4ddfc:	200497fa 	slli	r2,r4,31
   4de00:	8400004c 	andi	r16,r16,1
   4de04:	1c20b03a 	or	r16,r3,r16
   4de08:	2008d07a 	srli	r4,r4,1
   4de0c:	1420b03a 	or	r16,r2,r16
   4de10:	003ef806 	br	4d9f4 <__subdf3+0x15c>
   4de14:	1c3ff804 	addi	r16,r3,-32
   4de18:	18800820 	cmpeqi	r2,r3,32
   4de1c:	7c0ad83a 	srl	r5,r15,r16
   4de20:	1000041e 	bne	r2,zero,4de34 <__subdf3+0x59c>
   4de24:	00801004 	movi	r2,64
   4de28:	10c5c83a 	sub	r2,r2,r3
   4de2c:	7884983a 	sll	r2,r15,r2
   4de30:	689ab03a 	or	r13,r13,r2
   4de34:	6820c03a 	cmpne	r16,r13,zero
   4de38:	8160b03a 	or	r16,r16,r5
   4de3c:	003ecc06 	br	4d970 <__subdf3+0xd8>
   4de40:	4b92b03a 	or	r9,r9,r14
   4de44:	4820c03a 	cmpne	r16,r9,zero
   4de48:	6c21c83a 	sub	r16,r13,r16
   4de4c:	6c09803a 	cmpltu	r4,r13,r16
   4de50:	7909c83a 	sub	r4,r15,r4
   4de54:	4025883a 	mov	r18,r8
   4de58:	003ec806 	br	4d97c <__subdf3+0xe4>
   4de5c:	4b84b03a 	or	r2,r9,r14
   4de60:	10007e26 	beq	r2,zero,4e05c <__subdf3+0x7c4>
   4de64:	18bfffc4 	addi	r2,r3,-1
   4de68:	1000a726 	beq	r2,zero,4e108 <__subdf3+0x870>
   4de6c:	18c1ffd8 	cmpnei	r3,r3,2047
   4de70:	18003826 	beq	r3,zero,4df54 <__subdf3+0x6bc>
   4de74:	1007883a 	mov	r3,r2
   4de78:	003f9206 	br	4dcc4 <__subdf3+0x42c>
   4de7c:	00800804 	movi	r2,32
   4de80:	10c5c83a 	sub	r2,r2,r3
   4de84:	78a0983a 	sll	r16,r15,r2
   4de88:	68c8d83a 	srl	r4,r13,r3
   4de8c:	689a983a 	sll	r13,r13,r2
   4de90:	78c4d83a 	srl	r2,r15,r3
   4de94:	8120b03a 	or	r16,r16,r4
   4de98:	681ac03a 	cmpne	r13,r13,zero
   4de9c:	8360b03a 	or	r16,r16,r13
   4dea0:	4893883a 	add	r9,r9,r2
   4dea4:	003f5a06 	br	4dc10 <__subdf3+0x378>
   4dea8:	10c1ffe0 	cmpeqi	r3,r2,2047
   4deac:	183f601e 	bne	r3,zero,4dc30 <__subdf3+0x398>
   4deb0:	735b883a 	add	r13,r14,r13
   4deb4:	6b9d803a 	cmpltu	r14,r13,r14
   4deb8:	4bc9883a 	add	r4,r9,r15
   4debc:	2389883a 	add	r4,r4,r14
   4dec0:	202097fa 	slli	r16,r4,31
   4dec4:	681ad07a 	srli	r13,r13,1
   4dec8:	2008d07a 	srli	r4,r4,1
   4decc:	1025883a 	mov	r18,r2
   4ded0:	8360b03a 	or	r16,r16,r13
   4ded4:	003f3e06 	br	4dbd0 <__subdf3+0x338>
   4ded8:	6ba1c83a 	sub	r16,r13,r14
   4dedc:	7a49c83a 	sub	r4,r15,r9
   4dee0:	6c1b803a 	cmpltu	r13,r13,r16
   4dee4:	2367c83a 	sub	r19,r4,r13
   4dee8:	5823883a 	mov	r17,r11
   4deec:	003ea806 	br	4d990 <__subdf3+0xf8>
   4def0:	7808977a 	slli	r4,r15,29
   4def4:	00880034 	movhi	r2,8192
   4def8:	10bfffc4 	addi	r2,r2,-1
   4defc:	308c703a 	and	r6,r6,r2
   4df00:	7812d0fa 	srli	r9,r15,3
   4df04:	3104b03a 	or	r2,r6,r4
   4df08:	003f3806 	br	4dbec <__subdf3+0x354>
   4df0c:	28005a1e 	bne	r5,zero,4e078 <__subdf3+0x7e0>
   4df10:	10008526 	beq	r2,zero,4e128 <__subdf3+0x890>
   4df14:	7806977a 	slli	r3,r15,29
   4df18:	00880034 	movhi	r2,8192
   4df1c:	10bfffc4 	addi	r2,r2,-1
   4df20:	3084703a 	and	r2,r6,r2
   4df24:	7812d0fa 	srli	r9,r15,3
   4df28:	10c4b03a 	or	r2,r2,r3
   4df2c:	5823883a 	mov	r17,r11
   4df30:	003f4906 	br	4dc58 <__subdf3+0x3c0>
   4df34:	7361883a 	add	r16,r14,r13
   4df38:	4bc9883a 	add	r4,r9,r15
   4df3c:	839d803a 	cmpltu	r14,r16,r14
   4df40:	2389883a 	add	r4,r4,r14
   4df44:	2080202c 	andhi	r2,r4,128
   4df48:	103fa71e 	bne	r2,zero,4dde8 <__subdf3+0x550>
   4df4c:	04800044 	movi	r18,1
   4df50:	003f1f06 	br	4dbd0 <__subdf3+0x338>
   4df54:	7806977a 	slli	r3,r15,29
   4df58:	00880034 	movhi	r2,8192
   4df5c:	10bfffc4 	addi	r2,r2,-1
   4df60:	3084703a 	and	r2,r6,r2
   4df64:	7812d0fa 	srli	r9,r15,3
   4df68:	10c4b03a 	or	r2,r2,r3
   4df6c:	003f3a06 	br	4dc58 <__subdf3+0x3c0>
   4df70:	7361c83a 	sub	r16,r14,r13
   4df74:	4bc9c83a 	sub	r4,r9,r15
   4df78:	741d803a 	cmpltu	r14,r14,r16
   4df7c:	2389c83a 	sub	r4,r4,r14
   4df80:	04800044 	movi	r18,1
   4df84:	003e7d06 	br	4d97c <__subdf3+0xe4>
   4df88:	480a977a 	slli	r5,r9,29
   4df8c:	00880034 	movhi	r2,8192
   4df90:	10bfffc4 	addi	r2,r2,-1
   4df94:	2084703a 	and	r2,r4,r2
   4df98:	4812d0fa 	srli	r9,r9,3
   4df9c:	1144b03a 	or	r2,r2,r5
   4dfa0:	003f1406 	br	4dbf4 <__subdf3+0x35c>
   4dfa4:	4b92b03a 	or	r9,r9,r14
   4dfa8:	4820c03a 	cmpne	r16,r9,zero
   4dfac:	003f5306 	br	4dcfc <__subdf3+0x464>
   4dfb0:	1c3ff804 	addi	r16,r3,-32
   4dfb4:	19000820 	cmpeqi	r4,r3,32
   4dfb8:	4c04d83a 	srl	r2,r9,r16
   4dfbc:	2000041e 	bne	r4,zero,4dfd0 <__subdf3+0x738>
   4dfc0:	01001004 	movi	r4,64
   4dfc4:	20c7c83a 	sub	r3,r4,r3
   4dfc8:	48d2983a 	sll	r9,r9,r3
   4dfcc:	725cb03a 	or	r14,r14,r9
   4dfd0:	7020c03a 	cmpne	r16,r14,zero
   4dfd4:	80a0b03a 	or	r16,r16,r2
   4dfd8:	003f9b06 	br	4de48 <__subdf3+0x5b0>
   4dfdc:	103fdd26 	beq	r2,zero,4df54 <__subdf3+0x6bc>
   4dfe0:	7b5ab03a 	or	r13,r15,r13
   4dfe4:	480a977a 	slli	r5,r9,29
   4dfe8:	4812d0fa 	srli	r9,r9,3
   4dfec:	6800251e 	bne	r13,zero,4e084 <__subdf3+0x7ec>
   4dff0:	00880034 	movhi	r2,8192
   4dff4:	10bfffc4 	addi	r2,r2,-1
   4dff8:	2084703a 	and	r2,r4,r2
   4dffc:	1144b03a 	or	r2,r2,r5
   4e000:	003f1506 	br	4dc58 <__subdf3+0x3c0>
   4e004:	103f7526 	beq	r2,zero,4dddc <__subdf3+0x544>
   4e008:	7808977a 	slli	r4,r15,29
   4e00c:	00880034 	movhi	r2,8192
   4e010:	10bfffc4 	addi	r2,r2,-1
   4e014:	3084703a 	and	r2,r6,r2
   4e018:	7812d0fa 	srli	r9,r15,3
   4e01c:	1104b03a 	or	r2,r2,r4
   4e020:	5823883a 	mov	r17,r11
   4e024:	003ef306 	br	4dbf4 <__subdf3+0x35c>
   4e028:	6ba1c83a 	sub	r16,r13,r14
   4e02c:	7a49c83a 	sub	r4,r15,r9
   4e030:	6c1b803a 	cmpltu	r13,r13,r16
   4e034:	2349c83a 	sub	r4,r4,r13
   4e038:	04800044 	movi	r18,1
   4e03c:	003e4f06 	br	4d97c <__subdf3+0xe4>
   4e040:	4806977a 	slli	r3,r9,29
   4e044:	00880034 	movhi	r2,8192
   4e048:	10bfffc4 	addi	r2,r2,-1
   4e04c:	2084703a 	and	r2,r4,r2
   4e050:	4812d0fa 	srli	r9,r9,3
   4e054:	10c4b03a 	or	r2,r2,r3
   4e058:	003eff06 	br	4dc58 <__subdf3+0x3c0>
   4e05c:	7808977a 	slli	r4,r15,29
   4e060:	00880034 	movhi	r2,8192
   4e064:	10bfffc4 	addi	r2,r2,-1
   4e068:	3084703a 	and	r2,r6,r2
   4e06c:	7812d0fa 	srli	r9,r15,3
   4e070:	1104b03a 	or	r2,r2,r4
   4e074:	003edd06 	br	4dbec <__subdf3+0x354>
   4e078:	480a977a 	slli	r5,r9,29
   4e07c:	4812d0fa 	srli	r9,r9,3
   4e080:	103fdb26 	beq	r2,zero,4dff0 <__subdf3+0x758>
   4e084:	00c80034 	movhi	r3,8192
   4e088:	18ffffc4 	addi	r3,r3,-1
   4e08c:	20c4703a 	and	r2,r4,r3
   4e090:	4900022c 	andhi	r4,r9,8
   4e094:	1144b03a 	or	r2,r2,r5
   4e098:	203eef26 	beq	r4,zero,4dc58 <__subdf3+0x3c0>
   4e09c:	7808d0fa 	srli	r4,r15,3
   4e0a0:	2140022c 	andhi	r5,r4,8
   4e0a4:	283eec1e 	bne	r5,zero,4dc58 <__subdf3+0x3c0>
   4e0a8:	7804977a 	slli	r2,r15,29
   4e0ac:	30cc703a 	and	r6,r6,r3
   4e0b0:	5823883a 	mov	r17,r11
   4e0b4:	3084b03a 	or	r2,r6,r2
   4e0b8:	2013883a 	mov	r9,r4
   4e0bc:	003ee606 	br	4dc58 <__subdf3+0x3c0>
   4e0c0:	7808977a 	slli	r4,r15,29
   4e0c4:	00880034 	movhi	r2,8192
   4e0c8:	10bfffc4 	addi	r2,r2,-1
   4e0cc:	3084703a 	and	r2,r6,r2
   4e0d0:	7812d0fa 	srli	r9,r15,3
   4e0d4:	1104b03a 	or	r2,r2,r4
   4e0d8:	003ec606 	br	4dbf4 <__subdf3+0x35c>
   4e0dc:	18bff804 	addi	r2,r3,-32
   4e0e0:	19000820 	cmpeqi	r4,r3,32
   4e0e4:	4884d83a 	srl	r2,r9,r2
   4e0e8:	2000041e 	bne	r4,zero,4e0fc <__subdf3+0x864>
   4e0ec:	01001004 	movi	r4,64
   4e0f0:	20c7c83a 	sub	r3,r4,r3
   4e0f4:	48d2983a 	sll	r9,r9,r3
   4e0f8:	725cb03a 	or	r14,r14,r9
   4e0fc:	7020c03a 	cmpne	r16,r14,zero
   4e100:	80a0b03a 	or	r16,r16,r2
   4e104:	003efd06 	br	4dcfc <__subdf3+0x464>
   4e108:	7361883a 	add	r16,r14,r13
   4e10c:	4bc9883a 	add	r4,r9,r15
   4e110:	835b803a 	cmpltu	r13,r16,r13
   4e114:	2349883a 	add	r4,r4,r13
   4e118:	003f8a06 	br	4df44 <__subdf3+0x6ac>
   4e11c:	8104b03a 	or	r2,r16,r4
   4e120:	103f2e26 	beq	r2,zero,4dddc <__subdf3+0x544>
   4e124:	003eaa06 	br	4dbd0 <__subdf3+0x338>
   4e128:	02400434 	movhi	r9,16
   4e12c:	0023883a 	mov	r17,zero
   4e130:	00bfffc4 	movi	r2,-1
   4e134:	4a7fffc4 	addi	r9,r9,-1
   4e138:	003ec906 	br	4dc60 <__subdf3+0x3c8>
   4e13c:	0005883a 	mov	r2,zero
   4e140:	00c1ffc4 	movi	r3,2047
   4e144:	0009883a 	mov	r4,zero
   4e148:	003e4106 	br	4da50 <__subdf3+0x1b8>

0004e14c <__unorddf2>:
   4e14c:	2806d53a 	srli	r3,r5,20
   4e150:	3810d53a 	srli	r8,r7,20
   4e154:	02400434 	movhi	r9,16
   4e158:	18c1ffcc 	andi	r3,r3,2047
   4e15c:	4a7fffc4 	addi	r9,r9,-1
   4e160:	18c1ffd8 	cmpnei	r3,r3,2047
   4e164:	2a4a703a 	and	r5,r5,r9
   4e168:	3a4e703a 	and	r7,r7,r9
   4e16c:	4201ffcc 	andi	r8,r8,2047
   4e170:	18000426 	beq	r3,zero,4e184 <__unorddf2+0x38>
   4e174:	4201ffd8 	cmpnei	r8,r8,2047
   4e178:	40000626 	beq	r8,zero,4e194 <__unorddf2+0x48>
   4e17c:	0005883a 	mov	r2,zero
   4e180:	f800283a 	ret
   4e184:	290ab03a 	or	r5,r5,r4
   4e188:	283ffa26 	beq	r5,zero,4e174 <__unorddf2+0x28>
   4e18c:	00800044 	movi	r2,1
   4e190:	f800283a 	ret
   4e194:	398eb03a 	or	r7,r7,r6
   4e198:	3804c03a 	cmpne	r2,r7,zero
   4e19c:	f800283a 	ret

0004e1a0 <__fixdfsi>:
   4e1a0:	2806d53a 	srli	r3,r5,20
   4e1a4:	01800434 	movhi	r6,16
   4e1a8:	31bfffc4 	addi	r6,r6,-1
   4e1ac:	18c1ffcc 	andi	r3,r3,2047
   4e1b0:	19c0ffd0 	cmplti	r7,r3,1023
   4e1b4:	2810d7fa 	srli	r8,r5,31
   4e1b8:	298a703a 	and	r5,r5,r6
   4e1bc:	3800061e 	bne	r7,zero,4e1d8 <__fixdfsi+0x38>
   4e1c0:	18810790 	cmplti	r2,r3,1054
   4e1c4:	1000061e 	bne	r2,zero,4e1e0 <__fixdfsi+0x40>
   4e1c8:	00a00034 	movhi	r2,32768
   4e1cc:	10bfffc4 	addi	r2,r2,-1
   4e1d0:	4085883a 	add	r2,r8,r2
   4e1d4:	f800283a 	ret
   4e1d8:	0005883a 	mov	r2,zero
   4e1dc:	f800283a 	ret
   4e1e0:	01810cc4 	movi	r6,1075
   4e1e4:	30cdc83a 	sub	r6,r6,r3
   4e1e8:	30800808 	cmpgei	r2,r6,32
   4e1ec:	29400434 	orhi	r5,r5,16
   4e1f0:	1000071e 	bne	r2,zero,4e210 <__fixdfsi+0x70>
   4e1f4:	18befb44 	addi	r2,r3,-1043
   4e1f8:	2884983a 	sll	r2,r5,r2
   4e1fc:	2188d83a 	srl	r4,r4,r6
   4e200:	1104b03a 	or	r2,r2,r4
   4e204:	403ff526 	beq	r8,zero,4e1dc <__fixdfsi+0x3c>
   4e208:	0085c83a 	sub	r2,zero,r2
   4e20c:	f800283a 	ret
   4e210:	008104c4 	movi	r2,1043
   4e214:	10c5c83a 	sub	r2,r2,r3
   4e218:	2884d83a 	srl	r2,r5,r2
   4e21c:	003ff906 	br	4e204 <__fixdfsi+0x64>

0004e220 <__floatsidf>:
   4e220:	defffd04 	addi	sp,sp,-12
   4e224:	dfc00215 	stw	ra,8(sp)
   4e228:	dc400115 	stw	r17,4(sp)
   4e22c:	dc000015 	stw	r16,0(sp)
   4e230:	20001326 	beq	r4,zero,4e280 <__floatsidf+0x60>
   4e234:	2022d7fa 	srli	r17,r4,31
   4e238:	2021883a 	mov	r16,r4
   4e23c:	20002416 	blt	r4,zero,4e2d0 <__floatsidf+0xb0>
   4e240:	8009883a 	mov	r4,r16
   4e244:	004e3680 	call	4e368 <__clzsi2>
   4e248:	01010784 	movi	r4,1054
   4e24c:	2089c83a 	sub	r4,r4,r2
   4e250:	114002c8 	cmpgei	r5,r2,11
   4e254:	20c1ffcc 	andi	r3,r4,2047
   4e258:	2800161e 	bne	r5,zero,4e2b4 <__floatsidf+0x94>
   4e25c:	010002c4 	movi	r4,11
   4e260:	2089c83a 	sub	r4,r4,r2
   4e264:	810ad83a 	srl	r5,r16,r4
   4e268:	01000434 	movhi	r4,16
   4e26c:	10800544 	addi	r2,r2,21
   4e270:	213fffc4 	addi	r4,r4,-1
   4e274:	8084983a 	sll	r2,r16,r2
   4e278:	290a703a 	and	r5,r5,r4
   4e27c:	00000406 	br	4e290 <__floatsidf+0x70>
   4e280:	0023883a 	mov	r17,zero
   4e284:	0007883a 	mov	r3,zero
   4e288:	000b883a 	mov	r5,zero
   4e28c:	0005883a 	mov	r2,zero
   4e290:	1808953a 	slli	r4,r3,20
   4e294:	880697fa 	slli	r3,r17,31
   4e298:	2148b03a 	or	r4,r4,r5
   4e29c:	20c6b03a 	or	r3,r4,r3
   4e2a0:	dfc00217 	ldw	ra,8(sp)
   4e2a4:	dc400117 	ldw	r17,4(sp)
   4e2a8:	dc000017 	ldw	r16,0(sp)
   4e2ac:	dec00304 	addi	sp,sp,12
   4e2b0:	f800283a 	ret
   4e2b4:	10bffd44 	addi	r2,r2,-11
   4e2b8:	808a983a 	sll	r5,r16,r2
   4e2bc:	00800434 	movhi	r2,16
   4e2c0:	10bfffc4 	addi	r2,r2,-1
   4e2c4:	288a703a 	and	r5,r5,r2
   4e2c8:	0005883a 	mov	r2,zero
   4e2cc:	003ff006 	br	4e290 <__floatsidf+0x70>
   4e2d0:	0121c83a 	sub	r16,zero,r4
   4e2d4:	003fda06 	br	4e240 <__floatsidf+0x20>

0004e2d8 <__floatunsidf>:
   4e2d8:	defffe04 	addi	sp,sp,-8
   4e2dc:	dc000015 	stw	r16,0(sp)
   4e2e0:	dfc00115 	stw	ra,4(sp)
   4e2e4:	2021883a 	mov	r16,r4
   4e2e8:	20000f26 	beq	r4,zero,4e328 <__floatunsidf+0x50>
   4e2ec:	004e3680 	call	4e368 <__clzsi2>
   4e2f0:	00c10784 	movi	r3,1054
   4e2f4:	1887c83a 	sub	r3,r3,r2
   4e2f8:	110002c8 	cmpgei	r4,r2,11
   4e2fc:	18c1ffcc 	andi	r3,r3,2047
   4e300:	2000121e 	bne	r4,zero,4e34c <__floatunsidf+0x74>
   4e304:	014002c4 	movi	r5,11
   4e308:	288bc83a 	sub	r5,r5,r2
   4e30c:	814ad83a 	srl	r5,r16,r5
   4e310:	01000434 	movhi	r4,16
   4e314:	10800544 	addi	r2,r2,21
   4e318:	213fffc4 	addi	r4,r4,-1
   4e31c:	80a0983a 	sll	r16,r16,r2
   4e320:	290a703a 	and	r5,r5,r4
   4e324:	00000206 	br	4e330 <__floatunsidf+0x58>
   4e328:	0007883a 	mov	r3,zero
   4e32c:	000b883a 	mov	r5,zero
   4e330:	1806953a 	slli	r3,r3,20
   4e334:	8005883a 	mov	r2,r16
   4e338:	1946b03a 	or	r3,r3,r5
   4e33c:	dfc00117 	ldw	ra,4(sp)
   4e340:	dc000017 	ldw	r16,0(sp)
   4e344:	dec00204 	addi	sp,sp,8
   4e348:	f800283a 	ret
   4e34c:	117ffd44 	addi	r5,r2,-11
   4e350:	814a983a 	sll	r5,r16,r5
   4e354:	00800434 	movhi	r2,16
   4e358:	10bfffc4 	addi	r2,r2,-1
   4e35c:	288a703a 	and	r5,r5,r2
   4e360:	0021883a 	mov	r16,zero
   4e364:	003ff206 	br	4e330 <__floatunsidf+0x58>

0004e368 <__clzsi2>:
   4e368:	00bfffd4 	movui	r2,65535
   4e36c:	11000436 	bltu	r2,r4,4e380 <__clzsi2+0x18>
   4e370:	20804030 	cmpltui	r2,r4,256
   4e374:	10000e26 	beq	r2,zero,4e3b0 <__clzsi2+0x48>
   4e378:	01400804 	movi	r5,32
   4e37c:	00000406 	br	4e390 <__clzsi2+0x28>
   4e380:	00804034 	movhi	r2,256
   4e384:	20800736 	bltu	r4,r2,4e3a4 <__clzsi2+0x3c>
   4e388:	2008d63a 	srli	r4,r4,24
   4e38c:	01400204 	movi	r5,8
   4e390:	00c00174 	movhi	r3,5
   4e394:	20c7883a 	add	r3,r4,r3
   4e398:	18851e03 	ldbu	r2,5240(r3)
   4e39c:	2885c83a 	sub	r2,r5,r2
   4e3a0:	f800283a 	ret
   4e3a4:	2008d43a 	srli	r4,r4,16
   4e3a8:	01400404 	movi	r5,16
   4e3ac:	003ff806 	br	4e390 <__clzsi2+0x28>
   4e3b0:	2008d23a 	srli	r4,r4,8
   4e3b4:	01400604 	movi	r5,24
   4e3b8:	003ff506 	br	4e390 <__clzsi2+0x28>

0004e3bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e3bc:	defffe04 	addi	sp,sp,-8
   4e3c0:	dfc00115 	stw	ra,4(sp)
   4e3c4:	df000015 	stw	fp,0(sp)
   4e3c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e3cc:	d0a00917 	ldw	r2,-32732(gp)
   4e3d0:	10000326 	beq	r2,zero,4e3e0 <alt_get_errno+0x24>
   4e3d4:	d0a00917 	ldw	r2,-32732(gp)
   4e3d8:	103ee83a 	callr	r2
   4e3dc:	00000106 	br	4e3e4 <alt_get_errno+0x28>
   4e3e0:	d0a70f04 	addi	r2,gp,-25540
}
   4e3e4:	e037883a 	mov	sp,fp
   4e3e8:	dfc00117 	ldw	ra,4(sp)
   4e3ec:	df000017 	ldw	fp,0(sp)
   4e3f0:	dec00204 	addi	sp,sp,8
   4e3f4:	f800283a 	ret

0004e3f8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4e3f8:	defffb04 	addi	sp,sp,-20
   4e3fc:	dfc00415 	stw	ra,16(sp)
   4e400:	df000315 	stw	fp,12(sp)
   4e404:	df000304 	addi	fp,sp,12
   4e408:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4e40c:	e0bffd17 	ldw	r2,-12(fp)
   4e410:	10000916 	blt	r2,zero,4e438 <close+0x40>
   4e414:	e0fffd17 	ldw	r3,-12(fp)
   4e418:	1805883a 	mov	r2,r3
   4e41c:	1085883a 	add	r2,r2,r2
   4e420:	10c5883a 	add	r2,r2,r3
   4e424:	100490ba 	slli	r2,r2,2
   4e428:	00c00174 	movhi	r3,5
   4e42c:	18c7df04 	addi	r3,r3,8060
   4e430:	10c5883a 	add	r2,r2,r3
   4e434:	00000106 	br	4e43c <close+0x44>
   4e438:	0005883a 	mov	r2,zero
   4e43c:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   4e440:	e0bfff17 	ldw	r2,-4(fp)
   4e444:	10001926 	beq	r2,zero,4e4ac <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4e448:	e0bfff17 	ldw	r2,-4(fp)
   4e44c:	10800017 	ldw	r2,0(r2)
   4e450:	10800417 	ldw	r2,16(r2)
   4e454:	10000626 	beq	r2,zero,4e470 <close+0x78>
   4e458:	e0bfff17 	ldw	r2,-4(fp)
   4e45c:	10800017 	ldw	r2,0(r2)
   4e460:	10800417 	ldw	r2,16(r2)
   4e464:	e13fff17 	ldw	r4,-4(fp)
   4e468:	103ee83a 	callr	r2
   4e46c:	00000106 	br	4e474 <close+0x7c>
   4e470:	0005883a 	mov	r2,zero
   4e474:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4e478:	e13ffd17 	ldw	r4,-12(fp)
   4e47c:	004ef2c0 	call	4ef2c <alt_release_fd>
    if (rval < 0)
   4e480:	e0bffe17 	ldw	r2,-8(fp)
   4e484:	1000070e 	bge	r2,zero,4e4a4 <close+0xac>
    {
      ALT_ERRNO = -rval;
   4e488:	004e3bc0 	call	4e3bc <alt_get_errno>
   4e48c:	1007883a 	mov	r3,r2
   4e490:	e0bffe17 	ldw	r2,-8(fp)
   4e494:	0085c83a 	sub	r2,zero,r2
   4e498:	18800015 	stw	r2,0(r3)
      return -1;
   4e49c:	00bfffc4 	movi	r2,-1
   4e4a0:	00000706 	br	4e4c0 <close+0xc8>
    }
    return 0;
   4e4a4:	0005883a 	mov	r2,zero
   4e4a8:	00000506 	br	4e4c0 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e4ac:	004e3bc0 	call	4e3bc <alt_get_errno>
   4e4b0:	1007883a 	mov	r3,r2
   4e4b4:	00801444 	movi	r2,81
   4e4b8:	18800015 	stw	r2,0(r3)
    return -1;
   4e4bc:	00bfffc4 	movi	r2,-1
  }
}
   4e4c0:	e037883a 	mov	sp,fp
   4e4c4:	dfc00117 	ldw	ra,4(sp)
   4e4c8:	df000017 	ldw	fp,0(sp)
   4e4cc:	dec00204 	addi	sp,sp,8
   4e4d0:	f800283a 	ret

0004e4d4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4e4d4:	defffc04 	addi	sp,sp,-16
   4e4d8:	df000315 	stw	fp,12(sp)
   4e4dc:	df000304 	addi	fp,sp,12
   4e4e0:	e13fff15 	stw	r4,-4(fp)
   4e4e4:	e17ffe15 	stw	r5,-8(fp)
   4e4e8:	e1bffd15 	stw	r6,-12(fp)
  return len;
   4e4ec:	e0bffd17 	ldw	r2,-12(fp)
}
   4e4f0:	e037883a 	mov	sp,fp
   4e4f4:	df000017 	ldw	fp,0(sp)
   4e4f8:	dec00104 	addi	sp,sp,4
   4e4fc:	f800283a 	ret

0004e500 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4e500:	defffd04 	addi	sp,sp,-12
   4e504:	df000215 	stw	fp,8(sp)
   4e508:	df000204 	addi	fp,sp,8
   4e50c:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4e510:	0001883a 	nop
   4e514:	e0bffe17 	ldw	r2,-8(fp)
   4e518:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4e51c:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4e520:	10000226 	beq	r2,zero,4e52c <_exit+0x2c>
    ALT_SIM_FAIL();
   4e524:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   4e528:	00000106 	br	4e530 <_exit+0x30>
    ALT_SIM_PASS();
   4e52c:	002af0b0 	cmpltui	zero,zero,43970
}
   4e530:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4e534:	003fff06 	br	4e534 <_exit+0x34>

0004e538 <alt_get_errno>:
{
   4e538:	defffe04 	addi	sp,sp,-8
   4e53c:	dfc00115 	stw	ra,4(sp)
   4e540:	df000015 	stw	fp,0(sp)
   4e544:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e548:	d0a00917 	ldw	r2,-32732(gp)
   4e54c:	10000326 	beq	r2,zero,4e55c <alt_get_errno+0x24>
   4e550:	d0a00917 	ldw	r2,-32732(gp)
   4e554:	103ee83a 	callr	r2
   4e558:	00000106 	br	4e560 <alt_get_errno+0x28>
   4e55c:	d0a70f04 	addi	r2,gp,-25540
}
   4e560:	e037883a 	mov	sp,fp
   4e564:	dfc00117 	ldw	ra,4(sp)
   4e568:	df000017 	ldw	fp,0(sp)
   4e56c:	dec00204 	addi	sp,sp,8
   4e570:	f800283a 	ret

0004e574 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4e574:	defffb04 	addi	sp,sp,-20
   4e578:	dfc00415 	stw	ra,16(sp)
   4e57c:	df000315 	stw	fp,12(sp)
   4e580:	df000304 	addi	fp,sp,12
   4e584:	e13ffe15 	stw	r4,-8(fp)
   4e588:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e58c:	e0bffe17 	ldw	r2,-8(fp)
   4e590:	10000916 	blt	r2,zero,4e5b8 <fstat+0x44>
   4e594:	e0fffe17 	ldw	r3,-8(fp)
   4e598:	1805883a 	mov	r2,r3
   4e59c:	1085883a 	add	r2,r2,r2
   4e5a0:	10c5883a 	add	r2,r2,r3
   4e5a4:	100490ba 	slli	r2,r2,2
   4e5a8:	00c00174 	movhi	r3,5
   4e5ac:	18c7df04 	addi	r3,r3,8060
   4e5b0:	10c5883a 	add	r2,r2,r3
   4e5b4:	00000106 	br	4e5bc <fstat+0x48>
   4e5b8:	0005883a 	mov	r2,zero
   4e5bc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4e5c0:	e0bfff17 	ldw	r2,-4(fp)
   4e5c4:	10001026 	beq	r2,zero,4e608 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4e5c8:	e0bfff17 	ldw	r2,-4(fp)
   4e5cc:	10800017 	ldw	r2,0(r2)
   4e5d0:	10800817 	ldw	r2,32(r2)
   4e5d4:	10000726 	beq	r2,zero,4e5f4 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
   4e5d8:	e0bfff17 	ldw	r2,-4(fp)
   4e5dc:	10800017 	ldw	r2,0(r2)
   4e5e0:	10800817 	ldw	r2,32(r2)
   4e5e4:	e17ffd17 	ldw	r5,-12(fp)
   4e5e8:	e13fff17 	ldw	r4,-4(fp)
   4e5ec:	103ee83a 	callr	r2
   4e5f0:	00000a06 	br	4e61c <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4e5f4:	e0bffd17 	ldw	r2,-12(fp)
   4e5f8:	00c80004 	movi	r3,8192
   4e5fc:	10c00115 	stw	r3,4(r2)
      return 0;
   4e600:	0005883a 	mov	r2,zero
   4e604:	00000506 	br	4e61c <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e608:	004e5380 	call	4e538 <alt_get_errno>
   4e60c:	1007883a 	mov	r3,r2
   4e610:	00801444 	movi	r2,81
   4e614:	18800015 	stw	r2,0(r3)
    return -1;
   4e618:	00bfffc4 	movi	r2,-1
  }
}
   4e61c:	e037883a 	mov	sp,fp
   4e620:	dfc00117 	ldw	ra,4(sp)
   4e624:	df000017 	ldw	fp,0(sp)
   4e628:	dec00204 	addi	sp,sp,8
   4e62c:	f800283a 	ret

0004e630 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   4e630:	deffff04 	addi	sp,sp,-4
   4e634:	df000015 	stw	fp,0(sp)
   4e638:	d839883a 	mov	fp,sp
  return 0;
   4e63c:	0005883a 	mov	r2,zero
}
   4e640:	e037883a 	mov	sp,fp
   4e644:	df000017 	ldw	fp,0(sp)
   4e648:	dec00104 	addi	sp,sp,4
   4e64c:	f800283a 	ret

0004e650 <alt_get_errno>:
{
   4e650:	defffe04 	addi	sp,sp,-8
   4e654:	dfc00115 	stw	ra,4(sp)
   4e658:	df000015 	stw	fp,0(sp)
   4e65c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e660:	d0a00917 	ldw	r2,-32732(gp)
   4e664:	10000326 	beq	r2,zero,4e674 <alt_get_errno+0x24>
   4e668:	d0a00917 	ldw	r2,-32732(gp)
   4e66c:	103ee83a 	callr	r2
   4e670:	00000106 	br	4e678 <alt_get_errno+0x28>
   4e674:	d0a70f04 	addi	r2,gp,-25540
}
   4e678:	e037883a 	mov	sp,fp
   4e67c:	dfc00117 	ldw	ra,4(sp)
   4e680:	df000017 	ldw	fp,0(sp)
   4e684:	dec00204 	addi	sp,sp,8
   4e688:	f800283a 	ret

0004e68c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4e68c:	deffea04 	addi	sp,sp,-88
   4e690:	dfc01515 	stw	ra,84(sp)
   4e694:	df001415 	stw	fp,80(sp)
   4e698:	df001404 	addi	fp,sp,80
   4e69c:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e6a0:	e0bfec17 	ldw	r2,-80(fp)
   4e6a4:	10000916 	blt	r2,zero,4e6cc <isatty+0x40>
   4e6a8:	e0ffec17 	ldw	r3,-80(fp)
   4e6ac:	1805883a 	mov	r2,r3
   4e6b0:	1085883a 	add	r2,r2,r2
   4e6b4:	10c5883a 	add	r2,r2,r3
   4e6b8:	100490ba 	slli	r2,r2,2
   4e6bc:	00c00174 	movhi	r3,5
   4e6c0:	18c7df04 	addi	r3,r3,8060
   4e6c4:	10c5883a 	add	r2,r2,r3
   4e6c8:	00000106 	br	4e6d0 <isatty+0x44>
   4e6cc:	0005883a 	mov	r2,zero
   4e6d0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4e6d4:	e0bfff17 	ldw	r2,-4(fp)
   4e6d8:	10000e26 	beq	r2,zero,4e714 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4e6dc:	e0bfff17 	ldw	r2,-4(fp)
   4e6e0:	10800017 	ldw	r2,0(r2)
   4e6e4:	10800817 	ldw	r2,32(r2)
   4e6e8:	1000021e 	bne	r2,zero,4e6f4 <isatty+0x68>
    {
      return 1;
   4e6ec:	00800044 	movi	r2,1
   4e6f0:	00000d06 	br	4e728 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4e6f4:	e0bfed04 	addi	r2,fp,-76
   4e6f8:	100b883a 	mov	r5,r2
   4e6fc:	e13fec17 	ldw	r4,-80(fp)
   4e700:	004e5740 	call	4e574 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4e704:	e0bfee17 	ldw	r2,-72(fp)
   4e708:	10880020 	cmpeqi	r2,r2,8192
   4e70c:	10803fcc 	andi	r2,r2,255
   4e710:	00000506 	br	4e728 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e714:	004e6500 	call	4e650 <alt_get_errno>
   4e718:	1007883a 	mov	r3,r2
   4e71c:	00801444 	movi	r2,81
   4e720:	18800015 	stw	r2,0(r3)
    return 0;
   4e724:	0005883a 	mov	r2,zero
  }
}
   4e728:	e037883a 	mov	sp,fp
   4e72c:	dfc00117 	ldw	ra,4(sp)
   4e730:	df000017 	ldw	fp,0(sp)
   4e734:	dec00204 	addi	sp,sp,8
   4e738:	f800283a 	ret

0004e73c <alt_get_errno>:
{
   4e73c:	defffe04 	addi	sp,sp,-8
   4e740:	dfc00115 	stw	ra,4(sp)
   4e744:	df000015 	stw	fp,0(sp)
   4e748:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e74c:	d0a00917 	ldw	r2,-32732(gp)
   4e750:	10000326 	beq	r2,zero,4e760 <alt_get_errno+0x24>
   4e754:	d0a00917 	ldw	r2,-32732(gp)
   4e758:	103ee83a 	callr	r2
   4e75c:	00000106 	br	4e764 <alt_get_errno+0x28>
   4e760:	d0a70f04 	addi	r2,gp,-25540
}
   4e764:	e037883a 	mov	sp,fp
   4e768:	dfc00117 	ldw	ra,4(sp)
   4e76c:	df000017 	ldw	fp,0(sp)
   4e770:	dec00204 	addi	sp,sp,8
   4e774:	f800283a 	ret

0004e778 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   4e778:	defffb04 	addi	sp,sp,-20
   4e77c:	dfc00415 	stw	ra,16(sp)
   4e780:	df000315 	stw	fp,12(sp)
   4e784:	df000304 	addi	fp,sp,12
   4e788:	e13ffe15 	stw	r4,-8(fp)
   4e78c:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   4e790:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   4e794:	e0bffe17 	ldw	r2,-8(fp)
   4e798:	00802e16 	blt	zero,r2,4e854 <kill+0xdc>
   4e79c:	e0bffd17 	ldw	r2,-12(fp)
   4e7a0:	10800828 	cmpgeui	r2,r2,32
   4e7a4:	1000281e 	bne	r2,zero,4e848 <kill+0xd0>
   4e7a8:	e0bffd17 	ldw	r2,-12(fp)
   4e7ac:	100690ba 	slli	r3,r2,2
   4e7b0:	00800174 	movhi	r2,5
   4e7b4:	1885883a 	add	r2,r3,r2
   4e7b8:	10b9f017 	ldw	r2,-6208(r2)
   4e7bc:	1000683a 	jmp	r2
   4e7c0:	0004e868 	cmpgeui	zero,zero,5025
   4e7c4:	0004e848 	cmpgei	zero,zero,5025
   4e7c8:	0004e848 	cmpgei	zero,zero,5025
   4e7cc:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7d0:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7d4:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7d8:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7dc:	0004e848 	cmpgei	zero,zero,5025
   4e7e0:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7e4:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7e8:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7ec:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7f0:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7f4:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7f8:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e7fc:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e800:	0004e868 	cmpgeui	zero,zero,5025
   4e804:	0004e848 	cmpgei	zero,zero,5025
   4e808:	0004e848 	cmpgei	zero,zero,5025
   4e80c:	0004e848 	cmpgei	zero,zero,5025
   4e810:	0004e868 	cmpgeui	zero,zero,5025
   4e814:	0004e848 	cmpgei	zero,zero,5025
   4e818:	0004e848 	cmpgei	zero,zero,5025
   4e81c:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e820:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e824:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e828:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e82c:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e830:	0004e848 	cmpgei	zero,zero,5025
   4e834:	0004e848 	cmpgei	zero,zero,5025
   4e838:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
   4e83c:	0004e840 	call	4e84 <__alt_mem_onchip_memory-0x3b17c>
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   4e840:	0009883a 	mov	r4,zero
   4e844:	004e5000 	call	4e500 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   4e848:	00800584 	movi	r2,22
   4e84c:	e0bfff15 	stw	r2,-4(fp)
   4e850:	00000606 	br	4e86c <kill+0xf4>
    }
  }

  else if (pid > 0)
   4e854:	e0bffe17 	ldw	r2,-8(fp)
   4e858:	0080040e 	bge	zero,r2,4e86c <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   4e85c:	008000c4 	movi	r2,3
   4e860:	e0bfff15 	stw	r2,-4(fp)
   4e864:	00000106 	br	4e86c <kill+0xf4>
      break;
   4e868:	0001883a 	nop
  }

  if (status)
   4e86c:	e0bfff17 	ldw	r2,-4(fp)
   4e870:	10000626 	beq	r2,zero,4e88c <kill+0x114>
  {
    ALT_ERRNO = status;
   4e874:	004e73c0 	call	4e73c <alt_get_errno>
   4e878:	1007883a 	mov	r3,r2
   4e87c:	e0bfff17 	ldw	r2,-4(fp)
   4e880:	18800015 	stw	r2,0(r3)
    return -1;
   4e884:	00bfffc4 	movi	r2,-1
   4e888:	00000106 	br	4e890 <kill+0x118>
  }

  return 0;
   4e88c:	0005883a 	mov	r2,zero
}
   4e890:	e037883a 	mov	sp,fp
   4e894:	dfc00117 	ldw	ra,4(sp)
   4e898:	df000017 	ldw	fp,0(sp)
   4e89c:	dec00204 	addi	sp,sp,8
   4e8a0:	f800283a 	ret

0004e8a4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4e8a4:	defffc04 	addi	sp,sp,-16
   4e8a8:	df000315 	stw	fp,12(sp)
   4e8ac:	df000304 	addi	fp,sp,12
   4e8b0:	e13fff15 	stw	r4,-4(fp)
   4e8b4:	e17ffe15 	stw	r5,-8(fp)
   4e8b8:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   4e8bc:	e0fffe17 	ldw	r3,-8(fp)
   4e8c0:	e0bfff17 	ldw	r2,-4(fp)
   4e8c4:	18800c26 	beq	r3,r2,4e8f8 <alt_load_section+0x54>
  {
    while( to != end )
   4e8c8:	00000806 	br	4e8ec <alt_load_section+0x48>
    {
      *to++ = *from++;
   4e8cc:	e0ffff17 	ldw	r3,-4(fp)
   4e8d0:	18800104 	addi	r2,r3,4
   4e8d4:	e0bfff15 	stw	r2,-4(fp)
   4e8d8:	e0bffe17 	ldw	r2,-8(fp)
   4e8dc:	11000104 	addi	r4,r2,4
   4e8e0:	e13ffe15 	stw	r4,-8(fp)
   4e8e4:	18c00017 	ldw	r3,0(r3)
   4e8e8:	10c00015 	stw	r3,0(r2)
    while( to != end )
   4e8ec:	e0fffe17 	ldw	r3,-8(fp)
   4e8f0:	e0bffd17 	ldw	r2,-12(fp)
   4e8f4:	18bff51e 	bne	r3,r2,4e8cc <alt_load_section+0x28>
    }
  }
}
   4e8f8:	0001883a 	nop
   4e8fc:	e037883a 	mov	sp,fp
   4e900:	df000017 	ldw	fp,0(sp)
   4e904:	dec00104 	addi	sp,sp,4
   4e908:	f800283a 	ret

0004e90c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4e90c:	defffe04 	addi	sp,sp,-8
   4e910:	dfc00115 	stw	ra,4(sp)
   4e914:	df000015 	stw	fp,0(sp)
   4e918:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4e91c:	01800174 	movhi	r6,5
   4e920:	318c7004 	addi	r6,r6,12736
   4e924:	01400174 	movhi	r5,5
   4e928:	29456f04 	addi	r5,r5,5564
   4e92c:	01000174 	movhi	r4,5
   4e930:	210c7004 	addi	r4,r4,12736
   4e934:	004e8a40 	call	4e8a4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4e938:	01800134 	movhi	r6,4
   4e93c:	31808a04 	addi	r6,r6,552
   4e940:	01400134 	movhi	r5,4
   4e944:	29400804 	addi	r5,r5,32
   4e948:	01000134 	movhi	r4,4
   4e94c:	21000804 	addi	r4,r4,32
   4e950:	004e8a40 	call	4e8a4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4e954:	01800174 	movhi	r6,5
   4e958:	31856f04 	addi	r6,r6,5564
   4e95c:	01400174 	movhi	r5,5
   4e960:	2943af04 	addi	r5,r5,3772
   4e964:	01000174 	movhi	r4,5
   4e968:	2103af04 	addi	r4,r4,3772
   4e96c:	004e8a40 	call	4e8a4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4e970:	00502d80 	call	502d8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4e974:	00506f40 	call	506f4 <alt_icache_flush_all>
}
   4e978:	0001883a 	nop
   4e97c:	e037883a 	mov	sp,fp
   4e980:	dfc00117 	ldw	ra,4(sp)
   4e984:	df000017 	ldw	fp,0(sp)
   4e988:	dec00204 	addi	sp,sp,8
   4e98c:	f800283a 	ret

0004e990 <alt_get_errno>:
{
   4e990:	defffe04 	addi	sp,sp,-8
   4e994:	dfc00115 	stw	ra,4(sp)
   4e998:	df000015 	stw	fp,0(sp)
   4e99c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e9a0:	d0a00917 	ldw	r2,-32732(gp)
   4e9a4:	10000326 	beq	r2,zero,4e9b4 <alt_get_errno+0x24>
   4e9a8:	d0a00917 	ldw	r2,-32732(gp)
   4e9ac:	103ee83a 	callr	r2
   4e9b0:	00000106 	br	4e9b8 <alt_get_errno+0x28>
   4e9b4:	d0a70f04 	addi	r2,gp,-25540
}
   4e9b8:	e037883a 	mov	sp,fp
   4e9bc:	dfc00117 	ldw	ra,4(sp)
   4e9c0:	df000017 	ldw	fp,0(sp)
   4e9c4:	dec00204 	addi	sp,sp,8
   4e9c8:	f800283a 	ret

0004e9cc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4e9cc:	defff904 	addi	sp,sp,-28
   4e9d0:	dfc00615 	stw	ra,24(sp)
   4e9d4:	df000515 	stw	fp,20(sp)
   4e9d8:	df000504 	addi	fp,sp,20
   4e9dc:	e13ffd15 	stw	r4,-12(fp)
   4e9e0:	e17ffc15 	stw	r5,-16(fp)
   4e9e4:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4e9e8:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e9ec:	e0bffd17 	ldw	r2,-12(fp)
   4e9f0:	10000916 	blt	r2,zero,4ea18 <lseek+0x4c>
   4e9f4:	e0fffd17 	ldw	r3,-12(fp)
   4e9f8:	1805883a 	mov	r2,r3
   4e9fc:	1085883a 	add	r2,r2,r2
   4ea00:	10c5883a 	add	r2,r2,r3
   4ea04:	100490ba 	slli	r2,r2,2
   4ea08:	00c00174 	movhi	r3,5
   4ea0c:	18c7df04 	addi	r3,r3,8060
   4ea10:	10c5883a 	add	r2,r2,r3
   4ea14:	00000106 	br	4ea1c <lseek+0x50>
   4ea18:	0005883a 	mov	r2,zero
   4ea1c:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   4ea20:	e0bffe17 	ldw	r2,-8(fp)
   4ea24:	10001026 	beq	r2,zero,4ea68 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4ea28:	e0bffe17 	ldw	r2,-8(fp)
   4ea2c:	10800017 	ldw	r2,0(r2)
   4ea30:	10800717 	ldw	r2,28(r2)
   4ea34:	10000926 	beq	r2,zero,4ea5c <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4ea38:	e0bffe17 	ldw	r2,-8(fp)
   4ea3c:	10800017 	ldw	r2,0(r2)
   4ea40:	10800717 	ldw	r2,28(r2)
   4ea44:	e1bffb17 	ldw	r6,-20(fp)
   4ea48:	e17ffc17 	ldw	r5,-16(fp)
   4ea4c:	e13ffe17 	ldw	r4,-8(fp)
   4ea50:	103ee83a 	callr	r2
   4ea54:	e0bfff15 	stw	r2,-4(fp)
   4ea58:	00000506 	br	4ea70 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4ea5c:	00bfde84 	movi	r2,-134
   4ea60:	e0bfff15 	stw	r2,-4(fp)
   4ea64:	00000206 	br	4ea70 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
   4ea68:	00bfebc4 	movi	r2,-81
   4ea6c:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   4ea70:	e0bfff17 	ldw	r2,-4(fp)
   4ea74:	1000070e 	bge	r2,zero,4ea94 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
   4ea78:	004e9900 	call	4e990 <alt_get_errno>
   4ea7c:	1007883a 	mov	r3,r2
   4ea80:	e0bfff17 	ldw	r2,-4(fp)
   4ea84:	0085c83a 	sub	r2,zero,r2
   4ea88:	18800015 	stw	r2,0(r3)
    rc = -1;
   4ea8c:	00bfffc4 	movi	r2,-1
   4ea90:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   4ea94:	e0bfff17 	ldw	r2,-4(fp)
}
   4ea98:	e037883a 	mov	sp,fp
   4ea9c:	dfc00117 	ldw	ra,4(sp)
   4eaa0:	df000017 	ldw	fp,0(sp)
   4eaa4:	dec00204 	addi	sp,sp,8
   4eaa8:	f800283a 	ret

0004eaac <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4eaac:	defffd04 	addi	sp,sp,-12
   4eab0:	dfc00215 	stw	ra,8(sp)
   4eab4:	df000115 	stw	fp,4(sp)
   4eab8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4eabc:	0009883a 	mov	r4,zero
   4eac0:	004f1c80 	call	4f1c8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4eac4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4eac8:	004f2040 	call	4f204 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4eacc:	01800174 	movhi	r6,5
   4ead0:	31856104 	addi	r6,r6,5508
   4ead4:	01400174 	movhi	r5,5
   4ead8:	29456104 	addi	r5,r5,5508
   4eadc:	01000174 	movhi	r4,5
   4eae0:	21056104 	addi	r4,r4,5508
   4eae4:	00507e80 	call	507e8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4eae8:	00503dc0 	call	503dc <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4eaec:	01000174 	movhi	r4,5
   4eaf0:	21011004 	addi	r4,r4,1088
   4eaf4:	0050c4c0 	call	50c4c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4eaf8:	d0a71417 	ldw	r2,-25520(gp)
   4eafc:	d0e71517 	ldw	r3,-25516(gp)
   4eb00:	d1271617 	ldw	r4,-25512(gp)
   4eb04:	200d883a 	mov	r6,r4
   4eb08:	180b883a 	mov	r5,r3
   4eb0c:	1009883a 	mov	r4,r2
   4eb10:	00403800 	call	40380 <main>
   4eb14:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4eb18:	01000044 	movi	r4,1
   4eb1c:	004e3f80 	call	4e3f8 <close>
  exit (result);
   4eb20:	e13fff17 	ldw	r4,-4(fp)
   4eb24:	0050c600 	call	50c60 <exit>

0004eb28 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4eb28:	defffe04 	addi	sp,sp,-8
   4eb2c:	df000115 	stw	fp,4(sp)
   4eb30:	df000104 	addi	fp,sp,4
   4eb34:	e13fff15 	stw	r4,-4(fp)
}
   4eb38:	0001883a 	nop
   4eb3c:	e037883a 	mov	sp,fp
   4eb40:	df000017 	ldw	fp,0(sp)
   4eb44:	dec00104 	addi	sp,sp,4
   4eb48:	f800283a 	ret

0004eb4c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4eb4c:	defffe04 	addi	sp,sp,-8
   4eb50:	df000115 	stw	fp,4(sp)
   4eb54:	df000104 	addi	fp,sp,4
   4eb58:	e13fff15 	stw	r4,-4(fp)
}
   4eb5c:	0001883a 	nop
   4eb60:	e037883a 	mov	sp,fp
   4eb64:	df000017 	ldw	fp,0(sp)
   4eb68:	dec00104 	addi	sp,sp,4
   4eb6c:	f800283a 	ret

0004eb70 <alt_get_errno>:
{
   4eb70:	defffe04 	addi	sp,sp,-8
   4eb74:	dfc00115 	stw	ra,4(sp)
   4eb78:	df000015 	stw	fp,0(sp)
   4eb7c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4eb80:	d0a00917 	ldw	r2,-32732(gp)
   4eb84:	10000326 	beq	r2,zero,4eb94 <alt_get_errno+0x24>
   4eb88:	d0a00917 	ldw	r2,-32732(gp)
   4eb8c:	103ee83a 	callr	r2
   4eb90:	00000106 	br	4eb98 <alt_get_errno+0x28>
   4eb94:	d0a70f04 	addi	r2,gp,-25540
}
   4eb98:	e037883a 	mov	sp,fp
   4eb9c:	dfc00117 	ldw	ra,4(sp)
   4eba0:	df000017 	ldw	fp,0(sp)
   4eba4:	dec00204 	addi	sp,sp,8
   4eba8:	f800283a 	ret

0004ebac <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4ebac:	defffd04 	addi	sp,sp,-12
   4ebb0:	df000215 	stw	fp,8(sp)
   4ebb4:	df000204 	addi	fp,sp,8
   4ebb8:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4ebbc:	e0bffe17 	ldw	r2,-8(fp)
   4ebc0:	10800217 	ldw	r2,8(r2)
   4ebc4:	10d00034 	orhi	r3,r2,16384
   4ebc8:	e0bffe17 	ldw	r2,-8(fp)
   4ebcc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ebd0:	e03fff15 	stw	zero,-4(fp)
   4ebd4:	00002306 	br	4ec64 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ebd8:	e0ffff17 	ldw	r3,-4(fp)
   4ebdc:	1805883a 	mov	r2,r3
   4ebe0:	1085883a 	add	r2,r2,r2
   4ebe4:	10c5883a 	add	r2,r2,r3
   4ebe8:	100490ba 	slli	r2,r2,2
   4ebec:	00c00174 	movhi	r3,5
   4ebf0:	10c7883a 	add	r3,r2,r3
   4ebf4:	18c7df17 	ldw	r3,8060(r3)
   4ebf8:	e0bffe17 	ldw	r2,-8(fp)
   4ebfc:	10800017 	ldw	r2,0(r2)
   4ec00:	1880151e 	bne	r3,r2,4ec58 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ec04:	e0ffff17 	ldw	r3,-4(fp)
   4ec08:	1805883a 	mov	r2,r3
   4ec0c:	1085883a 	add	r2,r2,r2
   4ec10:	10c5883a 	add	r2,r2,r3
   4ec14:	100490ba 	slli	r2,r2,2
   4ec18:	00c00174 	movhi	r3,5
   4ec1c:	10c7883a 	add	r3,r2,r3
   4ec20:	1887e117 	ldw	r2,8068(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ec24:	10000c0e 	bge	r2,zero,4ec58 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
   4ec28:	e0ffff17 	ldw	r3,-4(fp)
   4ec2c:	1805883a 	mov	r2,r3
   4ec30:	1085883a 	add	r2,r2,r2
   4ec34:	10c5883a 	add	r2,r2,r3
   4ec38:	100490ba 	slli	r2,r2,2
   4ec3c:	00c00174 	movhi	r3,5
   4ec40:	18c7df04 	addi	r3,r3,8060
   4ec44:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ec48:	e0fffe17 	ldw	r3,-8(fp)
   4ec4c:	18800226 	beq	r3,r2,4ec58 <alt_file_locked+0xac>
    {
      return -EACCES;
   4ec50:	00bffcc4 	movi	r2,-13
   4ec54:	00000806 	br	4ec78 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
   4ec58:	e0bfff17 	ldw	r2,-4(fp)
   4ec5c:	10800044 	addi	r2,r2,1
   4ec60:	e0bfff15 	stw	r2,-4(fp)
   4ec64:	d0a00817 	ldw	r2,-32736(gp)
   4ec68:	1007883a 	mov	r3,r2
   4ec6c:	e0bfff17 	ldw	r2,-4(fp)
   4ec70:	18bfd92e 	bgeu	r3,r2,4ebd8 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4ec74:	0005883a 	mov	r2,zero
}
   4ec78:	e037883a 	mov	sp,fp
   4ec7c:	df000017 	ldw	fp,0(sp)
   4ec80:	dec00104 	addi	sp,sp,4
   4ec84:	f800283a 	ret

0004ec88 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4ec88:	defff604 	addi	sp,sp,-40
   4ec8c:	dfc00915 	stw	ra,36(sp)
   4ec90:	df000815 	stw	fp,32(sp)
   4ec94:	df000804 	addi	fp,sp,32
   4ec98:	e13ffa15 	stw	r4,-24(fp)
   4ec9c:	e17ff915 	stw	r5,-28(fp)
   4eca0:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4eca4:	00bfffc4 	movi	r2,-1
   4eca8:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   4ecac:	00bffb44 	movi	r2,-19
   4ecb0:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   4ecb4:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4ecb8:	d1600604 	addi	r5,gp,-32744
   4ecbc:	e13ffa17 	ldw	r4,-24(fp)
   4ecc0:	00504a40 	call	504a4 <alt_find_dev>
   4ecc4:	e0bfff15 	stw	r2,-4(fp)
   4ecc8:	e0bfff17 	ldw	r2,-4(fp)
   4eccc:	1000051e 	bne	r2,zero,4ece4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4ecd0:	e13ffa17 	ldw	r4,-24(fp)
   4ecd4:	00505340 	call	50534 <alt_find_file>
   4ecd8:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   4ecdc:	00800044 	movi	r2,1
   4ece0:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4ece4:	e0bfff17 	ldw	r2,-4(fp)
   4ece8:	10002c26 	beq	r2,zero,4ed9c <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4ecec:	e13fff17 	ldw	r4,-4(fp)
   4ecf0:	005063c0 	call	5063c <alt_get_fd>
   4ecf4:	e0bffe15 	stw	r2,-8(fp)
   4ecf8:	e0bffe17 	ldw	r2,-8(fp)
   4ecfc:	1000030e 	bge	r2,zero,4ed0c <open+0x84>
    {
      status = index;
   4ed00:	e0bffe17 	ldw	r2,-8(fp)
   4ed04:	e0bffd15 	stw	r2,-12(fp)
   4ed08:	00002606 	br	4eda4 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
   4ed0c:	e0fffe17 	ldw	r3,-8(fp)
   4ed10:	1805883a 	mov	r2,r3
   4ed14:	1085883a 	add	r2,r2,r2
   4ed18:	10c5883a 	add	r2,r2,r3
   4ed1c:	100490ba 	slli	r2,r2,2
   4ed20:	00c00174 	movhi	r3,5
   4ed24:	18c7df04 	addi	r3,r3,8060
   4ed28:	10c5883a 	add	r2,r2,r3
   4ed2c:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4ed30:	e0fff917 	ldw	r3,-28(fp)
   4ed34:	00900034 	movhi	r2,16384
   4ed38:	10bfffc4 	addi	r2,r2,-1
   4ed3c:	1886703a 	and	r3,r3,r2
   4ed40:	e0bffb17 	ldw	r2,-20(fp)
   4ed44:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4ed48:	e0bffc17 	ldw	r2,-16(fp)
   4ed4c:	1000051e 	bne	r2,zero,4ed64 <open+0xdc>
   4ed50:	e13ffb17 	ldw	r4,-20(fp)
   4ed54:	004ebac0 	call	4ebac <alt_file_locked>
   4ed58:	e0bffd15 	stw	r2,-12(fp)
   4ed5c:	e0bffd17 	ldw	r2,-12(fp)
   4ed60:	10001016 	blt	r2,zero,4eda4 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4ed64:	e0bfff17 	ldw	r2,-4(fp)
   4ed68:	10800317 	ldw	r2,12(r2)
   4ed6c:	10000826 	beq	r2,zero,4ed90 <open+0x108>
   4ed70:	e0bfff17 	ldw	r2,-4(fp)
   4ed74:	10800317 	ldw	r2,12(r2)
   4ed78:	e1fff817 	ldw	r7,-32(fp)
   4ed7c:	e1bff917 	ldw	r6,-28(fp)
   4ed80:	e17ffa17 	ldw	r5,-24(fp)
   4ed84:	e13ffb17 	ldw	r4,-20(fp)
   4ed88:	103ee83a 	callr	r2
   4ed8c:	00000106 	br	4ed94 <open+0x10c>
   4ed90:	0005883a 	mov	r2,zero
   4ed94:	e0bffd15 	stw	r2,-12(fp)
   4ed98:	00000206 	br	4eda4 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4ed9c:	00bffb44 	movi	r2,-19
   4eda0:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4eda4:	e0bffd17 	ldw	r2,-12(fp)
   4eda8:	1000090e 	bge	r2,zero,4edd0 <open+0x148>
  {
    alt_release_fd (index);  
   4edac:	e13ffe17 	ldw	r4,-8(fp)
   4edb0:	004ef2c0 	call	4ef2c <alt_release_fd>
    ALT_ERRNO = -status;
   4edb4:	004eb700 	call	4eb70 <alt_get_errno>
   4edb8:	1007883a 	mov	r3,r2
   4edbc:	e0bffd17 	ldw	r2,-12(fp)
   4edc0:	0085c83a 	sub	r2,zero,r2
   4edc4:	18800015 	stw	r2,0(r3)
    return -1;
   4edc8:	00bfffc4 	movi	r2,-1
   4edcc:	00000106 	br	4edd4 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
   4edd0:	e0bffe17 	ldw	r2,-8(fp)
}
   4edd4:	e037883a 	mov	sp,fp
   4edd8:	dfc00117 	ldw	ra,4(sp)
   4eddc:	df000017 	ldw	fp,0(sp)
   4ede0:	dec00204 	addi	sp,sp,8
   4ede4:	f800283a 	ret

0004ede8 <alt_get_errno>:
{
   4ede8:	defffe04 	addi	sp,sp,-8
   4edec:	dfc00115 	stw	ra,4(sp)
   4edf0:	df000015 	stw	fp,0(sp)
   4edf4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4edf8:	d0a00917 	ldw	r2,-32732(gp)
   4edfc:	10000326 	beq	r2,zero,4ee0c <alt_get_errno+0x24>
   4ee00:	d0a00917 	ldw	r2,-32732(gp)
   4ee04:	103ee83a 	callr	r2
   4ee08:	00000106 	br	4ee10 <alt_get_errno+0x28>
   4ee0c:	d0a70f04 	addi	r2,gp,-25540
}
   4ee10:	e037883a 	mov	sp,fp
   4ee14:	dfc00117 	ldw	ra,4(sp)
   4ee18:	df000017 	ldw	fp,0(sp)
   4ee1c:	dec00204 	addi	sp,sp,8
   4ee20:	f800283a 	ret

0004ee24 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4ee24:	defff904 	addi	sp,sp,-28
   4ee28:	dfc00615 	stw	ra,24(sp)
   4ee2c:	df000515 	stw	fp,20(sp)
   4ee30:	df000504 	addi	fp,sp,20
   4ee34:	e13ffd15 	stw	r4,-12(fp)
   4ee38:	e17ffc15 	stw	r5,-16(fp)
   4ee3c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4ee40:	e0bffd17 	ldw	r2,-12(fp)
   4ee44:	10000916 	blt	r2,zero,4ee6c <read+0x48>
   4ee48:	e0fffd17 	ldw	r3,-12(fp)
   4ee4c:	1805883a 	mov	r2,r3
   4ee50:	1085883a 	add	r2,r2,r2
   4ee54:	10c5883a 	add	r2,r2,r3
   4ee58:	100490ba 	slli	r2,r2,2
   4ee5c:	00c00174 	movhi	r3,5
   4ee60:	18c7df04 	addi	r3,r3,8060
   4ee64:	10c5883a 	add	r2,r2,r3
   4ee68:	00000106 	br	4ee70 <read+0x4c>
   4ee6c:	0005883a 	mov	r2,zero
   4ee70:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4ee74:	e0bfff17 	ldw	r2,-4(fp)
   4ee78:	10002226 	beq	r2,zero,4ef04 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4ee7c:	e0bfff17 	ldw	r2,-4(fp)
   4ee80:	10800217 	ldw	r2,8(r2)
   4ee84:	108000cc 	andi	r2,r2,3
   4ee88:	10800060 	cmpeqi	r2,r2,1
   4ee8c:	1000181e 	bne	r2,zero,4eef0 <read+0xcc>
        (fd->dev->read))
   4ee90:	e0bfff17 	ldw	r2,-4(fp)
   4ee94:	10800017 	ldw	r2,0(r2)
   4ee98:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4ee9c:	10001426 	beq	r2,zero,4eef0 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4eea0:	e0bfff17 	ldw	r2,-4(fp)
   4eea4:	10800017 	ldw	r2,0(r2)
   4eea8:	10800517 	ldw	r2,20(r2)
   4eeac:	e0fffb17 	ldw	r3,-20(fp)
   4eeb0:	180d883a 	mov	r6,r3
   4eeb4:	e17ffc17 	ldw	r5,-16(fp)
   4eeb8:	e13fff17 	ldw	r4,-4(fp)
   4eebc:	103ee83a 	callr	r2
   4eec0:	e0bffe15 	stw	r2,-8(fp)
   4eec4:	e0bffe17 	ldw	r2,-8(fp)
   4eec8:	1000070e 	bge	r2,zero,4eee8 <read+0xc4>
        {
          ALT_ERRNO = -rval;
   4eecc:	004ede80 	call	4ede8 <alt_get_errno>
   4eed0:	1007883a 	mov	r3,r2
   4eed4:	e0bffe17 	ldw	r2,-8(fp)
   4eed8:	0085c83a 	sub	r2,zero,r2
   4eedc:	18800015 	stw	r2,0(r3)
          return -1;
   4eee0:	00bfffc4 	movi	r2,-1
   4eee4:	00000c06 	br	4ef18 <read+0xf4>
        }
        return rval;
   4eee8:	e0bffe17 	ldw	r2,-8(fp)
   4eeec:	00000a06 	br	4ef18 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4eef0:	004ede80 	call	4ede8 <alt_get_errno>
   4eef4:	1007883a 	mov	r3,r2
   4eef8:	00800344 	movi	r2,13
   4eefc:	18800015 	stw	r2,0(r3)
   4ef00:	00000406 	br	4ef14 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4ef04:	004ede80 	call	4ede8 <alt_get_errno>
   4ef08:	1007883a 	mov	r3,r2
   4ef0c:	00801444 	movi	r2,81
   4ef10:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4ef14:	00bfffc4 	movi	r2,-1
}
   4ef18:	e037883a 	mov	sp,fp
   4ef1c:	dfc00117 	ldw	ra,4(sp)
   4ef20:	df000017 	ldw	fp,0(sp)
   4ef24:	dec00204 	addi	sp,sp,8
   4ef28:	f800283a 	ret

0004ef2c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4ef2c:	defffe04 	addi	sp,sp,-8
   4ef30:	df000115 	stw	fp,4(sp)
   4ef34:	df000104 	addi	fp,sp,4
   4ef38:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4ef3c:	e0bfff17 	ldw	r2,-4(fp)
   4ef40:	108000d0 	cmplti	r2,r2,3
   4ef44:	1000101e 	bne	r2,zero,4ef88 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
   4ef48:	e0ffff17 	ldw	r3,-4(fp)
   4ef4c:	1805883a 	mov	r2,r3
   4ef50:	1085883a 	add	r2,r2,r2
   4ef54:	10c5883a 	add	r2,r2,r3
   4ef58:	100490ba 	slli	r2,r2,2
   4ef5c:	00c00174 	movhi	r3,5
   4ef60:	10c7883a 	add	r3,r2,r3
   4ef64:	1807e115 	stw	zero,8068(r3)
    alt_fd_list[fd].dev      = 0;
   4ef68:	e0ffff17 	ldw	r3,-4(fp)
   4ef6c:	1805883a 	mov	r2,r3
   4ef70:	1085883a 	add	r2,r2,r2
   4ef74:	10c5883a 	add	r2,r2,r3
   4ef78:	100490ba 	slli	r2,r2,2
   4ef7c:	00c00174 	movhi	r3,5
   4ef80:	10c7883a 	add	r3,r2,r3
   4ef84:	1807df15 	stw	zero,8060(r3)
  }
}
   4ef88:	0001883a 	nop
   4ef8c:	e037883a 	mov	sp,fp
   4ef90:	df000017 	ldw	fp,0(sp)
   4ef94:	dec00104 	addi	sp,sp,4
   4ef98:	f800283a 	ret

0004ef9c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4ef9c:	defff904 	addi	sp,sp,-28
   4efa0:	df000615 	stw	fp,24(sp)
   4efa4:	df000604 	addi	fp,sp,24
   4efa8:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   4efac:	0005303a 	rdctl	r2,status
   4efb0:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4efb4:	e0fffd17 	ldw	r3,-12(fp)
   4efb8:	00bfff84 	movi	r2,-2
   4efbc:	1884703a 	and	r2,r3,r2
   4efc0:	1001703a 	wrctl	status,r2
  return context;
   4efc4:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4efc8:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4efcc:	d0a00a17 	ldw	r2,-32728(gp)
   4efd0:	10c000c4 	addi	r3,r2,3
   4efd4:	00bfff04 	movi	r2,-4
   4efd8:	1884703a 	and	r2,r3,r2
   4efdc:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4efe0:	d0e00a17 	ldw	r3,-32728(gp)
   4efe4:	e0bffa17 	ldw	r2,-24(fp)
   4efe8:	1887883a 	add	r3,r3,r2
   4efec:	008001f4 	movhi	r2,7
   4eff0:	10afc804 	addi	r2,r2,-16608
   4eff4:	10c0072e 	bgeu	r2,r3,4f014 <sbrk+0x78>
   4eff8:	e0bfff17 	ldw	r2,-4(fp)
   4effc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4f000:	e0bffc17 	ldw	r2,-16(fp)
   4f004:	1001703a 	wrctl	status,r2
}
   4f008:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4f00c:	00bfffc4 	movi	r2,-1
   4f010:	00000c06 	br	4f044 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   4f014:	d0a00a17 	ldw	r2,-32728(gp)
   4f018:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   4f01c:	d0e00a17 	ldw	r3,-32728(gp)
   4f020:	e0bffa17 	ldw	r2,-24(fp)
   4f024:	1885883a 	add	r2,r3,r2
   4f028:	d0a00a15 	stw	r2,-32728(gp)
   4f02c:	e0bfff17 	ldw	r2,-4(fp)
   4f030:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   4f034:	e0bffb17 	ldw	r2,-20(fp)
   4f038:	1001703a 	wrctl	status,r2
}
   4f03c:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4f040:	e0bffe17 	ldw	r2,-8(fp)
} 
   4f044:	e037883a 	mov	sp,fp
   4f048:	df000017 	ldw	fp,0(sp)
   4f04c:	dec00104 	addi	sp,sp,4
   4f050:	f800283a 	ret

0004f054 <alt_get_errno>:
{
   4f054:	defffe04 	addi	sp,sp,-8
   4f058:	dfc00115 	stw	ra,4(sp)
   4f05c:	df000015 	stw	fp,0(sp)
   4f060:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f064:	d0a00917 	ldw	r2,-32732(gp)
   4f068:	10000326 	beq	r2,zero,4f078 <alt_get_errno+0x24>
   4f06c:	d0a00917 	ldw	r2,-32732(gp)
   4f070:	103ee83a 	callr	r2
   4f074:	00000106 	br	4f07c <alt_get_errno+0x28>
   4f078:	d0a70f04 	addi	r2,gp,-25540
}
   4f07c:	e037883a 	mov	sp,fp
   4f080:	dfc00117 	ldw	ra,4(sp)
   4f084:	df000017 	ldw	fp,0(sp)
   4f088:	dec00204 	addi	sp,sp,8
   4f08c:	f800283a 	ret

0004f090 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4f090:	defff904 	addi	sp,sp,-28
   4f094:	dfc00615 	stw	ra,24(sp)
   4f098:	df000515 	stw	fp,20(sp)
   4f09c:	df000504 	addi	fp,sp,20
   4f0a0:	e13ffd15 	stw	r4,-12(fp)
   4f0a4:	e17ffc15 	stw	r5,-16(fp)
   4f0a8:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f0ac:	e0bffd17 	ldw	r2,-12(fp)
   4f0b0:	10000916 	blt	r2,zero,4f0d8 <write+0x48>
   4f0b4:	e0fffd17 	ldw	r3,-12(fp)
   4f0b8:	1805883a 	mov	r2,r3
   4f0bc:	1085883a 	add	r2,r2,r2
   4f0c0:	10c5883a 	add	r2,r2,r3
   4f0c4:	100490ba 	slli	r2,r2,2
   4f0c8:	00c00174 	movhi	r3,5
   4f0cc:	18c7df04 	addi	r3,r3,8060
   4f0d0:	10c5883a 	add	r2,r2,r3
   4f0d4:	00000106 	br	4f0dc <write+0x4c>
   4f0d8:	0005883a 	mov	r2,zero
   4f0dc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4f0e0:	e0bfff17 	ldw	r2,-4(fp)
   4f0e4:	10002126 	beq	r2,zero,4f16c <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4f0e8:	e0bfff17 	ldw	r2,-4(fp)
   4f0ec:	10800217 	ldw	r2,8(r2)
   4f0f0:	108000cc 	andi	r2,r2,3
   4f0f4:	10001826 	beq	r2,zero,4f158 <write+0xc8>
   4f0f8:	e0bfff17 	ldw	r2,-4(fp)
   4f0fc:	10800017 	ldw	r2,0(r2)
   4f100:	10800617 	ldw	r2,24(r2)
   4f104:	10001426 	beq	r2,zero,4f158 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4f108:	e0bfff17 	ldw	r2,-4(fp)
   4f10c:	10800017 	ldw	r2,0(r2)
   4f110:	10800617 	ldw	r2,24(r2)
   4f114:	e0fffb17 	ldw	r3,-20(fp)
   4f118:	180d883a 	mov	r6,r3
   4f11c:	e17ffc17 	ldw	r5,-16(fp)
   4f120:	e13fff17 	ldw	r4,-4(fp)
   4f124:	103ee83a 	callr	r2
   4f128:	e0bffe15 	stw	r2,-8(fp)
   4f12c:	e0bffe17 	ldw	r2,-8(fp)
   4f130:	1000070e 	bge	r2,zero,4f150 <write+0xc0>
      {
        ALT_ERRNO = -rval;
   4f134:	004f0540 	call	4f054 <alt_get_errno>
   4f138:	1007883a 	mov	r3,r2
   4f13c:	e0bffe17 	ldw	r2,-8(fp)
   4f140:	0085c83a 	sub	r2,zero,r2
   4f144:	18800015 	stw	r2,0(r3)
        return -1;
   4f148:	00bfffc4 	movi	r2,-1
   4f14c:	00000c06 	br	4f180 <write+0xf0>
      }
      return rval;
   4f150:	e0bffe17 	ldw	r2,-8(fp)
   4f154:	00000a06 	br	4f180 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4f158:	004f0540 	call	4f054 <alt_get_errno>
   4f15c:	1007883a 	mov	r3,r2
   4f160:	00800344 	movi	r2,13
   4f164:	18800015 	stw	r2,0(r3)
   4f168:	00000406 	br	4f17c <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4f16c:	004f0540 	call	4f054 <alt_get_errno>
   4f170:	1007883a 	mov	r3,r2
   4f174:	00801444 	movi	r2,81
   4f178:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4f17c:	00bfffc4 	movi	r2,-1
}
   4f180:	e037883a 	mov	sp,fp
   4f184:	dfc00117 	ldw	ra,4(sp)
   4f188:	df000017 	ldw	fp,0(sp)
   4f18c:	dec00204 	addi	sp,sp,8
   4f190:	f800283a 	ret

0004f194 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4f194:	defffd04 	addi	sp,sp,-12
   4f198:	dfc00215 	stw	ra,8(sp)
   4f19c:	df000115 	stw	fp,4(sp)
   4f1a0:	df000104 	addi	fp,sp,4
   4f1a4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4f1a8:	d1600604 	addi	r5,gp,-32744
   4f1ac:	e13fff17 	ldw	r4,-4(fp)
   4f1b0:	00503340 	call	50334 <alt_dev_llist_insert>
}
   4f1b4:	e037883a 	mov	sp,fp
   4f1b8:	dfc00117 	ldw	ra,4(sp)
   4f1bc:	df000017 	ldw	fp,0(sp)
   4f1c0:	dec00204 	addi	sp,sp,8
   4f1c4:	f800283a 	ret

0004f1c8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4f1c8:	defffd04 	addi	sp,sp,-12
   4f1cc:	dfc00215 	stw	ra,8(sp)
   4f1d0:	df000115 	stw	fp,4(sp)
   4f1d4:	df000104 	addi	fp,sp,4
   4f1d8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   4f1dc:	0050b900 	call	50b90 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4f1e0:	00800044 	movi	r2,1
   4f1e4:	1001703a 	wrctl	status,r2
}
   4f1e8:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   4f1ec:	0001883a 	nop
   4f1f0:	e037883a 	mov	sp,fp
   4f1f4:	dfc00117 	ldw	ra,4(sp)
   4f1f8:	df000017 	ldw	fp,0(sp)
   4f1fc:	dec00204 	addi	sp,sp,8
   4f200:	f800283a 	ret

0004f204 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4f204:	defffe04 	addi	sp,sp,-8
   4f208:	dfc00115 	stw	ra,4(sp)
   4f20c:	df000015 	stw	fp,0(sp)
   4f210:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   4f214:	01c0fa04 	movi	r7,1000
   4f218:	01800044 	movi	r6,1
   4f21c:	000b883a 	mov	r5,zero
   4f220:	01000234 	movhi	r4,8
   4f224:	21040004 	addi	r4,r4,4096
   4f228:	004fd5c0 	call	4fd5c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   4f22c:	000d883a 	mov	r6,zero
   4f230:	000b883a 	mov	r5,zero
   4f234:	01000174 	movhi	r4,5
   4f238:	21084904 	addi	r4,r4,8484
   4f23c:	004f3d40 	call	4f3d4 <altera_avalon_jtag_uart_init>
   4f240:	01000174 	movhi	r4,5
   4f244:	21083f04 	addi	r4,r4,8444
   4f248:	004f1940 	call	4f194 <alt_dev_reg>
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
   4f24c:	01000174 	movhi	r4,5
   4f250:	210c5704 	addi	r4,r4,12636
   4f254:	004f1940 	call	4f194 <alt_dev_reg>
}
   4f258:	0001883a 	nop
   4f25c:	e037883a 	mov	sp,fp
   4f260:	dfc00117 	ldw	ra,4(sp)
   4f264:	df000017 	ldw	fp,0(sp)
   4f268:	dec00204 	addi	sp,sp,8
   4f26c:	f800283a 	ret

0004f270 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4f270:	defffa04 	addi	sp,sp,-24
   4f274:	dfc00515 	stw	ra,20(sp)
   4f278:	df000415 	stw	fp,16(sp)
   4f27c:	df000404 	addi	fp,sp,16
   4f280:	e13ffe15 	stw	r4,-8(fp)
   4f284:	e17ffd15 	stw	r5,-12(fp)
   4f288:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f28c:	e0bffe17 	ldw	r2,-8(fp)
   4f290:	10800017 	ldw	r2,0(r2)
   4f294:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4f298:	e0bfff17 	ldw	r2,-4(fp)
   4f29c:	10c00a04 	addi	r3,r2,40
   4f2a0:	e0bffe17 	ldw	r2,-8(fp)
   4f2a4:	10800217 	ldw	r2,8(r2)
   4f2a8:	100f883a 	mov	r7,r2
   4f2ac:	e1bffc17 	ldw	r6,-16(fp)
   4f2b0:	e17ffd17 	ldw	r5,-12(fp)
   4f2b4:	1809883a 	mov	r4,r3
   4f2b8:	004f8940 	call	4f894 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4f2bc:	e037883a 	mov	sp,fp
   4f2c0:	dfc00117 	ldw	ra,4(sp)
   4f2c4:	df000017 	ldw	fp,0(sp)
   4f2c8:	dec00204 	addi	sp,sp,8
   4f2cc:	f800283a 	ret

0004f2d0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4f2d0:	defffa04 	addi	sp,sp,-24
   4f2d4:	dfc00515 	stw	ra,20(sp)
   4f2d8:	df000415 	stw	fp,16(sp)
   4f2dc:	df000404 	addi	fp,sp,16
   4f2e0:	e13ffe15 	stw	r4,-8(fp)
   4f2e4:	e17ffd15 	stw	r5,-12(fp)
   4f2e8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f2ec:	e0bffe17 	ldw	r2,-8(fp)
   4f2f0:	10800017 	ldw	r2,0(r2)
   4f2f4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4f2f8:	e0bfff17 	ldw	r2,-4(fp)
   4f2fc:	10c00a04 	addi	r3,r2,40
   4f300:	e0bffe17 	ldw	r2,-8(fp)
   4f304:	10800217 	ldw	r2,8(r2)
   4f308:	100f883a 	mov	r7,r2
   4f30c:	e1bffc17 	ldw	r6,-16(fp)
   4f310:	e17ffd17 	ldw	r5,-12(fp)
   4f314:	1809883a 	mov	r4,r3
   4f318:	004fab40 	call	4fab4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4f31c:	e037883a 	mov	sp,fp
   4f320:	dfc00117 	ldw	ra,4(sp)
   4f324:	df000017 	ldw	fp,0(sp)
   4f328:	dec00204 	addi	sp,sp,8
   4f32c:	f800283a 	ret

0004f330 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4f330:	defffc04 	addi	sp,sp,-16
   4f334:	dfc00315 	stw	ra,12(sp)
   4f338:	df000215 	stw	fp,8(sp)
   4f33c:	df000204 	addi	fp,sp,8
   4f340:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f344:	e0bffe17 	ldw	r2,-8(fp)
   4f348:	10800017 	ldw	r2,0(r2)
   4f34c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4f350:	e0bfff17 	ldw	r2,-4(fp)
   4f354:	10c00a04 	addi	r3,r2,40
   4f358:	e0bffe17 	ldw	r2,-8(fp)
   4f35c:	10800217 	ldw	r2,8(r2)
   4f360:	100b883a 	mov	r5,r2
   4f364:	1809883a 	mov	r4,r3
   4f368:	004f7380 	call	4f738 <altera_avalon_jtag_uart_close>
}
   4f36c:	e037883a 	mov	sp,fp
   4f370:	dfc00117 	ldw	ra,4(sp)
   4f374:	df000017 	ldw	fp,0(sp)
   4f378:	dec00204 	addi	sp,sp,8
   4f37c:	f800283a 	ret

0004f380 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4f380:	defffa04 	addi	sp,sp,-24
   4f384:	dfc00515 	stw	ra,20(sp)
   4f388:	df000415 	stw	fp,16(sp)
   4f38c:	df000404 	addi	fp,sp,16
   4f390:	e13ffe15 	stw	r4,-8(fp)
   4f394:	e17ffd15 	stw	r5,-12(fp)
   4f398:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4f39c:	e0bffe17 	ldw	r2,-8(fp)
   4f3a0:	10800017 	ldw	r2,0(r2)
   4f3a4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4f3a8:	e0bfff17 	ldw	r2,-4(fp)
   4f3ac:	10800a04 	addi	r2,r2,40
   4f3b0:	e1bffc17 	ldw	r6,-16(fp)
   4f3b4:	e17ffd17 	ldw	r5,-12(fp)
   4f3b8:	1009883a 	mov	r4,r2
   4f3bc:	004f7a00 	call	4f7a0 <altera_avalon_jtag_uart_ioctl>
}
   4f3c0:	e037883a 	mov	sp,fp
   4f3c4:	dfc00117 	ldw	ra,4(sp)
   4f3c8:	df000017 	ldw	fp,0(sp)
   4f3cc:	dec00204 	addi	sp,sp,8
   4f3d0:	f800283a 	ret

0004f3d4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4f3d4:	defffb04 	addi	sp,sp,-20
   4f3d8:	dfc00415 	stw	ra,16(sp)
   4f3dc:	df000315 	stw	fp,12(sp)
   4f3e0:	df000304 	addi	fp,sp,12
   4f3e4:	e13fff15 	stw	r4,-4(fp)
   4f3e8:	e17ffe15 	stw	r5,-8(fp)
   4f3ec:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f3f0:	e0bfff17 	ldw	r2,-4(fp)
   4f3f4:	00c00044 	movi	r3,1
   4f3f8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4f3fc:	e0bfff17 	ldw	r2,-4(fp)
   4f400:	10800017 	ldw	r2,0(r2)
   4f404:	10800104 	addi	r2,r2,4
   4f408:	1007883a 	mov	r3,r2
   4f40c:	e0bfff17 	ldw	r2,-4(fp)
   4f410:	10800817 	ldw	r2,32(r2)
   4f414:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   4f418:	e0bffd17 	ldw	r2,-12(fp)
   4f41c:	01800174 	movhi	r6,5
   4f420:	31bd2204 	addi	r6,r6,-2936
   4f424:	e17fff17 	ldw	r5,-4(fp)
   4f428:	1009883a 	mov	r4,r2
   4f42c:	00508640 	call	50864 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4f430:	e0bfff17 	ldw	r2,-4(fp)
   4f434:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4f438:	e0bfff17 	ldw	r2,-4(fp)
   4f43c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4f440:	d0e71817 	ldw	r3,-25504(gp)
   4f444:	e1ffff17 	ldw	r7,-4(fp)
   4f448:	01800174 	movhi	r6,5
   4f44c:	31bda604 	addi	r6,r6,-2408
   4f450:	180b883a 	mov	r5,r3
   4f454:	1009883a 	mov	r4,r2
   4f458:	00501a40 	call	501a4 <alt_alarm_start>
   4f45c:	1000040e 	bge	r2,zero,4f470 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4f460:	e0ffff17 	ldw	r3,-4(fp)
   4f464:	00a00034 	movhi	r2,32768
   4f468:	10bfffc4 	addi	r2,r2,-1
   4f46c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4f470:	0001883a 	nop
   4f474:	e037883a 	mov	sp,fp
   4f478:	dfc00117 	ldw	ra,4(sp)
   4f47c:	df000017 	ldw	fp,0(sp)
   4f480:	dec00204 	addi	sp,sp,8
   4f484:	f800283a 	ret

0004f488 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4f488:	defff704 	addi	sp,sp,-36
   4f48c:	df000815 	stw	fp,32(sp)
   4f490:	df000804 	addi	fp,sp,32
   4f494:	e13ff915 	stw	r4,-28(fp)
   4f498:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4f49c:	e0bff917 	ldw	r2,-28(fp)
   4f4a0:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   4f4a4:	e0bffd17 	ldw	r2,-12(fp)
   4f4a8:	10800017 	ldw	r2,0(r2)
   4f4ac:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f4b0:	e0bffc17 	ldw	r2,-16(fp)
   4f4b4:	10800104 	addi	r2,r2,4
   4f4b8:	10800037 	ldwio	r2,0(r2)
   4f4bc:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4f4c0:	e0bffb17 	ldw	r2,-20(fp)
   4f4c4:	1080c00c 	andi	r2,r2,768
   4f4c8:	10006d26 	beq	r2,zero,4f680 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4f4cc:	e0bffb17 	ldw	r2,-20(fp)
   4f4d0:	1080400c 	andi	r2,r2,256
   4f4d4:	10003526 	beq	r2,zero,4f5ac <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4f4d8:	00800074 	movhi	r2,1
   4f4dc:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f4e0:	e0bffd17 	ldw	r2,-12(fp)
   4f4e4:	10800a17 	ldw	r2,40(r2)
   4f4e8:	10800044 	addi	r2,r2,1
   4f4ec:	1081ffcc 	andi	r2,r2,2047
   4f4f0:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   4f4f4:	e0bffd17 	ldw	r2,-12(fp)
   4f4f8:	10800b17 	ldw	r2,44(r2)
   4f4fc:	e0fffa17 	ldw	r3,-24(fp)
   4f500:	18801526 	beq	r3,r2,4f558 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4f504:	e0bffc17 	ldw	r2,-16(fp)
   4f508:	10800037 	ldwio	r2,0(r2)
   4f50c:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4f510:	e0bfff17 	ldw	r2,-4(fp)
   4f514:	10a0000c 	andi	r2,r2,32768
   4f518:	10001126 	beq	r2,zero,4f560 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4f51c:	e0bffd17 	ldw	r2,-12(fp)
   4f520:	10800a17 	ldw	r2,40(r2)
   4f524:	e0ffff17 	ldw	r3,-4(fp)
   4f528:	1809883a 	mov	r4,r3
   4f52c:	e0fffd17 	ldw	r3,-12(fp)
   4f530:	1885883a 	add	r2,r3,r2
   4f534:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f538:	e0bffd17 	ldw	r2,-12(fp)
   4f53c:	10800a17 	ldw	r2,40(r2)
   4f540:	10800044 	addi	r2,r2,1
   4f544:	10c1ffcc 	andi	r3,r2,2047
   4f548:	e0bffd17 	ldw	r2,-12(fp)
   4f54c:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   4f550:	0001883a 	nop
      {
   4f554:	003fe206 	br	4f4e0 <altera_avalon_jtag_uart_irq+0x58>
          break;
   4f558:	0001883a 	nop
   4f55c:	00000106 	br	4f564 <altera_avalon_jtag_uart_irq+0xdc>
          break;
   4f560:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4f564:	e0bfff17 	ldw	r2,-4(fp)
   4f568:	10bfffec 	andhi	r2,r2,65535
   4f56c:	10000f26 	beq	r2,zero,4f5ac <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f570:	e0bffd17 	ldw	r2,-12(fp)
   4f574:	10c00817 	ldw	r3,32(r2)
   4f578:	00bfff84 	movi	r2,-2
   4f57c:	1886703a 	and	r3,r3,r2
   4f580:	e0bffd17 	ldw	r2,-12(fp)
   4f584:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4f588:	e0bffc17 	ldw	r2,-16(fp)
   4f58c:	10800104 	addi	r2,r2,4
   4f590:	1007883a 	mov	r3,r2
   4f594:	e0bffd17 	ldw	r2,-12(fp)
   4f598:	10800817 	ldw	r2,32(r2)
   4f59c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f5a0:	e0bffc17 	ldw	r2,-16(fp)
   4f5a4:	10800104 	addi	r2,r2,4
   4f5a8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4f5ac:	e0bffb17 	ldw	r2,-20(fp)
   4f5b0:	1080800c 	andi	r2,r2,512
   4f5b4:	103fbe26 	beq	r2,zero,4f4b0 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4f5b8:	e0bffb17 	ldw	r2,-20(fp)
   4f5bc:	1004d43a 	srli	r2,r2,16
   4f5c0:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4f5c4:	00001406 	br	4f618 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4f5c8:	e0bffc17 	ldw	r2,-16(fp)
   4f5cc:	e0fffd17 	ldw	r3,-12(fp)
   4f5d0:	18c00d17 	ldw	r3,52(r3)
   4f5d4:	e13ffd17 	ldw	r4,-12(fp)
   4f5d8:	20c7883a 	add	r3,r4,r3
   4f5dc:	18c20e03 	ldbu	r3,2104(r3)
   4f5e0:	18c03fcc 	andi	r3,r3,255
   4f5e4:	18c0201c 	xori	r3,r3,128
   4f5e8:	18ffe004 	addi	r3,r3,-128
   4f5ec:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f5f0:	e0bffd17 	ldw	r2,-12(fp)
   4f5f4:	10800d17 	ldw	r2,52(r2)
   4f5f8:	10800044 	addi	r2,r2,1
   4f5fc:	10c1ffcc 	andi	r3,r2,2047
   4f600:	e0bffd17 	ldw	r2,-12(fp)
   4f604:	10c00d15 	stw	r3,52(r2)
   4f608:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4f60c:	e0bffe17 	ldw	r2,-8(fp)
   4f610:	10bfffc4 	addi	r2,r2,-1
   4f614:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   4f618:	e0bffe17 	ldw	r2,-8(fp)
   4f61c:	10000526 	beq	r2,zero,4f634 <altera_avalon_jtag_uart_irq+0x1ac>
   4f620:	e0bffd17 	ldw	r2,-12(fp)
   4f624:	10c00d17 	ldw	r3,52(r2)
   4f628:	e0bffd17 	ldw	r2,-12(fp)
   4f62c:	10800c17 	ldw	r2,48(r2)
   4f630:	18bfe51e 	bne	r3,r2,4f5c8 <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
   4f634:	e0bffe17 	ldw	r2,-8(fp)
   4f638:	103f9d26 	beq	r2,zero,4f4b0 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4f63c:	e0bffd17 	ldw	r2,-12(fp)
   4f640:	10c00817 	ldw	r3,32(r2)
   4f644:	00bfff44 	movi	r2,-3
   4f648:	1886703a 	and	r3,r3,r2
   4f64c:	e0bffd17 	ldw	r2,-12(fp)
   4f650:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4f654:	e0bffd17 	ldw	r2,-12(fp)
   4f658:	10800017 	ldw	r2,0(r2)
   4f65c:	10800104 	addi	r2,r2,4
   4f660:	1007883a 	mov	r3,r2
   4f664:	e0bffd17 	ldw	r2,-12(fp)
   4f668:	10800817 	ldw	r2,32(r2)
   4f66c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f670:	e0bffc17 	ldw	r2,-16(fp)
   4f674:	10800104 	addi	r2,r2,4
   4f678:	10800037 	ldwio	r2,0(r2)
  {
   4f67c:	003f8c06 	br	4f4b0 <altera_avalon_jtag_uart_irq+0x28>
      break;
   4f680:	0001883a 	nop
      }
    }
  }
}
   4f684:	0001883a 	nop
   4f688:	e037883a 	mov	sp,fp
   4f68c:	df000017 	ldw	fp,0(sp)
   4f690:	dec00104 	addi	sp,sp,4
   4f694:	f800283a 	ret

0004f698 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4f698:	defffc04 	addi	sp,sp,-16
   4f69c:	df000315 	stw	fp,12(sp)
   4f6a0:	df000304 	addi	fp,sp,12
   4f6a4:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4f6a8:	e0bffd17 	ldw	r2,-12(fp)
   4f6ac:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4f6b0:	e0bfff17 	ldw	r2,-4(fp)
   4f6b4:	10800017 	ldw	r2,0(r2)
   4f6b8:	10800104 	addi	r2,r2,4
   4f6bc:	10800037 	ldwio	r2,0(r2)
   4f6c0:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4f6c4:	e0bffe17 	ldw	r2,-8(fp)
   4f6c8:	1081000c 	andi	r2,r2,1024
   4f6cc:	10000b26 	beq	r2,zero,4f6fc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4f6d0:	e0bfff17 	ldw	r2,-4(fp)
   4f6d4:	10800017 	ldw	r2,0(r2)
   4f6d8:	10800104 	addi	r2,r2,4
   4f6dc:	1007883a 	mov	r3,r2
   4f6e0:	e0bfff17 	ldw	r2,-4(fp)
   4f6e4:	10800817 	ldw	r2,32(r2)
   4f6e8:	10810014 	ori	r2,r2,1024
   4f6ec:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4f6f0:	e0bfff17 	ldw	r2,-4(fp)
   4f6f4:	10000915 	stw	zero,36(r2)
   4f6f8:	00000a06 	br	4f724 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4f6fc:	e0bfff17 	ldw	r2,-4(fp)
   4f700:	10c00917 	ldw	r3,36(r2)
   4f704:	00a00034 	movhi	r2,32768
   4f708:	10bfff04 	addi	r2,r2,-4
   4f70c:	10c00536 	bltu	r2,r3,4f724 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4f710:	e0bfff17 	ldw	r2,-4(fp)
   4f714:	10800917 	ldw	r2,36(r2)
   4f718:	10c00044 	addi	r3,r2,1
   4f71c:	e0bfff17 	ldw	r2,-4(fp)
   4f720:	10c00915 	stw	r3,36(r2)
   4f724:	d0a71817 	ldw	r2,-25504(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4f728:	e037883a 	mov	sp,fp
   4f72c:	df000017 	ldw	fp,0(sp)
   4f730:	dec00104 	addi	sp,sp,4
   4f734:	f800283a 	ret

0004f738 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4f738:	defffd04 	addi	sp,sp,-12
   4f73c:	df000215 	stw	fp,8(sp)
   4f740:	df000204 	addi	fp,sp,8
   4f744:	e13fff15 	stw	r4,-4(fp)
   4f748:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4f74c:	00000506 	br	4f764 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4f750:	e0bffe17 	ldw	r2,-8(fp)
   4f754:	1090000c 	andi	r2,r2,16384
   4f758:	10000226 	beq	r2,zero,4f764 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4f75c:	00bffd44 	movi	r2,-11
   4f760:	00000b06 	br	4f790 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4f764:	e0bfff17 	ldw	r2,-4(fp)
   4f768:	10c00d17 	ldw	r3,52(r2)
   4f76c:	e0bfff17 	ldw	r2,-4(fp)
   4f770:	10800c17 	ldw	r2,48(r2)
   4f774:	18800526 	beq	r3,r2,4f78c <altera_avalon_jtag_uart_close+0x54>
   4f778:	e0bfff17 	ldw	r2,-4(fp)
   4f77c:	10c00917 	ldw	r3,36(r2)
   4f780:	e0bfff17 	ldw	r2,-4(fp)
   4f784:	10800117 	ldw	r2,4(r2)
   4f788:	18bff136 	bltu	r3,r2,4f750 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   4f78c:	0005883a 	mov	r2,zero
}
   4f790:	e037883a 	mov	sp,fp
   4f794:	df000017 	ldw	fp,0(sp)
   4f798:	dec00104 	addi	sp,sp,4
   4f79c:	f800283a 	ret

0004f7a0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4f7a0:	defffa04 	addi	sp,sp,-24
   4f7a4:	df000515 	stw	fp,20(sp)
   4f7a8:	df000504 	addi	fp,sp,20
   4f7ac:	e13ffd15 	stw	r4,-12(fp)
   4f7b0:	e17ffc15 	stw	r5,-16(fp)
   4f7b4:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   4f7b8:	00bff9c4 	movi	r2,-25
   4f7bc:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   4f7c0:	e0bffc17 	ldw	r2,-16(fp)
   4f7c4:	109a8060 	cmpeqi	r2,r2,27137
   4f7c8:	1000041e 	bne	r2,zero,4f7dc <altera_avalon_jtag_uart_ioctl+0x3c>
   4f7cc:	e0bffc17 	ldw	r2,-16(fp)
   4f7d0:	109a80a0 	cmpeqi	r2,r2,27138
   4f7d4:	1000181e 	bne	r2,zero,4f838 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   4f7d8:	00002906 	br	4f880 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   4f7dc:	e0bffd17 	ldw	r2,-12(fp)
   4f7e0:	10c00117 	ldw	r3,4(r2)
   4f7e4:	00a00034 	movhi	r2,32768
   4f7e8:	10bfffc4 	addi	r2,r2,-1
   4f7ec:	18802126 	beq	r3,r2,4f874 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   4f7f0:	e0bffb17 	ldw	r2,-20(fp)
   4f7f4:	10800017 	ldw	r2,0(r2)
   4f7f8:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4f7fc:	e0bffe17 	ldw	r2,-8(fp)
   4f800:	10800090 	cmplti	r2,r2,2
   4f804:	1000061e 	bne	r2,zero,4f820 <altera_avalon_jtag_uart_ioctl+0x80>
   4f808:	e0fffe17 	ldw	r3,-8(fp)
   4f80c:	00a00034 	movhi	r2,32768
   4f810:	10bfffc4 	addi	r2,r2,-1
   4f814:	18800226 	beq	r3,r2,4f820 <altera_avalon_jtag_uart_ioctl+0x80>
   4f818:	e0bffe17 	ldw	r2,-8(fp)
   4f81c:	00000206 	br	4f828 <altera_avalon_jtag_uart_ioctl+0x88>
   4f820:	00a00034 	movhi	r2,32768
   4f824:	10bfff84 	addi	r2,r2,-2
   4f828:	e0fffd17 	ldw	r3,-12(fp)
   4f82c:	18800115 	stw	r2,4(r3)
      rc = 0;
   4f830:	e03fff15 	stw	zero,-4(fp)
    break;
   4f834:	00000f06 	br	4f874 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   4f838:	e0bffd17 	ldw	r2,-12(fp)
   4f83c:	10c00117 	ldw	r3,4(r2)
   4f840:	00a00034 	movhi	r2,32768
   4f844:	10bfffc4 	addi	r2,r2,-1
   4f848:	18800c26 	beq	r3,r2,4f87c <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4f84c:	e0bffd17 	ldw	r2,-12(fp)
   4f850:	10c00917 	ldw	r3,36(r2)
   4f854:	e0bffd17 	ldw	r2,-12(fp)
   4f858:	10800117 	ldw	r2,4(r2)
   4f85c:	1885803a 	cmpltu	r2,r3,r2
   4f860:	10c03fcc 	andi	r3,r2,255
   4f864:	e0bffb17 	ldw	r2,-20(fp)
   4f868:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4f86c:	e03fff15 	stw	zero,-4(fp)
    break;
   4f870:	00000206 	br	4f87c <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   4f874:	0001883a 	nop
   4f878:	00000106 	br	4f880 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   4f87c:	0001883a 	nop
  }

  return rc;
   4f880:	e0bfff17 	ldw	r2,-4(fp)
}
   4f884:	e037883a 	mov	sp,fp
   4f888:	df000017 	ldw	fp,0(sp)
   4f88c:	dec00104 	addi	sp,sp,4
   4f890:	f800283a 	ret

0004f894 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4f894:	defff304 	addi	sp,sp,-52
   4f898:	dfc00c15 	stw	ra,48(sp)
   4f89c:	df000b15 	stw	fp,44(sp)
   4f8a0:	df000b04 	addi	fp,sp,44
   4f8a4:	e13ff815 	stw	r4,-32(fp)
   4f8a8:	e17ff715 	stw	r5,-36(fp)
   4f8ac:	e1bff615 	stw	r6,-40(fp)
   4f8b0:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   4f8b4:	e0bff717 	ldw	r2,-36(fp)
   4f8b8:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4f8bc:	00004706 	br	4f9dc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4f8c0:	e0bff817 	ldw	r2,-32(fp)
   4f8c4:	10800a17 	ldw	r2,40(r2)
   4f8c8:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   4f8cc:	e0bff817 	ldw	r2,-32(fp)
   4f8d0:	10800b17 	ldw	r2,44(r2)
   4f8d4:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   4f8d8:	e0fffd17 	ldw	r3,-12(fp)
   4f8dc:	e0bffc17 	ldw	r2,-16(fp)
   4f8e0:	18800536 	bltu	r3,r2,4f8f8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4f8e4:	e0fffd17 	ldw	r3,-12(fp)
   4f8e8:	e0bffc17 	ldw	r2,-16(fp)
   4f8ec:	1885c83a 	sub	r2,r3,r2
   4f8f0:	e0bffe15 	stw	r2,-8(fp)
   4f8f4:	00000406 	br	4f908 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4f8f8:	00c20004 	movi	r3,2048
   4f8fc:	e0bffc17 	ldw	r2,-16(fp)
   4f900:	1885c83a 	sub	r2,r3,r2
   4f904:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   4f908:	e0bffe17 	ldw	r2,-8(fp)
   4f90c:	10001e26 	beq	r2,zero,4f988 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4f910:	e0fff617 	ldw	r3,-40(fp)
   4f914:	e0bffe17 	ldw	r2,-8(fp)
   4f918:	1880022e 	bgeu	r3,r2,4f924 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4f91c:	e0bff617 	ldw	r2,-40(fp)
   4f920:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4f924:	e0bff817 	ldw	r2,-32(fp)
   4f928:	10c00e04 	addi	r3,r2,56
   4f92c:	e0bffc17 	ldw	r2,-16(fp)
   4f930:	1885883a 	add	r2,r3,r2
   4f934:	e1bffe17 	ldw	r6,-8(fp)
   4f938:	100b883a 	mov	r5,r2
   4f93c:	e13fff17 	ldw	r4,-4(fp)
   4f940:	00472200 	call	47220 <memcpy>
      ptr   += n;
   4f944:	e0ffff17 	ldw	r3,-4(fp)
   4f948:	e0bffe17 	ldw	r2,-8(fp)
   4f94c:	1885883a 	add	r2,r3,r2
   4f950:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   4f954:	e0fff617 	ldw	r3,-40(fp)
   4f958:	e0bffe17 	ldw	r2,-8(fp)
   4f95c:	1885c83a 	sub	r2,r3,r2
   4f960:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f964:	e0fffc17 	ldw	r3,-16(fp)
   4f968:	e0bffe17 	ldw	r2,-8(fp)
   4f96c:	1885883a 	add	r2,r3,r2
   4f970:	10c1ffcc 	andi	r3,r2,2047
   4f974:	e0bff817 	ldw	r2,-32(fp)
   4f978:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4f97c:	e0bff617 	ldw	r2,-40(fp)
   4f980:	00bfcf16 	blt	zero,r2,4f8c0 <altera_avalon_jtag_uart_read+0x2c>
   4f984:	00000106 	br	4f98c <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   4f988:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   4f98c:	e0ffff17 	ldw	r3,-4(fp)
   4f990:	e0bff717 	ldw	r2,-36(fp)
   4f994:	1880141e 	bne	r3,r2,4f9e8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4f998:	e0bff517 	ldw	r2,-44(fp)
   4f99c:	1090000c 	andi	r2,r2,16384
   4f9a0:	1000131e 	bne	r2,zero,4f9f0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4f9a4:	0001883a 	nop
   4f9a8:	e0bff817 	ldw	r2,-32(fp)
   4f9ac:	10800a17 	ldw	r2,40(r2)
   4f9b0:	e0fffd17 	ldw	r3,-12(fp)
   4f9b4:	1880051e 	bne	r3,r2,4f9cc <altera_avalon_jtag_uart_read+0x138>
   4f9b8:	e0bff817 	ldw	r2,-32(fp)
   4f9bc:	10c00917 	ldw	r3,36(r2)
   4f9c0:	e0bff817 	ldw	r2,-32(fp)
   4f9c4:	10800117 	ldw	r2,4(r2)
   4f9c8:	18bff736 	bltu	r3,r2,4f9a8 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4f9cc:	e0bff817 	ldw	r2,-32(fp)
   4f9d0:	10800a17 	ldw	r2,40(r2)
   4f9d4:	e0fffd17 	ldw	r3,-12(fp)
   4f9d8:	18800726 	beq	r3,r2,4f9f8 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   4f9dc:	e0bff617 	ldw	r2,-40(fp)
   4f9e0:	00bfb716 	blt	zero,r2,4f8c0 <altera_avalon_jtag_uart_read+0x2c>
   4f9e4:	00000506 	br	4f9fc <altera_avalon_jtag_uart_read+0x168>
      break;
   4f9e8:	0001883a 	nop
   4f9ec:	00000306 	br	4f9fc <altera_avalon_jtag_uart_read+0x168>
      break;
   4f9f0:	0001883a 	nop
   4f9f4:	00000106 	br	4f9fc <altera_avalon_jtag_uart_read+0x168>
      break;
   4f9f8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4f9fc:	e0ffff17 	ldw	r3,-4(fp)
   4fa00:	e0bff717 	ldw	r2,-36(fp)
   4fa04:	18801926 	beq	r3,r2,4fa6c <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   4fa08:	0005303a 	rdctl	r2,status
   4fa0c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4fa10:	e0fff917 	ldw	r3,-28(fp)
   4fa14:	00bfff84 	movi	r2,-2
   4fa18:	1884703a 	and	r2,r3,r2
   4fa1c:	1001703a 	wrctl	status,r2
  return context;
   4fa20:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4fa24:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4fa28:	e0bff817 	ldw	r2,-32(fp)
   4fa2c:	10800817 	ldw	r2,32(r2)
   4fa30:	10c00054 	ori	r3,r2,1
   4fa34:	e0bff817 	ldw	r2,-32(fp)
   4fa38:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4fa3c:	e0bff817 	ldw	r2,-32(fp)
   4fa40:	10800017 	ldw	r2,0(r2)
   4fa44:	10800104 	addi	r2,r2,4
   4fa48:	1007883a 	mov	r3,r2
   4fa4c:	e0bff817 	ldw	r2,-32(fp)
   4fa50:	10800817 	ldw	r2,32(r2)
   4fa54:	18800035 	stwio	r2,0(r3)
   4fa58:	e0bffb17 	ldw	r2,-20(fp)
   4fa5c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   4fa60:	e0bffa17 	ldw	r2,-24(fp)
   4fa64:	1001703a 	wrctl	status,r2
}
   4fa68:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4fa6c:	e0ffff17 	ldw	r3,-4(fp)
   4fa70:	e0bff717 	ldw	r2,-36(fp)
   4fa74:	18800426 	beq	r3,r2,4fa88 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   4fa78:	e0ffff17 	ldw	r3,-4(fp)
   4fa7c:	e0bff717 	ldw	r2,-36(fp)
   4fa80:	1885c83a 	sub	r2,r3,r2
   4fa84:	00000606 	br	4faa0 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   4fa88:	e0bff517 	ldw	r2,-44(fp)
   4fa8c:	1090000c 	andi	r2,r2,16384
   4fa90:	10000226 	beq	r2,zero,4fa9c <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   4fa94:	00bffd44 	movi	r2,-11
   4fa98:	00000106 	br	4faa0 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   4fa9c:	00bffec4 	movi	r2,-5
}
   4faa0:	e037883a 	mov	sp,fp
   4faa4:	dfc00117 	ldw	ra,4(sp)
   4faa8:	df000017 	ldw	fp,0(sp)
   4faac:	dec00204 	addi	sp,sp,8
   4fab0:	f800283a 	ret

0004fab4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4fab4:	defff304 	addi	sp,sp,-52
   4fab8:	dfc00c15 	stw	ra,48(sp)
   4fabc:	df000b15 	stw	fp,44(sp)
   4fac0:	df000b04 	addi	fp,sp,44
   4fac4:	e13ff815 	stw	r4,-32(fp)
   4fac8:	e17ff715 	stw	r5,-36(fp)
   4facc:	e1bff615 	stw	r6,-40(fp)
   4fad0:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4fad4:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4fad8:	e0bff717 	ldw	r2,-36(fp)
   4fadc:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4fae0:	00003706 	br	4fbc0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4fae4:	e0bff817 	ldw	r2,-32(fp)
   4fae8:	10800c17 	ldw	r2,48(r2)
   4faec:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   4faf0:	e0bff817 	ldw	r2,-32(fp)
   4faf4:	10800d17 	ldw	r2,52(r2)
   4faf8:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   4fafc:	e0fffc17 	ldw	r3,-16(fp)
   4fb00:	e0bfff17 	ldw	r2,-4(fp)
   4fb04:	1880062e 	bgeu	r3,r2,4fb20 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4fb08:	e0ffff17 	ldw	r3,-4(fp)
   4fb0c:	e0bffc17 	ldw	r2,-16(fp)
   4fb10:	1885c83a 	sub	r2,r3,r2
   4fb14:	10bfffc4 	addi	r2,r2,-1
   4fb18:	e0bffe15 	stw	r2,-8(fp)
   4fb1c:	00000b06 	br	4fb4c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4fb20:	e0bfff17 	ldw	r2,-4(fp)
   4fb24:	10000526 	beq	r2,zero,4fb3c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4fb28:	00c20004 	movi	r3,2048
   4fb2c:	e0bffc17 	ldw	r2,-16(fp)
   4fb30:	1885c83a 	sub	r2,r3,r2
   4fb34:	e0bffe15 	stw	r2,-8(fp)
   4fb38:	00000406 	br	4fb4c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4fb3c:	00c1ffc4 	movi	r3,2047
   4fb40:	e0bffc17 	ldw	r2,-16(fp)
   4fb44:	1885c83a 	sub	r2,r3,r2
   4fb48:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   4fb4c:	e0bffe17 	ldw	r2,-8(fp)
   4fb50:	10001e26 	beq	r2,zero,4fbcc <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4fb54:	e0fff617 	ldw	r3,-40(fp)
   4fb58:	e0bffe17 	ldw	r2,-8(fp)
   4fb5c:	1880022e 	bgeu	r3,r2,4fb68 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4fb60:	e0bff617 	ldw	r2,-40(fp)
   4fb64:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4fb68:	e0bff817 	ldw	r2,-32(fp)
   4fb6c:	10c20e04 	addi	r3,r2,2104
   4fb70:	e0bffc17 	ldw	r2,-16(fp)
   4fb74:	1885883a 	add	r2,r3,r2
   4fb78:	e1bffe17 	ldw	r6,-8(fp)
   4fb7c:	e17ff717 	ldw	r5,-36(fp)
   4fb80:	1009883a 	mov	r4,r2
   4fb84:	00472200 	call	47220 <memcpy>
      ptr   += n;
   4fb88:	e0fff717 	ldw	r3,-36(fp)
   4fb8c:	e0bffe17 	ldw	r2,-8(fp)
   4fb90:	1885883a 	add	r2,r3,r2
   4fb94:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   4fb98:	e0fff617 	ldw	r3,-40(fp)
   4fb9c:	e0bffe17 	ldw	r2,-8(fp)
   4fba0:	1885c83a 	sub	r2,r3,r2
   4fba4:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4fba8:	e0fffc17 	ldw	r3,-16(fp)
   4fbac:	e0bffe17 	ldw	r2,-8(fp)
   4fbb0:	1885883a 	add	r2,r3,r2
   4fbb4:	10c1ffcc 	andi	r3,r2,2047
   4fbb8:	e0bff817 	ldw	r2,-32(fp)
   4fbbc:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   4fbc0:	e0bff617 	ldw	r2,-40(fp)
   4fbc4:	00bfc716 	blt	zero,r2,4fae4 <altera_avalon_jtag_uart_write+0x30>
   4fbc8:	00000106 	br	4fbd0 <altera_avalon_jtag_uart_write+0x11c>
        break;
   4fbcc:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   4fbd0:	0005303a 	rdctl	r2,status
   4fbd4:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4fbd8:	e0fff917 	ldw	r3,-28(fp)
   4fbdc:	00bfff84 	movi	r2,-2
   4fbe0:	1884703a 	and	r2,r3,r2
   4fbe4:	1001703a 	wrctl	status,r2
  return context;
   4fbe8:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4fbec:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4fbf0:	e0bff817 	ldw	r2,-32(fp)
   4fbf4:	10800817 	ldw	r2,32(r2)
   4fbf8:	10c00094 	ori	r3,r2,2
   4fbfc:	e0bff817 	ldw	r2,-32(fp)
   4fc00:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4fc04:	e0bff817 	ldw	r2,-32(fp)
   4fc08:	10800017 	ldw	r2,0(r2)
   4fc0c:	10800104 	addi	r2,r2,4
   4fc10:	1007883a 	mov	r3,r2
   4fc14:	e0bff817 	ldw	r2,-32(fp)
   4fc18:	10800817 	ldw	r2,32(r2)
   4fc1c:	18800035 	stwio	r2,0(r3)
   4fc20:	e0bffb17 	ldw	r2,-20(fp)
   4fc24:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   4fc28:	e0bffa17 	ldw	r2,-24(fp)
   4fc2c:	1001703a 	wrctl	status,r2
}
   4fc30:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4fc34:	e0bff617 	ldw	r2,-40(fp)
   4fc38:	0080100e 	bge	zero,r2,4fc7c <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   4fc3c:	e0bff517 	ldw	r2,-44(fp)
   4fc40:	1090000c 	andi	r2,r2,16384
   4fc44:	1000101e 	bne	r2,zero,4fc88 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4fc48:	0001883a 	nop
   4fc4c:	e0bff817 	ldw	r2,-32(fp)
   4fc50:	10800d17 	ldw	r2,52(r2)
   4fc54:	e0ffff17 	ldw	r3,-4(fp)
   4fc58:	1880051e 	bne	r3,r2,4fc70 <altera_avalon_jtag_uart_write+0x1bc>
   4fc5c:	e0bff817 	ldw	r2,-32(fp)
   4fc60:	10c00917 	ldw	r3,36(r2)
   4fc64:	e0bff817 	ldw	r2,-32(fp)
   4fc68:	10800117 	ldw	r2,4(r2)
   4fc6c:	18bff736 	bltu	r3,r2,4fc4c <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4fc70:	e0bff817 	ldw	r2,-32(fp)
   4fc74:	10800917 	ldw	r2,36(r2)
   4fc78:	1000051e 	bne	r2,zero,4fc90 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   4fc7c:	e0bff617 	ldw	r2,-40(fp)
   4fc80:	00bfcf16 	blt	zero,r2,4fbc0 <altera_avalon_jtag_uart_write+0x10c>
   4fc84:	00000306 	br	4fc94 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   4fc88:	0001883a 	nop
   4fc8c:	00000106 	br	4fc94 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   4fc90:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4fc94:	e0fff717 	ldw	r3,-36(fp)
   4fc98:	e0bffd17 	ldw	r2,-12(fp)
   4fc9c:	18800426 	beq	r3,r2,4fcb0 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   4fca0:	e0fff717 	ldw	r3,-36(fp)
   4fca4:	e0bffd17 	ldw	r2,-12(fp)
   4fca8:	1885c83a 	sub	r2,r3,r2
   4fcac:	00000606 	br	4fcc8 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   4fcb0:	e0bff517 	ldw	r2,-44(fp)
   4fcb4:	1090000c 	andi	r2,r2,16384
   4fcb8:	10000226 	beq	r2,zero,4fcc4 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   4fcbc:	00bffd44 	movi	r2,-11
   4fcc0:	00000106 	br	4fcc8 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4fcc4:	00bffec4 	movi	r2,-5
}
   4fcc8:	e037883a 	mov	sp,fp
   4fccc:	dfc00117 	ldw	ra,4(sp)
   4fcd0:	df000017 	ldw	fp,0(sp)
   4fcd4:	dec00204 	addi	sp,sp,8
   4fcd8:	f800283a 	ret

0004fcdc <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   4fcdc:	defff904 	addi	sp,sp,-28
   4fce0:	dfc00615 	stw	ra,24(sp)
   4fce4:	df000515 	stw	fp,20(sp)
   4fce8:	df000504 	addi	fp,sp,20
   4fcec:	e13ffc15 	stw	r4,-16(fp)
   4fcf0:	e17ffb15 	stw	r5,-20(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   4fcf4:	0007883a 	mov	r3,zero
   4fcf8:	e0bffc17 	ldw	r2,-16(fp)
   4fcfc:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   4fd00:	e0bffc17 	ldw	r2,-16(fp)
   4fd04:	10800104 	addi	r2,r2,4
   4fd08:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
   4fd0c:	0005303a 	rdctl	r2,status
   4fd10:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4fd14:	e0fffd17 	ldw	r3,-12(fp)
   4fd18:	00bfff84 	movi	r2,-2
   4fd1c:	1884703a 	and	r2,r3,r2
   4fd20:	1001703a 	wrctl	status,r2
  return context;
   4fd24:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   4fd28:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
   4fd2c:	0050a880 	call	50a88 <alt_tick>
   4fd30:	e0bfff17 	ldw	r2,-4(fp)
   4fd34:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   4fd38:	e0bffe17 	ldw	r2,-8(fp)
   4fd3c:	1001703a 	wrctl	status,r2
}
   4fd40:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
   4fd44:	0001883a 	nop
   4fd48:	e037883a 	mov	sp,fp
   4fd4c:	dfc00117 	ldw	ra,4(sp)
   4fd50:	df000017 	ldw	fp,0(sp)
   4fd54:	dec00204 	addi	sp,sp,8
   4fd58:	f800283a 	ret

0004fd5c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   4fd5c:	defff904 	addi	sp,sp,-28
   4fd60:	dfc00615 	stw	ra,24(sp)
   4fd64:	df000515 	stw	fp,20(sp)
   4fd68:	df000504 	addi	fp,sp,20
   4fd6c:	e13ffe15 	stw	r4,-8(fp)
   4fd70:	e17ffd15 	stw	r5,-12(fp)
   4fd74:	e1bffc15 	stw	r6,-16(fp)
   4fd78:	e1fffb15 	stw	r7,-20(fp)
   4fd7c:	e0bffb17 	ldw	r2,-20(fp)
   4fd80:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   4fd84:	d0a71817 	ldw	r2,-25504(gp)
   4fd88:	1000031e 	bne	r2,zero,4fd98 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
   4fd8c:	e0bfff17 	ldw	r2,-4(fp)
   4fd90:	d0a71815 	stw	r2,-25504(gp)
    return 0;
   4fd94:	00000106 	br	4fd9c <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
   4fd98:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   4fd9c:	e0bffe17 	ldw	r2,-8(fp)
   4fda0:	10800104 	addi	r2,r2,4
   4fda4:	00c001c4 	movi	r3,7
   4fda8:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   4fdac:	01800174 	movhi	r6,5
   4fdb0:	31bf3704 	addi	r6,r6,-804
   4fdb4:	e17ffe17 	ldw	r5,-8(fp)
   4fdb8:	e13ffc17 	ldw	r4,-16(fp)
   4fdbc:	00508640 	call	50864 <alt_irq_register>
#endif  
}
   4fdc0:	0001883a 	nop
   4fdc4:	e037883a 	mov	sp,fp
   4fdc8:	dfc00117 	ldw	ra,4(sp)
   4fdcc:	df000017 	ldw	fp,0(sp)
   4fdd0:	dec00204 	addi	sp,sp,8
   4fdd4:	f800283a 	ret

0004fdd8 <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
   4fdd8:	defffc04 	addi	sp,sp,-16
   4fddc:	dfc00315 	stw	ra,12(sp)
   4fde0:	df000215 	stw	fp,8(sp)
   4fde4:	df000204 	addi	fp,sp,8
   4fde8:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   4fdec:	d1600604 	addi	r5,gp,-32744
   4fdf0:	e13ffe17 	ldw	r4,-8(fp)
   4fdf4:	00504a40 	call	504a4 <alt_find_dev>
   4fdf8:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   4fdfc:	e0bfff17 	ldw	r2,-4(fp)
}
   4fe00:	e037883a 	mov	sp,fp
   4fe04:	dfc00117 	ldw	ra,4(sp)
   4fe08:	df000017 	ldw	fp,0(sp)
   4fe0c:	dec00204 	addi	sp,sp,8
   4fe10:	f800283a 	ret

0004fe14 <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
   4fe14:	defffd04 	addi	sp,sp,-12
   4fe18:	df000215 	stw	fp,8(sp)
   4fe1c:	df000204 	addi	fp,sp,8
   4fe20:	e13fff15 	stw	r4,-4(fp)
   4fe24:	e17ffe15 	stw	r5,-8(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   4fe28:	e0bfff17 	ldw	r2,-4(fp)
   4fe2c:	10800a17 	ldw	r2,40(r2)
   4fe30:	10800023 	ldbuio	r2,0(r2)
   4fe34:	10803fcc 	andi	r2,r2,255
   4fe38:	1007883a 	mov	r3,r2
   4fe3c:	e0bffe17 	ldw	r2,-8(fp)
   4fe40:	10c00005 	stb	r3,0(r2)

	return 0;
   4fe44:	0005883a 	mov	r2,zero
}
   4fe48:	e037883a 	mov	sp,fp
   4fe4c:	df000017 	ldw	fp,0(sp)
   4fe50:	dec00104 	addi	sp,sp,4
   4fe54:	f800283a 	ret

0004fe58 <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
   4fe58:	defffc04 	addi	sp,sp,-16
   4fe5c:	df000315 	stw	fp,12(sp)
   4fe60:	df000304 	addi	fp,sp,12
   4fe64:	e13fff15 	stw	r4,-4(fp)
   4fe68:	2805883a 	mov	r2,r5
   4fe6c:	e1bffd15 	stw	r6,-12(fp)
   4fe70:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4fe74:	e0bfff17 	ldw	r2,-4(fp)
   4fe78:	10800a17 	ldw	r2,40(r2)
   4fe7c:	1007883a 	mov	r3,r2
   4fe80:	e0bffe03 	ldbu	r2,-8(fp)
   4fe84:	10800fcc 	andi	r2,r2,63
   4fe88:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   4fe8c:	e0bfff17 	ldw	r2,-4(fp)
   4fe90:	10800a17 	ldw	r2,40(r2)
   4fe94:	10800044 	addi	r2,r2,1
   4fe98:	10800023 	ldbuio	r2,0(r2)
   4fe9c:	10803fcc 	andi	r2,r2,255
   4fea0:	1007883a 	mov	r3,r2
   4fea4:	e0bffd17 	ldw	r2,-12(fp)
   4fea8:	10c00005 	stb	r3,0(r2)

	return 0;
   4feac:	0005883a 	mov	r2,zero
}
   4feb0:	e037883a 	mov	sp,fp
   4feb4:	df000017 	ldw	fp,0(sp)
   4feb8:	dec00104 	addi	sp,sp,4
   4febc:	f800283a 	ret

0004fec0 <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
   4fec0:	defffc04 	addi	sp,sp,-16
   4fec4:	df000315 	stw	fp,12(sp)
   4fec8:	df000304 	addi	fp,sp,12
   4fecc:	e13fff15 	stw	r4,-4(fp)
   4fed0:	2805883a 	mov	r2,r5
   4fed4:	3007883a 	mov	r3,r6
   4fed8:	e0bffe05 	stb	r2,-8(fp)
   4fedc:	1805883a 	mov	r2,r3
   4fee0:	e0bffd05 	stb	r2,-12(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4fee4:	e0bfff17 	ldw	r2,-4(fp)
   4fee8:	10800a17 	ldw	r2,40(r2)
   4feec:	1007883a 	mov	r3,r2
   4fef0:	e0bffe03 	ldbu	r2,-8(fp)
   4fef4:	10800fcc 	andi	r2,r2,63
   4fef8:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   4fefc:	e0bfff17 	ldw	r2,-4(fp)
   4ff00:	10800a17 	ldw	r2,40(r2)
   4ff04:	10800044 	addi	r2,r2,1
   4ff08:	1007883a 	mov	r3,r2
   4ff0c:	e0bffd03 	ldbu	r2,-12(fp)
   4ff10:	18800025 	stbio	r2,0(r3)

	return 0;
   4ff14:	0005883a 	mov	r2,zero
}
   4ff18:	e037883a 	mov	sp,fp
   4ff1c:	df000017 	ldw	fp,0(sp)
   4ff20:	dec00104 	addi	sp,sp,4
   4ff24:	f800283a 	ret

0004ff28 <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
   4ff28:	defffd04 	addi	sp,sp,-12
   4ff2c:	df000215 	stw	fp,8(sp)
   4ff30:	df000204 	addi	fp,sp,8
   4ff34:	e13fff15 	stw	r4,-4(fp)
   4ff38:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4ff3c:	e0bfff17 	ldw	r2,-4(fp)
   4ff40:	10800a17 	ldw	r2,40(r2)
   4ff44:	1007883a 	mov	r3,r2
   4ff48:	00800c84 	movi	r2,50
   4ff4c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   4ff50:	e0bfff17 	ldw	r2,-4(fp)
   4ff54:	10800a17 	ldw	r2,40(r2)
   4ff58:	10800044 	addi	r2,r2,1
   4ff5c:	10800023 	ldbuio	r2,0(r2)
   4ff60:	10803fcc 	andi	r2,r2,255
   4ff64:	10ffffcc 	andi	r3,r2,65535
   4ff68:	e0bffe17 	ldw	r2,-8(fp)
   4ff6c:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4ff70:	e0bfff17 	ldw	r2,-4(fp)
   4ff74:	10800a17 	ldw	r2,40(r2)
   4ff78:	1007883a 	mov	r3,r2
   4ff7c:	00800cc4 	movi	r2,51
   4ff80:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   4ff84:	e0bfff17 	ldw	r2,-4(fp)
   4ff88:	10800a17 	ldw	r2,40(r2)
   4ff8c:	10800044 	addi	r2,r2,1
   4ff90:	10800023 	ldbuio	r2,0(r2)
   4ff94:	10803fcc 	andi	r2,r2,255
   4ff98:	1006923a 	slli	r3,r2,8
   4ff9c:	00804034 	movhi	r2,256
   4ffa0:	10bfc004 	addi	r2,r2,-256
   4ffa4:	1884703a 	and	r2,r3,r2
   4ffa8:	e0fffe17 	ldw	r3,-8(fp)
   4ffac:	18c00017 	ldw	r3,0(r3)
   4ffb0:	10c5883a 	add	r2,r2,r3
   4ffb4:	1007883a 	mov	r3,r2
   4ffb8:	e0bffe17 	ldw	r2,-8(fp)
   4ffbc:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
   4ffc0:	e0bffe17 	ldw	r2,-8(fp)
   4ffc4:	10800017 	ldw	r2,0(r2)
   4ffc8:	10a0000c 	andi	r2,r2,32768
   4ffcc:	10000626 	beq	r2,zero,4ffe8 <alt_up_accelerometer_spi_read_x_axis+0xc0>
	{
		*(x_axis) |= 0xFFFF0000;
   4ffd0:	e0bffe17 	ldw	r2,-8(fp)
   4ffd4:	10800017 	ldw	r2,0(r2)
   4ffd8:	10bffff4 	orhi	r2,r2,65535
   4ffdc:	1007883a 	mov	r3,r2
   4ffe0:	e0bffe17 	ldw	r2,-8(fp)
   4ffe4:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   4ffe8:	0005883a 	mov	r2,zero
}
   4ffec:	e037883a 	mov	sp,fp
   4fff0:	df000017 	ldw	fp,0(sp)
   4fff4:	dec00104 	addi	sp,sp,4
   4fff8:	f800283a 	ret

0004fffc <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
   4fffc:	defffd04 	addi	sp,sp,-12
   50000:	df000215 	stw	fp,8(sp)
   50004:	df000204 	addi	fp,sp,8
   50008:	e13fff15 	stw	r4,-4(fp)
   5000c:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   50010:	e0bfff17 	ldw	r2,-4(fp)
   50014:	10800a17 	ldw	r2,40(r2)
   50018:	1007883a 	mov	r3,r2
   5001c:	00800d04 	movi	r2,52
   50020:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   50024:	e0bfff17 	ldw	r2,-4(fp)
   50028:	10800a17 	ldw	r2,40(r2)
   5002c:	10800044 	addi	r2,r2,1
   50030:	10800023 	ldbuio	r2,0(r2)
   50034:	10803fcc 	andi	r2,r2,255
   50038:	10ffffcc 	andi	r3,r2,65535
   5003c:	e0bffe17 	ldw	r2,-8(fp)
   50040:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   50044:	e0bfff17 	ldw	r2,-4(fp)
   50048:	10800a17 	ldw	r2,40(r2)
   5004c:	1007883a 	mov	r3,r2
   50050:	00800d44 	movi	r2,53
   50054:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   50058:	e0bfff17 	ldw	r2,-4(fp)
   5005c:	10800a17 	ldw	r2,40(r2)
   50060:	10800044 	addi	r2,r2,1
   50064:	10800023 	ldbuio	r2,0(r2)
   50068:	10803fcc 	andi	r2,r2,255
   5006c:	1006923a 	slli	r3,r2,8
   50070:	00804034 	movhi	r2,256
   50074:	10bfc004 	addi	r2,r2,-256
   50078:	1884703a 	and	r2,r3,r2
   5007c:	e0fffe17 	ldw	r3,-8(fp)
   50080:	18c00017 	ldw	r3,0(r3)
   50084:	10c5883a 	add	r2,r2,r3
   50088:	1007883a 	mov	r3,r2
   5008c:	e0bffe17 	ldw	r2,-8(fp)
   50090:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
   50094:	e0bffe17 	ldw	r2,-8(fp)
   50098:	10800017 	ldw	r2,0(r2)
   5009c:	10a0000c 	andi	r2,r2,32768
   500a0:	10000626 	beq	r2,zero,500bc <alt_up_accelerometer_spi_read_y_axis+0xc0>
	{
		*(y_axis) |= 0xFFFF0000;
   500a4:	e0bffe17 	ldw	r2,-8(fp)
   500a8:	10800017 	ldw	r2,0(r2)
   500ac:	10bffff4 	orhi	r2,r2,65535
   500b0:	1007883a 	mov	r3,r2
   500b4:	e0bffe17 	ldw	r2,-8(fp)
   500b8:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   500bc:	0005883a 	mov	r2,zero
}
   500c0:	e037883a 	mov	sp,fp
   500c4:	df000017 	ldw	fp,0(sp)
   500c8:	dec00104 	addi	sp,sp,4
   500cc:	f800283a 	ret

000500d0 <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
   500d0:	defffd04 	addi	sp,sp,-12
   500d4:	df000215 	stw	fp,8(sp)
   500d8:	df000204 	addi	fp,sp,8
   500dc:	e13fff15 	stw	r4,-4(fp)
   500e0:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   500e4:	e0bfff17 	ldw	r2,-4(fp)
   500e8:	10800a17 	ldw	r2,40(r2)
   500ec:	1007883a 	mov	r3,r2
   500f0:	00800d84 	movi	r2,54
   500f4:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   500f8:	e0bfff17 	ldw	r2,-4(fp)
   500fc:	10800a17 	ldw	r2,40(r2)
   50100:	10800044 	addi	r2,r2,1
   50104:	10800023 	ldbuio	r2,0(r2)
   50108:	10803fcc 	andi	r2,r2,255
   5010c:	10ffffcc 	andi	r3,r2,65535
   50110:	e0bffe17 	ldw	r2,-8(fp)
   50114:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   50118:	e0bfff17 	ldw	r2,-4(fp)
   5011c:	10800a17 	ldw	r2,40(r2)
   50120:	1007883a 	mov	r3,r2
   50124:	00800dc4 	movi	r2,55
   50128:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   5012c:	e0bfff17 	ldw	r2,-4(fp)
   50130:	10800a17 	ldw	r2,40(r2)
   50134:	10800044 	addi	r2,r2,1
   50138:	10800023 	ldbuio	r2,0(r2)
   5013c:	10803fcc 	andi	r2,r2,255
   50140:	1006923a 	slli	r3,r2,8
   50144:	00804034 	movhi	r2,256
   50148:	10bfc004 	addi	r2,r2,-256
   5014c:	1884703a 	and	r2,r3,r2
   50150:	e0fffe17 	ldw	r3,-8(fp)
   50154:	18c00017 	ldw	r3,0(r3)
   50158:	10c5883a 	add	r2,r2,r3
   5015c:	1007883a 	mov	r3,r2
   50160:	e0bffe17 	ldw	r2,-8(fp)
   50164:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
   50168:	e0bffe17 	ldw	r2,-8(fp)
   5016c:	10800017 	ldw	r2,0(r2)
   50170:	10a0000c 	andi	r2,r2,32768
   50174:	10000626 	beq	r2,zero,50190 <alt_up_accelerometer_spi_read_z_axis+0xc0>
	{
		*(z_axis) |= 0xFFFF0000;
   50178:	e0bffe17 	ldw	r2,-8(fp)
   5017c:	10800017 	ldw	r2,0(r2)
   50180:	10bffff4 	orhi	r2,r2,65535
   50184:	1007883a 	mov	r3,r2
   50188:	e0bffe17 	ldw	r2,-8(fp)
   5018c:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   50190:	0005883a 	mov	r2,zero
}
   50194:	e037883a 	mov	sp,fp
   50198:	df000017 	ldw	fp,0(sp)
   5019c:	dec00104 	addi	sp,sp,4
   501a0:	f800283a 	ret

000501a4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   501a4:	defff504 	addi	sp,sp,-44
   501a8:	df000a15 	stw	fp,40(sp)
   501ac:	df000a04 	addi	fp,sp,40
   501b0:	e13ff915 	stw	r4,-28(fp)
   501b4:	e17ff815 	stw	r5,-32(fp)
   501b8:	e1bff715 	stw	r6,-36(fp)
   501bc:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   501c0:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
   501c4:	d0a71817 	ldw	r2,-25504(gp)
  
  if (alt_ticks_per_second ())
   501c8:	10003e26 	beq	r2,zero,502c4 <alt_alarm_start+0x120>
  {
    if (alarm)
   501cc:	e0bff917 	ldw	r2,-28(fp)
   501d0:	10003a26 	beq	r2,zero,502bc <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
   501d4:	e0bff917 	ldw	r2,-28(fp)
   501d8:	e0fff717 	ldw	r3,-36(fp)
   501dc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   501e0:	e0bff917 	ldw	r2,-28(fp)
   501e4:	e0fff617 	ldw	r3,-40(fp)
   501e8:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   501ec:	0005303a 	rdctl	r2,status
   501f0:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   501f4:	e0fffd17 	ldw	r3,-12(fp)
   501f8:	00bfff84 	movi	r2,-2
   501fc:	1884703a 	and	r2,r3,r2
   50200:	1001703a 	wrctl	status,r2
  return context;
   50204:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
   50208:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   5020c:	d0a71917 	ldw	r2,-25500(gp)
      
      current_nticks = alt_nticks();
   50210:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   50214:	e0fff817 	ldw	r3,-32(fp)
   50218:	e0bfff17 	ldw	r2,-4(fp)
   5021c:	1885883a 	add	r2,r3,r2
   50220:	10c00044 	addi	r3,r2,1
   50224:	e0bff917 	ldw	r2,-28(fp)
   50228:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   5022c:	e0bff917 	ldw	r2,-28(fp)
   50230:	10c00217 	ldw	r3,8(r2)
   50234:	e0bfff17 	ldw	r2,-4(fp)
   50238:	1880042e 	bgeu	r3,r2,5024c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   5023c:	e0bff917 	ldw	r2,-28(fp)
   50240:	00c00044 	movi	r3,1
   50244:	10c00405 	stb	r3,16(r2)
   50248:	00000206 	br	50254 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   5024c:	e0bff917 	ldw	r2,-28(fp)
   50250:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   50254:	e0bff917 	ldw	r2,-28(fp)
   50258:	d0e00c04 	addi	r3,gp,-32720
   5025c:	e0fffb15 	stw	r3,-20(fp)
   50260:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   50264:	e0bffa17 	ldw	r2,-24(fp)
   50268:	e0fffb17 	ldw	r3,-20(fp)
   5026c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   50270:	e0bffb17 	ldw	r2,-20(fp)
   50274:	10c00017 	ldw	r3,0(r2)
   50278:	e0bffa17 	ldw	r2,-24(fp)
   5027c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   50280:	e0bffb17 	ldw	r2,-20(fp)
   50284:	10800017 	ldw	r2,0(r2)
   50288:	e0fffa17 	ldw	r3,-24(fp)
   5028c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   50290:	e0bffb17 	ldw	r2,-20(fp)
   50294:	e0fffa17 	ldw	r3,-24(fp)
   50298:	10c00015 	stw	r3,0(r2)
}
   5029c:	0001883a 	nop
   502a0:	e0bffe17 	ldw	r2,-8(fp)
   502a4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   502a8:	e0bffc17 	ldw	r2,-16(fp)
   502ac:	1001703a 	wrctl	status,r2
}
   502b0:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   502b4:	0005883a 	mov	r2,zero
   502b8:	00000306 	br	502c8 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
   502bc:	00bffa84 	movi	r2,-22
   502c0:	00000106 	br	502c8 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
   502c4:	00bfde84 	movi	r2,-134
  }
}
   502c8:	e037883a 	mov	sp,fp
   502cc:	df000017 	ldw	fp,0(sp)
   502d0:	dec00104 	addi	sp,sp,4
   502d4:	f800283a 	ret

000502d8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   502d8:	deffff04 	addi	sp,sp,-4
   502dc:	df000015 	stw	fp,0(sp)
   502e0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   502e4:	0001883a 	nop
   502e8:	e037883a 	mov	sp,fp
   502ec:	df000017 	ldw	fp,0(sp)
   502f0:	dec00104 	addi	sp,sp,4
   502f4:	f800283a 	ret

000502f8 <alt_get_errno>:
{
   502f8:	defffe04 	addi	sp,sp,-8
   502fc:	dfc00115 	stw	ra,4(sp)
   50300:	df000015 	stw	fp,0(sp)
   50304:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50308:	d0a00917 	ldw	r2,-32732(gp)
   5030c:	10000326 	beq	r2,zero,5031c <alt_get_errno+0x24>
   50310:	d0a00917 	ldw	r2,-32732(gp)
   50314:	103ee83a 	callr	r2
   50318:	00000106 	br	50320 <alt_get_errno+0x28>
   5031c:	d0a70f04 	addi	r2,gp,-25540
}
   50320:	e037883a 	mov	sp,fp
   50324:	dfc00117 	ldw	ra,4(sp)
   50328:	df000017 	ldw	fp,0(sp)
   5032c:	dec00204 	addi	sp,sp,8
   50330:	f800283a 	ret

00050334 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   50334:	defffa04 	addi	sp,sp,-24
   50338:	dfc00515 	stw	ra,20(sp)
   5033c:	df000415 	stw	fp,16(sp)
   50340:	df000404 	addi	fp,sp,16
   50344:	e13ffd15 	stw	r4,-12(fp)
   50348:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   5034c:	e0bffd17 	ldw	r2,-12(fp)
   50350:	10000326 	beq	r2,zero,50360 <alt_dev_llist_insert+0x2c>
   50354:	e0bffd17 	ldw	r2,-12(fp)
   50358:	10800217 	ldw	r2,8(r2)
   5035c:	1000061e 	bne	r2,zero,50378 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   50360:	00502f80 	call	502f8 <alt_get_errno>
   50364:	1007883a 	mov	r3,r2
   50368:	00800584 	movi	r2,22
   5036c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   50370:	00bffa84 	movi	r2,-22
   50374:	00001406 	br	503c8 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   50378:	e0bffd17 	ldw	r2,-12(fp)
   5037c:	e0fffc17 	ldw	r3,-16(fp)
   50380:	e0ffff15 	stw	r3,-4(fp)
   50384:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   50388:	e0bffe17 	ldw	r2,-8(fp)
   5038c:	e0ffff17 	ldw	r3,-4(fp)
   50390:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   50394:	e0bfff17 	ldw	r2,-4(fp)
   50398:	10c00017 	ldw	r3,0(r2)
   5039c:	e0bffe17 	ldw	r2,-8(fp)
   503a0:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   503a4:	e0bfff17 	ldw	r2,-4(fp)
   503a8:	10800017 	ldw	r2,0(r2)
   503ac:	e0fffe17 	ldw	r3,-8(fp)
   503b0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   503b4:	e0bfff17 	ldw	r2,-4(fp)
   503b8:	e0fffe17 	ldw	r3,-8(fp)
   503bc:	10c00015 	stw	r3,0(r2)
}
   503c0:	0001883a 	nop

  return 0;  
   503c4:	0005883a 	mov	r2,zero
}
   503c8:	e037883a 	mov	sp,fp
   503cc:	dfc00117 	ldw	ra,4(sp)
   503d0:	df000017 	ldw	fp,0(sp)
   503d4:	dec00204 	addi	sp,sp,8
   503d8:	f800283a 	ret

000503dc <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   503dc:	defffd04 	addi	sp,sp,-12
   503e0:	dfc00215 	stw	ra,8(sp)
   503e4:	df000115 	stw	fp,4(sp)
   503e8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   503ec:	00800174 	movhi	r2,5
   503f0:	1083ae04 	addi	r2,r2,3768
   503f4:	e0bfff15 	stw	r2,-4(fp)
   503f8:	00000606 	br	50414 <_do_ctors+0x38>
        (*ctor) (); 
   503fc:	e0bfff17 	ldw	r2,-4(fp)
   50400:	10800017 	ldw	r2,0(r2)
   50404:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   50408:	e0bfff17 	ldw	r2,-4(fp)
   5040c:	10bfff04 	addi	r2,r2,-4
   50410:	e0bfff15 	stw	r2,-4(fp)
   50414:	e0ffff17 	ldw	r3,-4(fp)
   50418:	00800174 	movhi	r2,5
   5041c:	1083af04 	addi	r2,r2,3772
   50420:	18bff62e 	bgeu	r3,r2,503fc <_do_ctors+0x20>
}
   50424:	0001883a 	nop
   50428:	0001883a 	nop
   5042c:	e037883a 	mov	sp,fp
   50430:	dfc00117 	ldw	ra,4(sp)
   50434:	df000017 	ldw	fp,0(sp)
   50438:	dec00204 	addi	sp,sp,8
   5043c:	f800283a 	ret

00050440 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   50440:	defffd04 	addi	sp,sp,-12
   50444:	dfc00215 	stw	ra,8(sp)
   50448:	df000115 	stw	fp,4(sp)
   5044c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   50450:	00800174 	movhi	r2,5
   50454:	1083ae04 	addi	r2,r2,3768
   50458:	e0bfff15 	stw	r2,-4(fp)
   5045c:	00000606 	br	50478 <_do_dtors+0x38>
        (*dtor) (); 
   50460:	e0bfff17 	ldw	r2,-4(fp)
   50464:	10800017 	ldw	r2,0(r2)
   50468:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   5046c:	e0bfff17 	ldw	r2,-4(fp)
   50470:	10bfff04 	addi	r2,r2,-4
   50474:	e0bfff15 	stw	r2,-4(fp)
   50478:	e0ffff17 	ldw	r3,-4(fp)
   5047c:	00800174 	movhi	r2,5
   50480:	1083af04 	addi	r2,r2,3772
   50484:	18bff62e 	bgeu	r3,r2,50460 <_do_dtors+0x20>
}
   50488:	0001883a 	nop
   5048c:	0001883a 	nop
   50490:	e037883a 	mov	sp,fp
   50494:	dfc00117 	ldw	ra,4(sp)
   50498:	df000017 	ldw	fp,0(sp)
   5049c:	dec00204 	addi	sp,sp,8
   504a0:	f800283a 	ret

000504a4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   504a4:	defffa04 	addi	sp,sp,-24
   504a8:	dfc00515 	stw	ra,20(sp)
   504ac:	df000415 	stw	fp,16(sp)
   504b0:	df000404 	addi	fp,sp,16
   504b4:	e13ffd15 	stw	r4,-12(fp)
   504b8:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   504bc:	e0bffc17 	ldw	r2,-16(fp)
   504c0:	10800017 	ldw	r2,0(r2)
   504c4:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   504c8:	e13ffd17 	ldw	r4,-12(fp)
   504cc:	0042cf40 	call	42cf4 <strlen>
   504d0:	10800044 	addi	r2,r2,1
   504d4:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   504d8:	00000d06 	br	50510 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   504dc:	e0bfff17 	ldw	r2,-4(fp)
   504e0:	10800217 	ldw	r2,8(r2)
   504e4:	e0fffe17 	ldw	r3,-8(fp)
   504e8:	180d883a 	mov	r6,r3
   504ec:	e17ffd17 	ldw	r5,-12(fp)
   504f0:	1009883a 	mov	r4,r2
   504f4:	0050c940 	call	50c94 <memcmp>
   504f8:	1000021e 	bne	r2,zero,50504 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   504fc:	e0bfff17 	ldw	r2,-4(fp)
   50500:	00000706 	br	50520 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   50504:	e0bfff17 	ldw	r2,-4(fp)
   50508:	10800017 	ldw	r2,0(r2)
   5050c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   50510:	e0ffff17 	ldw	r3,-4(fp)
   50514:	e0bffc17 	ldw	r2,-16(fp)
   50518:	18bff01e 	bne	r3,r2,504dc <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   5051c:	0005883a 	mov	r2,zero
}
   50520:	e037883a 	mov	sp,fp
   50524:	dfc00117 	ldw	ra,4(sp)
   50528:	df000017 	ldw	fp,0(sp)
   5052c:	dec00204 	addi	sp,sp,8
   50530:	f800283a 	ret

00050534 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   50534:	defffb04 	addi	sp,sp,-20
   50538:	dfc00415 	stw	ra,16(sp)
   5053c:	df000315 	stw	fp,12(sp)
   50540:	df000304 	addi	fp,sp,12
   50544:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   50548:	d0a00417 	ldw	r2,-32752(gp)
   5054c:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   50550:	00003106 	br	50618 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   50554:	e0bfff17 	ldw	r2,-4(fp)
   50558:	10800217 	ldw	r2,8(r2)
   5055c:	1009883a 	mov	r4,r2
   50560:	0042cf40 	call	42cf4 <strlen>
   50564:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   50568:	e0bfff17 	ldw	r2,-4(fp)
   5056c:	10c00217 	ldw	r3,8(r2)
   50570:	e0bffe17 	ldw	r2,-8(fp)
   50574:	10bfffc4 	addi	r2,r2,-1
   50578:	1885883a 	add	r2,r3,r2
   5057c:	10800003 	ldbu	r2,0(r2)
   50580:	10803fcc 	andi	r2,r2,255
   50584:	1080201c 	xori	r2,r2,128
   50588:	10bfe004 	addi	r2,r2,-128
   5058c:	10800bd8 	cmpnei	r2,r2,47
   50590:	1000031e 	bne	r2,zero,505a0 <alt_find_file+0x6c>
    {
      len -= 1;
   50594:	e0bffe17 	ldw	r2,-8(fp)
   50598:	10bfffc4 	addi	r2,r2,-1
   5059c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   505a0:	e0bffe17 	ldw	r2,-8(fp)
   505a4:	e0fffd17 	ldw	r3,-12(fp)
   505a8:	1885883a 	add	r2,r3,r2
   505ac:	10800003 	ldbu	r2,0(r2)
   505b0:	10803fcc 	andi	r2,r2,255
   505b4:	1080201c 	xori	r2,r2,128
   505b8:	10bfe004 	addi	r2,r2,-128
   505bc:	10800be0 	cmpeqi	r2,r2,47
   505c0:	1000081e 	bne	r2,zero,505e4 <alt_find_file+0xb0>
   505c4:	e0bffe17 	ldw	r2,-8(fp)
   505c8:	e0fffd17 	ldw	r3,-12(fp)
   505cc:	1885883a 	add	r2,r3,r2
   505d0:	10800003 	ldbu	r2,0(r2)
   505d4:	10803fcc 	andi	r2,r2,255
   505d8:	1080201c 	xori	r2,r2,128
   505dc:	10bfe004 	addi	r2,r2,-128
   505e0:	10000a1e 	bne	r2,zero,5060c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   505e4:	e0bfff17 	ldw	r2,-4(fp)
   505e8:	10800217 	ldw	r2,8(r2)
   505ec:	e0fffe17 	ldw	r3,-8(fp)
   505f0:	180d883a 	mov	r6,r3
   505f4:	e17ffd17 	ldw	r5,-12(fp)
   505f8:	1009883a 	mov	r4,r2
   505fc:	0050c940 	call	50c94 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   50600:	1000021e 	bne	r2,zero,5060c <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   50604:	e0bfff17 	ldw	r2,-4(fp)
   50608:	00000706 	br	50628 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   5060c:	e0bfff17 	ldw	r2,-4(fp)
   50610:	10800017 	ldw	r2,0(r2)
   50614:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   50618:	e0ffff17 	ldw	r3,-4(fp)
   5061c:	d0a00404 	addi	r2,gp,-32752
   50620:	18bfcc1e 	bne	r3,r2,50554 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   50624:	0005883a 	mov	r2,zero
}
   50628:	e037883a 	mov	sp,fp
   5062c:	dfc00117 	ldw	ra,4(sp)
   50630:	df000017 	ldw	fp,0(sp)
   50634:	dec00204 	addi	sp,sp,8
   50638:	f800283a 	ret

0005063c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   5063c:	defffc04 	addi	sp,sp,-16
   50640:	df000315 	stw	fp,12(sp)
   50644:	df000304 	addi	fp,sp,12
   50648:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   5064c:	00bffa04 	movi	r2,-24
   50650:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   50654:	e03fff15 	stw	zero,-4(fp)
   50658:	00001d06 	br	506d0 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   5065c:	e0ffff17 	ldw	r3,-4(fp)
   50660:	1805883a 	mov	r2,r3
   50664:	1085883a 	add	r2,r2,r2
   50668:	10c5883a 	add	r2,r2,r3
   5066c:	100490ba 	slli	r2,r2,2
   50670:	00c00174 	movhi	r3,5
   50674:	10c7883a 	add	r3,r2,r3
   50678:	1887df17 	ldw	r2,8060(r3)
   5067c:	1000111e 	bne	r2,zero,506c4 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   50680:	e0ffff17 	ldw	r3,-4(fp)
   50684:	1805883a 	mov	r2,r3
   50688:	1085883a 	add	r2,r2,r2
   5068c:	10c5883a 	add	r2,r2,r3
   50690:	100490ba 	slli	r2,r2,2
   50694:	e13ffd17 	ldw	r4,-12(fp)
   50698:	00c00174 	movhi	r3,5
   5069c:	10c7883a 	add	r3,r2,r3
   506a0:	1907df15 	stw	r4,8060(r3)
      if (i > alt_max_fd)
   506a4:	d0e00817 	ldw	r3,-32736(gp)
   506a8:	e0bfff17 	ldw	r2,-4(fp)
   506ac:	1880020e 	bge	r3,r2,506b8 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   506b0:	e0bfff17 	ldw	r2,-4(fp)
   506b4:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   506b8:	e0bfff17 	ldw	r2,-4(fp)
   506bc:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   506c0:	00000706 	br	506e0 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
   506c4:	e0bfff17 	ldw	r2,-4(fp)
   506c8:	10800044 	addi	r2,r2,1
   506cc:	e0bfff15 	stw	r2,-4(fp)
   506d0:	e0bfff17 	ldw	r2,-4(fp)
   506d4:	10800810 	cmplti	r2,r2,32
   506d8:	103fe01e 	bne	r2,zero,5065c <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   506dc:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   506e0:	e0bffe17 	ldw	r2,-8(fp)
}
   506e4:	e037883a 	mov	sp,fp
   506e8:	df000017 	ldw	fp,0(sp)
   506ec:	dec00104 	addi	sp,sp,4
   506f0:	f800283a 	ret

000506f4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   506f4:	deffff04 	addi	sp,sp,-4
   506f8:	df000015 	stw	fp,0(sp)
   506fc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   50700:	0001883a 	nop
   50704:	e037883a 	mov	sp,fp
   50708:	df000017 	ldw	fp,0(sp)
   5070c:	dec00104 	addi	sp,sp,4
   50710:	f800283a 	ret

00050714 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   50714:	defff904 	addi	sp,sp,-28
   50718:	dfc00615 	stw	ra,24(sp)
   5071c:	df000515 	stw	fp,20(sp)
   50720:	df000504 	addi	fp,sp,20
   50724:	e13ffe15 	stw	r4,-8(fp)
   50728:	e17ffd15 	stw	r5,-12(fp)
   5072c:	e1bffc15 	stw	r6,-16(fp)
   50730:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   50734:	e1bffb17 	ldw	r6,-20(fp)
   50738:	e17ffc17 	ldw	r5,-16(fp)
   5073c:	e13ffd17 	ldw	r4,-12(fp)
   50740:	004ec880 	call	4ec88 <open>
   50744:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   50748:	e0bfff17 	ldw	r2,-4(fp)
   5074c:	10002016 	blt	r2,zero,507d0 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
   50750:	e0ffff17 	ldw	r3,-4(fp)
   50754:	1805883a 	mov	r2,r3
   50758:	1085883a 	add	r2,r2,r2
   5075c:	10c5883a 	add	r2,r2,r3
   50760:	100490ba 	slli	r2,r2,2
   50764:	00c00174 	movhi	r3,5
   50768:	10c7883a 	add	r3,r2,r3
   5076c:	18c7df17 	ldw	r3,8060(r3)
   50770:	e0bffe17 	ldw	r2,-8(fp)
   50774:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   50778:	e0ffff17 	ldw	r3,-4(fp)
   5077c:	1805883a 	mov	r2,r3
   50780:	1085883a 	add	r2,r2,r2
   50784:	10c5883a 	add	r2,r2,r3
   50788:	100490ba 	slli	r2,r2,2
   5078c:	00c00174 	movhi	r3,5
   50790:	10c7883a 	add	r3,r2,r3
   50794:	18c7e017 	ldw	r3,8064(r3)
   50798:	e0bffe17 	ldw	r2,-8(fp)
   5079c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   507a0:	e0ffff17 	ldw	r3,-4(fp)
   507a4:	1805883a 	mov	r2,r3
   507a8:	1085883a 	add	r2,r2,r2
   507ac:	10c5883a 	add	r2,r2,r3
   507b0:	100490ba 	slli	r2,r2,2
   507b4:	00c00174 	movhi	r3,5
   507b8:	10c7883a 	add	r3,r2,r3
   507bc:	18c7e117 	ldw	r3,8068(r3)
   507c0:	e0bffe17 	ldw	r2,-8(fp)
   507c4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   507c8:	e13fff17 	ldw	r4,-4(fp)
   507cc:	004ef2c0 	call	4ef2c <alt_release_fd>
  }
} 
   507d0:	0001883a 	nop
   507d4:	e037883a 	mov	sp,fp
   507d8:	dfc00117 	ldw	ra,4(sp)
   507dc:	df000017 	ldw	fp,0(sp)
   507e0:	dec00204 	addi	sp,sp,8
   507e4:	f800283a 	ret

000507e8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   507e8:	defffb04 	addi	sp,sp,-20
   507ec:	dfc00415 	stw	ra,16(sp)
   507f0:	df000315 	stw	fp,12(sp)
   507f4:	df000304 	addi	fp,sp,12
   507f8:	e13fff15 	stw	r4,-4(fp)
   507fc:	e17ffe15 	stw	r5,-8(fp)
   50800:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   50804:	01c07fc4 	movi	r7,511
   50808:	01800044 	movi	r6,1
   5080c:	e17fff17 	ldw	r5,-4(fp)
   50810:	01000174 	movhi	r4,5
   50814:	2107e204 	addi	r4,r4,8072
   50818:	00507140 	call	50714 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   5081c:	01c07fc4 	movi	r7,511
   50820:	000d883a 	mov	r6,zero
   50824:	e17ffe17 	ldw	r5,-8(fp)
   50828:	01000174 	movhi	r4,5
   5082c:	2107df04 	addi	r4,r4,8060
   50830:	00507140 	call	50714 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   50834:	01c07fc4 	movi	r7,511
   50838:	01800044 	movi	r6,1
   5083c:	e17ffd17 	ldw	r5,-12(fp)
   50840:	01000174 	movhi	r4,5
   50844:	2107e504 	addi	r4,r4,8084
   50848:	00507140 	call	50714 <alt_open_fd>
}  
   5084c:	0001883a 	nop
   50850:	e037883a 	mov	sp,fp
   50854:	dfc00117 	ldw	ra,4(sp)
   50858:	df000017 	ldw	fp,0(sp)
   5085c:	dec00204 	addi	sp,sp,8
   50860:	f800283a 	ret

00050864 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   50864:	defff004 	addi	sp,sp,-64
   50868:	df000f15 	stw	fp,60(sp)
   5086c:	df000f04 	addi	fp,sp,60
   50870:	e13ff315 	stw	r4,-52(fp)
   50874:	e17ff215 	stw	r5,-56(fp)
   50878:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
   5087c:	00bffa84 	movi	r2,-22
   50880:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   50884:	e0bff317 	ldw	r2,-52(fp)
   50888:	10800828 	cmpgeui	r2,r2,32
   5088c:	1000501e 	bne	r2,zero,509d0 <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
   50890:	0005303a 	rdctl	r2,status
   50894:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50898:	e0fffd17 	ldw	r3,-12(fp)
   5089c:	00bfff84 	movi	r2,-2
   508a0:	1884703a 	and	r2,r3,r2
   508a4:	1001703a 	wrctl	status,r2
  return context;
   508a8:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   508ac:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
   508b0:	e0bff317 	ldw	r2,-52(fp)
   508b4:	100890fa 	slli	r4,r2,3
   508b8:	e0fff117 	ldw	r3,-60(fp)
   508bc:	00800174 	movhi	r2,5
   508c0:	2085883a 	add	r2,r4,r2
   508c4:	10d38715 	stw	r3,19996(r2)
    alt_irq[id].context = context;
   508c8:	e0bff317 	ldw	r2,-52(fp)
   508cc:	100890fa 	slli	r4,r2,3
   508d0:	e0fff217 	ldw	r3,-56(fp)
   508d4:	00800174 	movhi	r2,5
   508d8:	2085883a 	add	r2,r4,r2
   508dc:	10d38815 	stw	r3,20000(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   508e0:	e0bff117 	ldw	r2,-60(fp)
   508e4:	10001a26 	beq	r2,zero,50950 <alt_irq_register+0xec>
   508e8:	e0bff317 	ldw	r2,-52(fp)
   508ec:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
   508f0:	0005303a 	rdctl	r2,status
   508f4:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   508f8:	e0fffb17 	ldw	r3,-20(fp)
   508fc:	00bfff84 	movi	r2,-2
   50900:	1884703a 	and	r2,r3,r2
   50904:	1001703a 	wrctl	status,r2
  return context;
   50908:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   5090c:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
   50910:	00c00044 	movi	r3,1
   50914:	e0bffc17 	ldw	r2,-16(fp)
   50918:	1884983a 	sll	r2,r3,r2
   5091c:	1007883a 	mov	r3,r2
   50920:	d0a71717 	ldw	r2,-25508(gp)
   50924:	1884b03a 	or	r2,r3,r2
   50928:	d0a71715 	stw	r2,-25508(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   5092c:	d0a71717 	ldw	r2,-25508(gp)
   50930:	100170fa 	wrctl	ienable,r2
   50934:	e0bffa17 	ldw	r2,-24(fp)
   50938:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
   5093c:	e0bff917 	ldw	r2,-28(fp)
   50940:	1001703a 	wrctl	status,r2
}
   50944:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   50948:	0005883a 	mov	r2,zero
   5094c:	00001a06 	br	509b8 <alt_irq_register+0x154>
   50950:	e0bff317 	ldw	r2,-52(fp)
   50954:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
   50958:	0005303a 	rdctl	r2,status
   5095c:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50960:	e0fff717 	ldw	r3,-36(fp)
   50964:	00bfff84 	movi	r2,-2
   50968:	1884703a 	and	r2,r3,r2
   5096c:	1001703a 	wrctl	status,r2
  return context;
   50970:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
   50974:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
   50978:	00c00044 	movi	r3,1
   5097c:	e0bff817 	ldw	r2,-32(fp)
   50980:	1884983a 	sll	r2,r3,r2
   50984:	0084303a 	nor	r2,zero,r2
   50988:	1007883a 	mov	r3,r2
   5098c:	d0a71717 	ldw	r2,-25508(gp)
   50990:	1884703a 	and	r2,r3,r2
   50994:	d0a71715 	stw	r2,-25508(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   50998:	d0a71717 	ldw	r2,-25508(gp)
   5099c:	100170fa 	wrctl	ienable,r2
   509a0:	e0bff617 	ldw	r2,-40(fp)
   509a4:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
   509a8:	e0bff517 	ldw	r2,-44(fp)
   509ac:	1001703a 	wrctl	status,r2
}
   509b0:	0001883a 	nop
  return 0;
   509b4:	0005883a 	mov	r2,zero
   509b8:	e0bfff15 	stw	r2,-4(fp)
   509bc:	e0bffe17 	ldw	r2,-8(fp)
   509c0:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
   509c4:	e0bff417 	ldw	r2,-48(fp)
   509c8:	1001703a 	wrctl	status,r2
}
   509cc:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
   509d0:	e0bfff17 	ldw	r2,-4(fp)
}
   509d4:	e037883a 	mov	sp,fp
   509d8:	df000017 	ldw	fp,0(sp)
   509dc:	dec00104 	addi	sp,sp,4
   509e0:	f800283a 	ret

000509e4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   509e4:	defffa04 	addi	sp,sp,-24
   509e8:	df000515 	stw	fp,20(sp)
   509ec:	df000504 	addi	fp,sp,20
   509f0:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   509f4:	0005303a 	rdctl	r2,status
   509f8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   509fc:	e0fffc17 	ldw	r3,-16(fp)
   50a00:	00bfff84 	movi	r2,-2
   50a04:	1884703a 	and	r2,r3,r2
   50a08:	1001703a 	wrctl	status,r2
  return context;
   50a0c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   50a10:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   50a14:	e0bffb17 	ldw	r2,-20(fp)
   50a18:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   50a1c:	e0bffd17 	ldw	r2,-12(fp)
   50a20:	10800017 	ldw	r2,0(r2)
   50a24:	e0fffd17 	ldw	r3,-12(fp)
   50a28:	18c00117 	ldw	r3,4(r3)
   50a2c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   50a30:	e0bffd17 	ldw	r2,-12(fp)
   50a34:	10800117 	ldw	r2,4(r2)
   50a38:	e0fffd17 	ldw	r3,-12(fp)
   50a3c:	18c00017 	ldw	r3,0(r3)
   50a40:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   50a44:	e0bffd17 	ldw	r2,-12(fp)
   50a48:	e0fffd17 	ldw	r3,-12(fp)
   50a4c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   50a50:	e0bffd17 	ldw	r2,-12(fp)
   50a54:	e0fffd17 	ldw	r3,-12(fp)
   50a58:	10c00015 	stw	r3,0(r2)
} 
   50a5c:	0001883a 	nop
   50a60:	e0bfff17 	ldw	r2,-4(fp)
   50a64:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   50a68:	e0bffe17 	ldw	r2,-8(fp)
   50a6c:	1001703a 	wrctl	status,r2
}
   50a70:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   50a74:	0001883a 	nop
   50a78:	e037883a 	mov	sp,fp
   50a7c:	df000017 	ldw	fp,0(sp)
   50a80:	dec00104 	addi	sp,sp,4
   50a84:	f800283a 	ret

00050a88 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   50a88:	defffb04 	addi	sp,sp,-20
   50a8c:	dfc00415 	stw	ra,16(sp)
   50a90:	df000315 	stw	fp,12(sp)
   50a94:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   50a98:	d0a00c17 	ldw	r2,-32720(gp)
   50a9c:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   50aa0:	d0a71917 	ldw	r2,-25500(gp)
   50aa4:	10800044 	addi	r2,r2,1
   50aa8:	d0a71915 	stw	r2,-25500(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   50aac:	00002e06 	br	50b68 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   50ab0:	e0bfff17 	ldw	r2,-4(fp)
   50ab4:	10800017 	ldw	r2,0(r2)
   50ab8:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   50abc:	e0bfff17 	ldw	r2,-4(fp)
   50ac0:	10800403 	ldbu	r2,16(r2)
   50ac4:	10803fcc 	andi	r2,r2,255
   50ac8:	10000426 	beq	r2,zero,50adc <alt_tick+0x54>
   50acc:	d0a71917 	ldw	r2,-25500(gp)
   50ad0:	1000021e 	bne	r2,zero,50adc <alt_tick+0x54>
    {
      alarm->rollover = 0;
   50ad4:	e0bfff17 	ldw	r2,-4(fp)
   50ad8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   50adc:	e0bfff17 	ldw	r2,-4(fp)
   50ae0:	10800217 	ldw	r2,8(r2)
   50ae4:	d0e71917 	ldw	r3,-25500(gp)
   50ae8:	18801d36 	bltu	r3,r2,50b60 <alt_tick+0xd8>
   50aec:	e0bfff17 	ldw	r2,-4(fp)
   50af0:	10800403 	ldbu	r2,16(r2)
   50af4:	10803fcc 	andi	r2,r2,255
   50af8:	1000191e 	bne	r2,zero,50b60 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   50afc:	e0bfff17 	ldw	r2,-4(fp)
   50b00:	10800317 	ldw	r2,12(r2)
   50b04:	e0ffff17 	ldw	r3,-4(fp)
   50b08:	18c00517 	ldw	r3,20(r3)
   50b0c:	1809883a 	mov	r4,r3
   50b10:	103ee83a 	callr	r2
   50b14:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   50b18:	e0bffd17 	ldw	r2,-12(fp)
   50b1c:	1000031e 	bne	r2,zero,50b2c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   50b20:	e13fff17 	ldw	r4,-4(fp)
   50b24:	00509e40 	call	509e4 <alt_alarm_stop>
   50b28:	00000d06 	br	50b60 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   50b2c:	e0bfff17 	ldw	r2,-4(fp)
   50b30:	10c00217 	ldw	r3,8(r2)
   50b34:	e0bffd17 	ldw	r2,-12(fp)
   50b38:	1887883a 	add	r3,r3,r2
   50b3c:	e0bfff17 	ldw	r2,-4(fp)
   50b40:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   50b44:	e0bfff17 	ldw	r2,-4(fp)
   50b48:	10c00217 	ldw	r3,8(r2)
   50b4c:	d0a71917 	ldw	r2,-25500(gp)
   50b50:	1880032e 	bgeu	r3,r2,50b60 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   50b54:	e0bfff17 	ldw	r2,-4(fp)
   50b58:	00c00044 	movi	r3,1
   50b5c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   50b60:	e0bffe17 	ldw	r2,-8(fp)
   50b64:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   50b68:	e0ffff17 	ldw	r3,-4(fp)
   50b6c:	d0a00c04 	addi	r2,gp,-32720
   50b70:	18bfcf1e 	bne	r3,r2,50ab0 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   50b74:	0001883a 	nop
}
   50b78:	0001883a 	nop
   50b7c:	e037883a 	mov	sp,fp
   50b80:	dfc00117 	ldw	ra,4(sp)
   50b84:	df000017 	ldw	fp,0(sp)
   50b88:	dec00204 	addi	sp,sp,8
   50b8c:	f800283a 	ret

00050b90 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   50b90:	deffff04 	addi	sp,sp,-4
   50b94:	df000015 	stw	fp,0(sp)
   50b98:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   50b9c:	000170fa 	wrctl	ienable,zero
}
   50ba0:	0001883a 	nop
   50ba4:	e037883a 	mov	sp,fp
   50ba8:	df000017 	ldw	fp,0(sp)
   50bac:	dec00104 	addi	sp,sp,4
   50bb0:	f800283a 	ret

00050bb4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   50bb4:	defffe04 	addi	sp,sp,-8
   50bb8:	df000115 	stw	fp,4(sp)
   50bbc:	df000104 	addi	fp,sp,4
   50bc0:	e13fff15 	stw	r4,-4(fp)
   50bc4:	e0bfff17 	ldw	r2,-4(fp)
   50bc8:	10bffe84 	addi	r2,r2,-6
   50bcc:	10c00428 	cmpgeui	r3,r2,16
   50bd0:	1800191e 	bne	r3,zero,50c38 <alt_exception_cause_generated_bad_addr+0x84>
   50bd4:	100690ba 	slli	r3,r2,2
   50bd8:	00800174 	movhi	r2,5
   50bdc:	1885883a 	add	r2,r3,r2
   50be0:	1082fa17 	ldw	r2,3048(r2)
   50be4:	1000683a 	jmp	r2
   50be8:	00050c28 	cmpgeui	zero,zero,5168
   50bec:	00050c28 	cmpgeui	zero,zero,5168
   50bf0:	00050c38 	rdprs	zero,zero,5168
   50bf4:	00050c38 	rdprs	zero,zero,5168
   50bf8:	00050c38 	rdprs	zero,zero,5168
   50bfc:	00050c28 	cmpgeui	zero,zero,5168
   50c00:	00050c30 	cmpltui	zero,zero,5168
   50c04:	00050c38 	rdprs	zero,zero,5168
   50c08:	00050c28 	cmpgeui	zero,zero,5168
   50c0c:	00050c28 	cmpgeui	zero,zero,5168
   50c10:	00050c38 	rdprs	zero,zero,5168
   50c14:	00050c28 	cmpgeui	zero,zero,5168
   50c18:	00050c30 	cmpltui	zero,zero,5168
   50c1c:	00050c38 	rdprs	zero,zero,5168
   50c20:	00050c38 	rdprs	zero,zero,5168
   50c24:	00050c28 	cmpgeui	zero,zero,5168
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   50c28:	00800044 	movi	r2,1
   50c2c:	00000306 	br	50c3c <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   50c30:	0005883a 	mov	r2,zero
   50c34:	00000106 	br	50c3c <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
   50c38:	0005883a 	mov	r2,zero
  }
}
   50c3c:	e037883a 	mov	sp,fp
   50c40:	df000017 	ldw	fp,0(sp)
   50c44:	dec00104 	addi	sp,sp,4
   50c48:	f800283a 	ret

00050c4c <atexit>:
   50c4c:	200b883a 	mov	r5,r4
   50c50:	000f883a 	mov	r7,zero
   50c54:	000d883a 	mov	r6,zero
   50c58:	0009883a 	mov	r4,zero
   50c5c:	0050d0c1 	jmpi	50d0c <__register_exitproc>

00050c60 <exit>:
   50c60:	defffe04 	addi	sp,sp,-8
   50c64:	000b883a 	mov	r5,zero
   50c68:	dc000015 	stw	r16,0(sp)
   50c6c:	dfc00115 	stw	ra,4(sp)
   50c70:	2021883a 	mov	r16,r4
   50c74:	0050d9c0 	call	50d9c <__call_exitprocs>
   50c78:	00800174 	movhi	r2,5
   50c7c:	110c6217 	ldw	r4,12680(r2)
   50c80:	20800f17 	ldw	r2,60(r4)
   50c84:	10000126 	beq	r2,zero,50c8c <exit+0x2c>
   50c88:	103ee83a 	callr	r2
   50c8c:	8009883a 	mov	r4,r16
   50c90:	004e5000 	call	4e500 <_exit>

00050c94 <memcmp>:
   50c94:	30800130 	cmpltui	r2,r6,4
   50c98:	10000b1e 	bne	r2,zero,50cc8 <memcmp+0x34>
   50c9c:	2144b03a 	or	r2,r4,r5
   50ca0:	108000cc 	andi	r2,r2,3
   50ca4:	1000171e 	bne	r2,zero,50d04 <memcmp+0x70>
   50ca8:	20c00017 	ldw	r3,0(r4)
   50cac:	28800017 	ldw	r2,0(r5)
   50cb0:	1880141e 	bne	r3,r2,50d04 <memcmp+0x70>
   50cb4:	31bfff04 	addi	r6,r6,-4
   50cb8:	30800128 	cmpgeui	r2,r6,4
   50cbc:	21000104 	addi	r4,r4,4
   50cc0:	29400104 	addi	r5,r5,4
   50cc4:	103ff81e 	bne	r2,zero,50ca8 <memcmp+0x14>
   50cc8:	30bfffc4 	addi	r2,r6,-1
   50ccc:	30000b26 	beq	r6,zero,50cfc <memcmp+0x68>
   50cd0:	11800044 	addi	r6,r2,1
   50cd4:	218d883a 	add	r6,r4,r6
   50cd8:	00000106 	br	50ce0 <memcmp+0x4c>
   50cdc:	21800726 	beq	r4,r6,50cfc <memcmp+0x68>
   50ce0:	20800003 	ldbu	r2,0(r4)
   50ce4:	28c00003 	ldbu	r3,0(r5)
   50ce8:	21000044 	addi	r4,r4,1
   50cec:	29400044 	addi	r5,r5,1
   50cf0:	10fffa26 	beq	r2,r3,50cdc <memcmp+0x48>
   50cf4:	10c5c83a 	sub	r2,r2,r3
   50cf8:	f800283a 	ret
   50cfc:	0005883a 	mov	r2,zero
   50d00:	f800283a 	ret
   50d04:	30bfffc4 	addi	r2,r6,-1
   50d08:	003ff106 	br	50cd0 <memcmp+0x3c>

00050d0c <__register_exitproc>:
   50d0c:	00800174 	movhi	r2,5
   50d10:	10cc6217 	ldw	r3,12680(r2)
   50d14:	18805217 	ldw	r2,328(r3)
   50d18:	10001726 	beq	r2,zero,50d78 <__register_exitproc+0x6c>
   50d1c:	10c00117 	ldw	r3,4(r2)
   50d20:	1a000808 	cmpgei	r8,r3,32
   50d24:	40001b1e 	bne	r8,zero,50d94 <__register_exitproc+0x88>
   50d28:	20000b26 	beq	r4,zero,50d58 <__register_exitproc+0x4c>
   50d2c:	181090ba 	slli	r8,r3,2
   50d30:	02400044 	movi	r9,1
   50d34:	48d2983a 	sll	r9,r9,r3
   50d38:	1211883a 	add	r8,r2,r8
   50d3c:	41802215 	stw	r6,136(r8)
   50d40:	11806217 	ldw	r6,392(r2)
   50d44:	21000098 	cmpnei	r4,r4,2
   50d48:	324cb03a 	or	r6,r6,r9
   50d4c:	11806215 	stw	r6,392(r2)
   50d50:	41c04215 	stw	r7,264(r8)
   50d54:	20000b26 	beq	r4,zero,50d84 <__register_exitproc+0x78>
   50d58:	19000084 	addi	r4,r3,2
   50d5c:	200890ba 	slli	r4,r4,2
   50d60:	18c00044 	addi	r3,r3,1
   50d64:	10c00115 	stw	r3,4(r2)
   50d68:	1105883a 	add	r2,r2,r4
   50d6c:	11400015 	stw	r5,0(r2)
   50d70:	0005883a 	mov	r2,zero
   50d74:	f800283a 	ret
   50d78:	18805304 	addi	r2,r3,332
   50d7c:	18805215 	stw	r2,328(r3)
   50d80:	003fe606 	br	50d1c <__register_exitproc+0x10>
   50d84:	11006317 	ldw	r4,396(r2)
   50d88:	2252b03a 	or	r9,r4,r9
   50d8c:	12406315 	stw	r9,396(r2)
   50d90:	003ff106 	br	50d58 <__register_exitproc+0x4c>
   50d94:	00bfffc4 	movi	r2,-1
   50d98:	f800283a 	ret

00050d9c <__call_exitprocs>:
   50d9c:	defff704 	addi	sp,sp,-36
   50da0:	00800174 	movhi	r2,5
   50da4:	dcc00315 	stw	r19,12(sp)
   50da8:	14cc6217 	ldw	r19,12680(r2)
   50dac:	dc800215 	stw	r18,8(sp)
   50db0:	dfc00815 	stw	ra,32(sp)
   50db4:	9c805217 	ldw	r18,328(r19)
   50db8:	ddc00715 	stw	r23,28(sp)
   50dbc:	dd800615 	stw	r22,24(sp)
   50dc0:	dd400515 	stw	r21,20(sp)
   50dc4:	dd000415 	stw	r20,16(sp)
   50dc8:	dc400115 	stw	r17,4(sp)
   50dcc:	dc000015 	stw	r16,0(sp)
   50dd0:	90001026 	beq	r18,zero,50e14 <__call_exitprocs+0x78>
   50dd4:	202b883a 	mov	r21,r4
   50dd8:	282d883a 	mov	r22,r5
   50ddc:	05000044 	movi	r20,1
   50de0:	94000117 	ldw	r16,4(r18)
   50de4:	847fffc4 	addi	r17,r16,-1
   50de8:	88000a16 	blt	r17,zero,50e14 <__call_exitprocs+0x78>
   50dec:	84000044 	addi	r16,r16,1
   50df0:	802090ba 	slli	r16,r16,2
   50df4:	9421883a 	add	r16,r18,r16
   50df8:	b0001126 	beq	r22,zero,50e40 <__call_exitprocs+0xa4>
   50dfc:	80804017 	ldw	r2,256(r16)
   50e00:	15800f26 	beq	r2,r22,50e40 <__call_exitprocs+0xa4>
   50e04:	8c7fffc4 	addi	r17,r17,-1
   50e08:	88bfffd8 	cmpnei	r2,r17,-1
   50e0c:	843fff04 	addi	r16,r16,-4
   50e10:	103ff91e 	bne	r2,zero,50df8 <__call_exitprocs+0x5c>
   50e14:	dfc00817 	ldw	ra,32(sp)
   50e18:	ddc00717 	ldw	r23,28(sp)
   50e1c:	dd800617 	ldw	r22,24(sp)
   50e20:	dd400517 	ldw	r21,20(sp)
   50e24:	dd000417 	ldw	r20,16(sp)
   50e28:	dcc00317 	ldw	r19,12(sp)
   50e2c:	dc800217 	ldw	r18,8(sp)
   50e30:	dc400117 	ldw	r17,4(sp)
   50e34:	dc000017 	ldw	r16,0(sp)
   50e38:	dec00904 	addi	sp,sp,36
   50e3c:	f800283a 	ret
   50e40:	90800117 	ldw	r2,4(r18)
   50e44:	81800017 	ldw	r6,0(r16)
   50e48:	10bfffc4 	addi	r2,r2,-1
   50e4c:	14401726 	beq	r2,r17,50eac <__call_exitprocs+0x110>
   50e50:	80000015 	stw	zero,0(r16)
   50e54:	303feb26 	beq	r6,zero,50e04 <__call_exitprocs+0x68>
   50e58:	a446983a 	sll	r3,r20,r17
   50e5c:	90806217 	ldw	r2,392(r18)
   50e60:	95c00117 	ldw	r23,4(r18)
   50e64:	1884703a 	and	r2,r3,r2
   50e68:	1000081e 	bne	r2,zero,50e8c <__call_exitprocs+0xf0>
   50e6c:	303ee83a 	callr	r6
   50e70:	90c00117 	ldw	r3,4(r18)
   50e74:	98805217 	ldw	r2,328(r19)
   50e78:	1dc0011e 	bne	r3,r23,50e80 <__call_exitprocs+0xe4>
   50e7c:	90bfe126 	beq	r18,r2,50e04 <__call_exitprocs+0x68>
   50e80:	103fe426 	beq	r2,zero,50e14 <__call_exitprocs+0x78>
   50e84:	1025883a 	mov	r18,r2
   50e88:	003fd506 	br	50de0 <__call_exitprocs+0x44>
   50e8c:	90806317 	ldw	r2,396(r18)
   50e90:	81002017 	ldw	r4,128(r16)
   50e94:	1886703a 	and	r3,r3,r2
   50e98:	1800061e 	bne	r3,zero,50eb4 <__call_exitprocs+0x118>
   50e9c:	200b883a 	mov	r5,r4
   50ea0:	a809883a 	mov	r4,r21
   50ea4:	303ee83a 	callr	r6
   50ea8:	003ff106 	br	50e70 <__call_exitprocs+0xd4>
   50eac:	94400115 	stw	r17,4(r18)
   50eb0:	003fe806 	br	50e54 <__call_exitprocs+0xb8>
   50eb4:	303ee83a 	callr	r6
   50eb8:	003fed06 	br	50e70 <__call_exitprocs+0xd4>
